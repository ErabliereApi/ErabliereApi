{
    "pipes": [],
    "interfaces": [
        {
            "name": "Chainable",
            "id": "interface-Chainable-a1b83a0fae3ffcb9afd5bc868dbd8342776b5cf05f25850ddac27082aef51bdf283d41e5f4bb663eb190a0a7c36748bf7aa95915de7353a369a7a0637ef5e6f8",
            "file": "cypress/support/commands.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "declare namespace Cypress {\r\n    interface Chainable {\r\n        login(): void;\r\n        checkoutEnabled(): Cypress.Chainable<boolean>;\r\n        forceVisit(url: string): void;\r\n    }\r\n}\r\n\r\nCypress.Commands.add('login', () => {\r\n    function isAzureAD(config: any) {\r\n        return config.tenantId != undefined && config.tenantId.length > 1;\r\n    }\r\n\r\n    cy.request({\r\n        method: \"GET\",\r\n        url: \"/assets/config/oauth-oidc.json\"\r\n    }).then(body => {\r\n        const config = body.body;\r\n\r\n        if (config.authEnable) {\r\n            if (isAzureAD(config)) {\r\n                // Check if there is already a token in local storage\r\n                // var token = localStorage.getItem(\"adal.idtoken\");\r\n\r\n                // if (token) {\r\n                //     // Check if the token is still valid\r\n                //     var expiresOn = localStorage.getItem(`adal.expiration.key${Cypress.env(\"clientId\")}`) ?? \"\";\r\n                //     var now = new Date();\r\n                //     var expiresOnDate = new Date(parseInt(expiresOn));\r\n                //     if (now < expiresOnDate) {\r\n                //         cy.log(\"Token is still valid, expire at \" + expiresOnDate);\r\n                //         return;\r\n                //     }\r\n                // }\r\n\r\n                cy.request({\r\n                    method: \"POST\",\r\n                    url: `https://login.microsoftonline.com/${config.tenantId}/oauth2/token`,\r\n                    form: true,\r\n                    body: {\r\n                        grant_type: \"client_credentials\",\r\n                        client_id: Cypress.env(\"clientId\"),\r\n                        client_secret: Cypress.env(\"clientSecret\"),\r\n                        scope: config.scopes\r\n                    },\r\n                }).then(response => {\r\n                    const ADALToken = response.body.access_token;\r\n                    const expiresOn = response.body.expires_on;\r\n\r\n                    localStorage.setItem(\"adal.token.keys\", `${Cypress.env(\"clientId\")}|`);\r\n                    localStorage.setItem(`adal.access.token.key${Cypress.env(\"clientId\")}`, ADALToken);\r\n                    localStorage.setItem(`adal.expiration.key${Cypress.env(\"clientId\")}`, expiresOn);\r\n                    localStorage.setItem(\"adal.idtoken\", ADALToken);\r\n                });\r\n            }\r\n            else {\r\n                cy.request({\r\n                    method: \"POST\",\r\n                    url: `${config.stsAuthority}/connect/token`,\r\n                    headers: {\r\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                        \"Authorization\": \"Basic cmFzcGJlcnJ5bG9jYWw6c2VjcmV0\"\r\n                    },\r\n                    form: true,\r\n                    body: \"grant_type=client_credentials&scope=erabliereapi\"\r\n                }).then(res => {\r\n                    sessionStorage.setItem(`oidc.user:${config.stsAuthority}:erabliereiu`, JSON.stringify(res.body))\r\n                })\r\n            }\r\n        }\r\n    })\r\n})\r\n\r\nCypress.Commands.add('checkoutEnabled', () => {\r\n    return cy.request({\r\n        method: \"GET\",\r\n        url: \"/assets/config/oauth-oidc.json\"\r\n    }).then(body => {\r\n        return body.body;\r\n    }).then(urlInfo => {\r\n        return cy.request({\r\n            method: \"GET\",\r\n            url: urlInfo.apiUrl + \"/api/v1/swagger.json\"\r\n        }).then(response => {\r\n            var checkoutEnabled = response.body.paths['/Checkout'] !== undefined;\r\n            return cy.wrap(checkoutEnabled);\r\n        })\r\n    })\r\n})\r\n\r\nCypress.Commands.add('forceVisit', url => {\r\n    cy.window().then(win => {\r\n        return win.open(url, '_self');\r\n    })\r\n})",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "checkoutEnabled",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<boolean>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "forceVisit",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "IAuthorisationSerivce",
            "id": "interface-IAuthorisationSerivce-f962cd5767731d1bebba4cfbc6ce7deabb995135df2c05fadc86dc22b00bcb0015efc2618f1a925183c11cfd359b348b957aeb4fd11ae408c71a005bfb2779e2",
            "file": "src/authorisation/iauthorisation-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from \"rxjs\";\r\nimport { AppUser } from \"src/model/appuser\";\r\nimport { AuthResponse } from \"src/model/authresponse\";\r\n\r\nexport interface IAuthorisationSerivce {\r\n    type: string;\r\n    loginChanged:Observable<Boolean>\r\n    login(): Promise<void>\r\n    isLoggedIn(): Promise<Boolean>\r\n    completeLogin(): Promise<AppUser>\r\n    logout(): void\r\n    completeLogout(): Promise<AuthResponse>\r\n    getAccessToken() : Promise<String | null>\r\n}",
            "properties": [
                {
                    "name": "loginChanged",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "completeLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AppUser>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "completeLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AuthResponse>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<String | null>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Boolean>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "Window",
            "id": "interface-Window-41e0a566f3503f8b2a83729dac65891c771117bbd49ba84932800984b3d972051f6a742c340b93ed6f44f8e89c9249a433e5189eab4c38ba7b4db6b7912c0e0e",
            "file": "src/app/app.module.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, NgModule, DoBootstrap, ApplicationRef, Injector } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { ErabliereComponent } from 'src/erablieres/erabliere.component';\r\nimport { DonneesComponent } from 'src/donnees/donnees.component';\r\nimport { GraphPannelComponent } from 'src/donnees/sub-panel/graphpanel.component';\r\nimport { BarilsComponent } from 'src/barils/barils.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AlerteComponent } from 'src/alerte/alerte.component';\r\nimport { AProposComponent } from 'src/apropos/apropos.component';\r\nimport { DocumentationComponent } from 'src/documentation/documentation.component';\r\nimport { BarPannelComponent } from 'src/donnees/sub-panel/barpannel.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SigninRedirectCallbackComponent } from 'src/authorisation/signin-redirect/signin-redirect-callback.component';\r\nimport { DashboardComponent } from 'src/dashboard/dashboard.component';\r\nimport { SignoutRedirectCallbackComponent } from 'src/authorisation/signout-redirect/signout-redirect-callback.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CapteurPannelsComponent } from 'src/donnees/sub-panel/capteurpannels.component';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { GraphiqueComponent } from 'src/graphique/graphique.component';\r\nimport { AjouterAlerteComponent } from 'src/alerte/ajouter-alerte.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModifierAlerteComponent } from 'src/alerte/modifier-alerte.component';\r\nimport { NotesComponent } from 'src/notes/notes.component';\r\nimport { AjouterNoteComponent } from 'src/notes/ajouter-note.component';\r\nimport { AjouterDonneeCapteurComponent } from 'src/donneeCapteurs/ajouter-donnee-capteur.component';\r\nimport { MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\r\nimport { BrowserCacheLocation, Configuration, IPublicClientApplication, LogLevel, PublicClientApplication } from '@azure/msal-browser';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthorisationFactoryService } from 'src/authorisation/authorisation-factory-service';\r\nimport { DateTimeSelector } from 'src/donnees/sub-panel/userinput/datetimeselector.component';\r\nimport { NoteComponent } from 'src/notes/note.component';\r\nimport { AjouterErabliereComponent } from 'src/erablieres/ajouter-erabliere.component';\r\nimport { ErabliereFormComponent } from 'src/erablieres/erabliere-form.component';\r\nimport { ModifierErabliereComponent } from 'src/erablieres/modifier-erabliere.component';\r\nimport { ModifierAccesUtilisateursComponent } from 'src/erablieres/modifier-acces-utilisateurs.component';\r\nimport { SelectCustomerComponent } from 'src/customer/select-customer.component';\r\nimport { EditAccessCompoenent } from 'src/access/edit-access.component';\r\n\r\ndeclare global {\r\n  interface Window { \r\n    appRef: ApplicationRef, \r\n    Cypress: any,\r\n    authorisationFactoryService: AuthorisationFactoryService\r\n   }\r\n}\r\n\r\nexport function initConfig(appConfig: EnvironmentService) {\r\n  return () => appConfig.loadConfig();\r\n}\r\n\r\nexport function MSALInstanceFactory(appConfig: EnvironmentService): IPublicClientApplication {\r\n  if (!appConfig.authEnable) {\r\n    return new PublicClientApplication({\r\n      auth: {\r\n        clientId: \"null\"\r\n      }\r\n    });\r\n  }\r\n\r\n  if (appConfig.clientId == undefined) {\r\n    throw new Error(\"/assets/config/oauth-oidc.json/clientId cannot be null when using AzureAD authentication mode\");\r\n  }\r\n\r\n  const msalConfig: Configuration = {\r\n    auth: {\r\n      clientId: appConfig.clientId,\r\n      authority: \"https://login.microsoftonline.com/\" + appConfig.tenantId,\r\n      redirectUri: \"/signin-callback\",\r\n      postLogoutRedirectUri: \"/signout-callback\",\r\n      navigateToLoginRequestUrl: true\r\n    },\r\n    cache: {\r\n      cacheLocation: BrowserCacheLocation.LocalStorage,\r\n      storeAuthStateInCookie: false,\r\n    },\r\n    system: {\r\n      loggerOptions: {\r\n        loggerCallback: (level: LogLevel, message: string, containsPii: boolean): void => {\r\n          if (containsPii) {\r\n            return;\r\n          }\r\n          switch (level) {\r\n            case LogLevel.Error:\r\n              console.error(message);\r\n              return;\r\n            case LogLevel.Info:\r\n              console.info(message);\r\n              return;\r\n            case LogLevel.Verbose:\r\n              console.debug(message);\r\n              return;\r\n            case LogLevel.Warning:\r\n              console.warn(message);\r\n              return;\r\n          }\r\n        },\r\n        piiLoggingEnabled: false\r\n      },\r\n      windowHashTimeout: 60000,\r\n      iframeHashTimeout: 6000,\r\n      loadFrameTimeout: 0,\r\n      asyncPopups: false\r\n    }\r\n  };\r\n\r\n  return new PublicClientApplication(msalConfig);\r\n}\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ErabliereComponent,\r\n    AjouterErabliereComponent,\r\n    ModifierErabliereComponent,\r\n    ErabliereFormComponent,\r\n    ModifierAccesUtilisateursComponent,\r\n    SelectCustomerComponent,\r\n    EditAccessCompoenent,\r\n    GraphiqueComponent,\r\n    DonneesComponent,\r\n    DashboardComponent,\r\n    GraphPannelComponent,\r\n    DateTimeSelector,\r\n    CapteurPannelsComponent,\r\n    BarPannelComponent,\r\n    BarilsComponent,\r\n    AlerteComponent,\r\n    AjouterAlerteComponent,\r\n    ModifierAlerteComponent,\r\n    AProposComponent,\r\n    DocumentationComponent,\r\n    NotesComponent,\r\n    NoteComponent,\r\n    AjouterNoteComponent,\r\n    AjouterDonneeCapteurComponent,\r\n    SigninRedirectCallbackComponent,\r\n    SignoutRedirectCallbackComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ChartsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initConfig,\r\n      deps: [EnvironmentService],\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory,\r\n      deps: [EnvironmentService]\r\n    },\r\n    MsalService\r\n  ]\r\n})\r\nexport class AppModule implements DoBootstrap { \r\n  constructor(private injector: Injector) {}\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n    appRef.bootstrap(AppComponent);\r\n\r\n    if (!environment.production) {\r\n      if (window.Cypress) {\r\n        window.appRef = appRef;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "appRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationRef",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "authorisationFactoryService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthorisationFactoryService",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "Cypress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthorisationFactoryService",
            "id": "injectable-AuthorisationFactoryService-efff85d9d41b0181204f3759b90c069c04ec63f8b424a5da940f841ab3a5bc3bb33d69cbb64590a6c95bdb7a8bfda78f5b9dc63410ee5897e8e8e8c6777d41b7",
            "file": "src/authorisation/authorisation-factory-service.ts",
            "properties": [
                {
                    "name": "_cache",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": true,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAuthorisationService",
                    "args": [],
                    "optional": false,
                    "returnType": "IAuthorisationSerivce",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { MsalService } from \"@azure/msal-angular\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EnvironmentService } from \"src/environments/environment.service\";\r\nimport { AuthorisationBypassService } from \"./authorisation-bypass-service\";\r\nimport { AuthorisationService } from \"./authorisation-service\";\r\nimport { AzureADAuthorisationService } from \"./azuread-autorisation-service\";\r\nimport { AzureADCypressAuthorisationService } from \"./azuread-cypress-autorisation-service\";\r\nimport { IAuthorisationSerivce } from \"./iauthorisation-service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthorisationFactoryService {\r\n    constructor(private _environment: EnvironmentService, private _msalService: MsalService) {\r\n\r\n    }\r\n\r\n    private _cache?: IAuthorisationSerivce\r\n\r\n    getAuthorisationService(): IAuthorisationSerivce {\r\n        if (this._cache == null) {\r\n            if (this._environment.authEnable == true) {\r\n                if (this._environment.tenantId != undefined && this._environment.tenantId?.length > 1) {\r\n                    if (!environment.production && window.Cypress) {\r\n                        this._cache = new AzureADCypressAuthorisationService();\r\n                    }\r\n                    else {\r\n                        this._cache = new AzureADAuthorisationService(this._msalService, this._environment);\r\n                    }\r\n                }\r\n                else {\r\n                    this._cache = new AuthorisationService(this._environment);\r\n                }\r\n            }\r\n            else {\r\n                this._cache = new AuthorisationBypassService();\r\n            }\r\n        }\r\n        \r\n        return this._cache;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_environment",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_msalService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_environment",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_msalService",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EnvironmentService",
            "id": "injectable-EnvironmentService-bcd7986f479e0d26cd1f28abbc8dc55822c05371a57519f68ee4fa2a4d98ae396ab4854d251e188e9a3d9babd0f33a4b54285b7876f61d5bdbc37070c19851b3",
            "file": "src/environments/environment.service.ts",
            "properties": [
                {
                    "name": "additionnalUrls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UrlModel[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "appRoot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "authEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "checkoutEnabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "scopes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "stsAuthority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "getAdditionnalUrls",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { OAuthConfig } from \"src/model/oauthConfig\";\r\nimport { UrlModel } from \"../model/urlModel\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EnvironmentService {\r\n  apiUrl?: string\r\n  appRoot?: string\r\n  clientId?: string\r\n  tenantId?: string\r\n  scopes?: string\r\n  stsAuthority?: string\r\n  authEnable?: boolean\r\n  additionnalUrls?: UrlModel[]\r\n  checkoutEnabled: boolean | undefined;\r\n\r\n  constructor(private _httpClient: HttpClient) {\r\n\r\n  }\r\n\r\n  loadConfig() {\r\n    this.getAdditionnalUrls();\r\n\r\n    return this._httpClient.get<OAuthConfig>(\"/assets/config/oauth-oidc.json\").toPromise().then(c => {\r\n      this.apiUrl = c.apiUrl;\r\n      this.appRoot = c.appRoot;\r\n      this.clientId = c.clientId;\r\n      this.tenantId = c.tenantId;\r\n      this.scopes = c.scopes;\r\n      this.stsAuthority = c.stsAuthority;\r\n      this.authEnable = c.authEnable;\r\n    })\r\n      .catch((err: any) => {\r\n        console.error(err);\r\n      });;\r\n  }\r\n\r\n  getAdditionnalUrls() {\r\n    return this._httpClient.get<UrlModel[]>(\"/assets/config/additionnalUrls.json\").toPromise().then(c => {\r\n      this.additionnalUrls = c;\r\n    })\r\n      .catch((err: any) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ErabliereApi",
            "id": "injectable-ErabliereApi-6fee53760546b3bea1a08db1bf7168bf94a1fdc5a9d0f02c9bdb566c66036d7f2a8a4747326a1d50d9bed5a66e19623c35686236d42bbcf8072a38beb144bab7",
            "file": "src/core/erabliereapi.service.ts",
            "properties": [
                {
                    "name": "_authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "activerAlerte",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "activerAlerteCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAlerte",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAlerteCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteCustomerAccess",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idCustomer",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idCustomer",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteErabliere",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteNote",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "noteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "noteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "desactiverAlerte",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "desactiverAlerteCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 185,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idAlerte",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAlertes",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Alerte[]>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAlertesCapteur",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AlerteCapteur[]>",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBarils",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Baril[]>",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCapteurs",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Capteur[]>",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCustomers",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Customer[]>",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getCustomersAccess",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CustomerAccess[]>",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDocumentations",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Documentation[]>",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDompeux",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<HttpResponse<Dompeux[]>>",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDonnees",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<HttpResponse<Donnee[]>>",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDonneesCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<HttpResponse<DonneeCapteur[]>>",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "debutFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "finFiltre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "xddr",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErablieres",
                    "args": [
                        {
                            "name": "my",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Erabliere[]>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "my",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErablieresDashboard",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<HttpResponse<Erabliere[]>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "getErablieresExpandCapteurs",
                    "args": [
                        {
                            "name": "my",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Erabliere[]>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "my",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNotes",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Note[]>",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOpenApiSpec",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "postAlerte",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerte",
                            "type": "Alerte",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerte",
                            "type": "Alerte",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postAlerteCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteCapteur",
                            "type": "AlerteCapteur",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<AlerteCapteur>",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteCapteur",
                            "type": "AlerteCapteur",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postDonneeCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "donneeCapteur",
                            "type": "PostDonneeCapteur",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<DonneeCapteur>",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "donneeCapteur",
                            "type": "PostDonneeCapteur",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postErabliere",
                    "args": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Erabliere>",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postNote",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "note",
                            "type": "Note",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Note>",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "note",
                            "type": "Note",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putAlerte",
                    "args": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerte",
                            "type": "Alerte",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliereSelectionnee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerte",
                            "type": "Alerte",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putAlerteCapteur",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerte",
                            "type": "AlerteCapteur",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerte",
                            "type": "AlerteCapteur",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putCustomerAccess",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "customerAccess",
                            "type": "PutCustomerAccess",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<CustomerAccess>",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "customerAccess",
                            "type": "PutCustomerAccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putErabliere",
                    "args": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "startCheckoutSession",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthorisationFactoryService } from 'src/authorisation/authorisation-factory-service';\r\nimport { IAuthorisationSerivce } from 'src/authorisation/iauthorisation-service';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { Alerte } from 'src/model/alerte';\r\nimport { AlerteCapteur } from 'src/model/alerteCapteur';\r\nimport { Baril } from 'src/model/baril';\r\nimport { Capteur } from 'src/model/capteur';\r\nimport { Customer } from 'src/model/customer';\r\nimport { CustomerAccess } from 'src/model/customerAccess';\r\nimport { Documentation } from 'src/model/documentation';\r\nimport { Dompeux } from 'src/model/dompeux';\r\nimport { Donnee } from 'src/model/donnee';\r\nimport { DonneeCapteur, PostDonneeCapteur } from 'src/model/donneeCapteur';\r\nimport { Erabliere } from 'src/model/erabliere';\r\nimport { Note } from 'src/model/note';\r\nimport { PutCustomerAccess } from 'src/model/putCustomerAccess';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ErabliereApi {\r\n    private _authService: IAuthorisationSerivce\r\n\r\n    constructor(private _httpClient: HttpClient,\r\n                authFactoryService: AuthorisationFactoryService,\r\n                private _environmentService: EnvironmentService) \r\n    { \r\n        this._authService = authFactoryService.getAuthorisationService();\r\n    }\r\n\r\n    async getErablieresDashboard(): Promise<HttpResponse<Erabliere[]>> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Erabliere[]>(this._environmentService.apiUrl + '/erablieres/dashboard', { headers: headers, observe: 'response' }).toPromise();\r\n    }\r\n\r\n    async getErablieres(my:boolean): Promise<Erabliere[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Erabliere[]>(this._environmentService.apiUrl + '/erablieres?my=' + my, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getErablieresExpandCapteurs(my:boolean): Promise<Erabliere[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`).set('Accept', 'application/json');\r\n        return await this._httpClient.get<Erabliere[]>(\r\n            this._environmentService.apiUrl + '/erablieres?my=' + my + '&$expand=Capteurs($filter=afficherCapteurDashboard eq true)', { headers: headers }).toPromise();\r\n    }\r\n\r\n    async putErabliere(erabliere: Erabliere): Promise<void> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<void>(this._environmentService.apiUrl + '/erablieres/' + erabliere.id, erabliere, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getAlertes(idErabliereSelectionnee:any): Promise<Alerte[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Alerte[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/alertes?additionalProperties=true\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getAlertesCapteur(idErabliereSelectionnee:any): Promise<AlerteCapteur[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<AlerteCapteur[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/alertesCapteur?additionnalProperties=true\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getCapteurs(idErabliereSelectionnee:any): Promise<Capteur[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Capteur[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/capteurs\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async postAlerte(idErabliereSelectionnee:any, alerte:Alerte): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.post<Alerte>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/alertes\", alerte, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async putAlerte(idErabliereSelectionnee:any, alerte:Alerte): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<Alerte>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/alertes\", alerte, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async putAlerteCapteur(idCapteur:any, alerte:AlerteCapteur): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<AlerteCapteur>(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/alerteCapteurs\", alerte, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async deleteAlerte(idErabliereSelectionnee:any, alerteId:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.delete(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/alertes/\" + alerteId, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async deleteAlerteCapteur(idCapteur:any, alerteId:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.delete(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/AlerteCapteurs/\" + alerteId, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getBarils(idErabliereSelectionnee:any): Promise<Baril[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Baril[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/baril\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getDonnees(idErabliereSelectionnee:any, debutFiltre:string, finFiltre:string, xddr?:any): Promise<HttpResponse<Donnee[]>> {\r\n        const token = await this._authService.getAccessToken();\r\n        let headers = new HttpHeaders()\r\n            .set('Authorization', `Bearer ${token}`);\r\n        if (xddr != null) {\r\n            headers = headers.set('x-ddr', xddr);\r\n        }\r\n        var httpCall = this._httpClient.get<Donnee[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/donnees?dd=\" + debutFiltre + \"&df=\" + finFiltre, { headers: headers, observe: 'response' });\r\n        return await httpCall.toPromise();\r\n    }\r\n\r\n    async getDonneesCapteur(idCapteur:any, debutFiltre:string, finFiltre: string, xddr?: any): Promise<HttpResponse<DonneeCapteur[]>> {\r\n        const token = await this._authService.getAccessToken();\r\n        let headers = new HttpHeaders()\r\n            .set('Authorization', `Bearer ${token}`);\r\n        if (xddr != null) {\r\n            headers = headers.set('x-ddr', xddr);\r\n        }\r\n        var httpCall = this._httpClient.get<DonneeCapteur[]>(this._environmentService.apiUrl + '/capteurs/' + idCapteur + \"/DonneesCapteur?dd=\" + debutFiltre + \"&df=\" + finFiltre, { headers: headers, observe: 'response' });\r\n        return await httpCall.toPromise();\r\n    }\r\n\r\n    async getDompeux(idErabliereSelectionnee:any, debutFiltre:string, finFiltre:string, xddr?:any): Promise<HttpResponse<Dompeux[]>> {\r\n        const token = await this._authService.getAccessToken();\r\n        let headers = new HttpHeaders()\r\n            .set('Authorization', `Bearer ${token}`);\r\n        if (xddr != null) {\r\n            headers = headers.set('x-ddr', xddr);\r\n        }\r\n        var httpCall = this._httpClient.get<Dompeux[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/dompeux?dd=\" + debutFiltre + \"&df=\" + finFiltre, { headers: headers, observe: 'response' });\r\n        return await httpCall.toPromise();\r\n    }\r\n\r\n    async getDocumentations(idErabliereSelectionnee:any): Promise<Documentation[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Documentation[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/documentation\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getNotes(idErabliereSelectionnee:any): Promise<Note[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Note[]>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/notes?$orderby=NoteDate desc\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async postNote(idErabliereSelectionnee:any, note:Note): Promise<Note> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.post<Note>(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/notes\", note, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async deleteNote(idErabliereSelectionnee:any, noteId:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.delete(this._environmentService.apiUrl + '/erablieres/' + idErabliereSelectionnee + \"/notes/\" + noteId, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async postErabliere(erabliere:Erabliere): Promise<Erabliere> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.post<Erabliere>(this._environmentService.apiUrl + '/erablieres', erabliere, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async postDonneeCapteur(idCapteur: any, donneeCapteur: PostDonneeCapteur): Promise<DonneeCapteur> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.post<DonneeCapteur>(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/DonneesCapteur\", donneeCapteur, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async postAlerteCapteur(idCapteur: any, alerteCapteur: AlerteCapteur): Promise<AlerteCapteur> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.post<AlerteCapteur>(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/AlerteCapteurs\", alerteCapteur, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async desactiverAlerteCapteur(idCapteur:any, idAlerte:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<AlerteCapteur>(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/AlerteCapteurs/\" + idAlerte + \"/Desactiver\", { idCapteur: idCapteur, id: idAlerte }, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async activerAlerteCapteur(idCapteur:any, idAlerte:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<AlerteCapteur>(this._environmentService.apiUrl + '/Capteurs/' + idCapteur + \"/AlerteCapteurs/\" + idAlerte + \"/Activer\", { idCapteur: idCapteur, id: idAlerte }, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async desactiverAlerte(idErabliere:any, idAlerte:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<AlerteCapteur>(this._environmentService.apiUrl + '/Erablieres/' + idErabliere + \"/Alertes/\" + idAlerte + \"/Desactiver\", { idErabliere: idErabliere, id: idAlerte }, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async activerAlerte(idErabliere:any, idAlerte:any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<AlerteCapteur>(this._environmentService.apiUrl + '/Erablieres/' + idErabliere + \"/Alertes/\" + idAlerte + \"/Activer\", { idErabliere: idErabliere, id: idAlerte }, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getCustomers(): Promise<Customer[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<Customer[]>(this._environmentService.apiUrl + '/Customers', { headers: headers }).toPromise();\r\n    }\r\n\r\n    async getCustomersAccess(idErabliere:any): Promise<CustomerAccess[]> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.get<CustomerAccess[]>(this._environmentService.apiUrl + '/Erablieres/' + idErabliere + \"/CustomersAccess\", { headers: headers }).toPromise();\r\n    }\r\n\r\n    async putCustomerAccess(idErabliere:any, customerAccess:PutCustomerAccess): Promise<CustomerAccess> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.put<CustomerAccess>(this._environmentService.apiUrl + '/Erablieres/' + idErabliere + \"/CustomerErabliere\", customerAccess, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async deleteCustomerAccess(idErabliere:any, idCustomer: any): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.delete(this._environmentService.apiUrl + '/Erablieres/' + idErabliere + \"/CustomersAccess/\" + idCustomer, { headers: headers }).toPromise();\r\n    }\r\n\r\n    async deleteErabliere(idErabliere:any, erabliere: Erabliere): Promise<any> {\r\n        const token = await this._authService.getAccessToken();\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return await this._httpClient.delete(this._environmentService.apiUrl + '/Erablieres/' + idErabliere, { headers: headers, body: erabliere }).toPromise();\r\n    }\r\n\r\n    async startCheckoutSession(): Promise<any> {\r\n        return await this._httpClient.post<any>(this._environmentService.apiUrl + \"/Checkout\", {}, {}).toPromise();\r\n    }\r\n\r\n    async getOpenApiSpec(): Promise<any> {\r\n        return await this._httpClient.get<any>(this._environmentService.apiUrl + \"/api/v1/swagger.json\", {}).toPromise();\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "_httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Alerte",
            "id": "class-Alerte-1ff08d53f3f9facab8f83fa70229042f2d6e050ea9c891aecfcae242ee166c3a6dd86aa79ff85ee2b1c03b21301f3afe4a946855f9f32ffb1b2c3de5e6ccc71f",
            "file": "src/model/alerte.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Alerte {\r\n  id?: any;\r\n  idErabliere: any;\r\n  envoyerA?: string;\r\n  temperatureThresholdLow?: string\r\n  temperatureThresholdHight?: string\r\n  vacciumThresholdLow?: string\r\n  vacciumThresholdHight?: string\r\n  niveauBassinThresholdLow?: string\r\n  niveauBassinThresholdHight?: string\r\n  isEnable?: boolean;\r\n  emails?: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "emails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "envoyerA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "niveauBassinThresholdHight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "niveauBassinThresholdLow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "temperatureThresholdHight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "temperatureThresholdLow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "vacciumThresholdHight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "vacciumThresholdLow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AlerteCapteur",
            "id": "class-AlerteCapteur-01cfe903085720442238ca103701c1020a879e0b36d9611bf396660b18b4ea24fade620f0f4d2ee7e117c63d2ceb69895b1a63733b995dbefae6cab2c490c732",
            "file": "src/model/alerteCapteur.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Capteur } from \"./capteur\";\r\n\r\nexport class AlerteCapteur {\r\n  id?: any;\r\n  idCapteur?: any;\r\n  envoyerA?: string;\r\n  minVaue?: number;\r\n  maxValue?: number;\r\n  dc?: string\r\n  isEnable?: boolean;\r\n  emails?: string[];\r\n\r\n  capteur?: Capteur;\r\n}\r\n",
            "properties": [
                {
                    "name": "capteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Capteur",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "dc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "emails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "envoyerA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "idCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "maxValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "minVaue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AlertesPage",
            "id": "class-AlertesPage-823f63bd8f8f91f1025cca186f778b3b292160733488436555981879c1192fcc6e77ec1bcf252e2effd7d62af469405f9d36167312a3e7a6b0df49fd37e9083f",
            "file": "cypress/pages/alertes.page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormUtil } from \"cypress/util/formUtil\"\r\n\r\nexport class AlertesPage {\r\n    getPageTitle(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        return cy.get('alerte-page.col-lg-10 > h3')\r\n    }\r\n    clickOnAddAlerteButton(): AlertesPage {\r\n        FormUtil.clickButton(\"alerte-page\", \"ajouter-alerte-btn\");\r\n        return this;\r\n    }\r\n    typeEmail(email: string): AlertesPage {\r\n        FormUtil.typeText(email, \"alerte-page\", \"destinataire\");\r\n        return this;\r\n    }\r\n    clickOnCreateButton(): AlertesPage {\r\n        FormUtil.clickButton(\"alerte-page\", \"creer-alerte-donnees-btn\");\r\n        return this;\r\n    }\r\n    getLastAlerteDonneesEmail(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        return cy.get('alerte-page').then($obj => {\r\n            // find the last row of the table and validate the email\r\n            return $obj.find(\"table tbody tr td:nth-child(3)\").last();\r\n        });\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "clickOnAddAlerteButton",
                    "args": [],
                    "optional": false,
                    "returnType": "AlertesPage",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickOnCreateButton",
                    "args": [],
                    "optional": false,
                    "returnType": "AlertesPage",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLastAlerteDonneesEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "typeEmail",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AlertesPage",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AppUser",
            "id": "class-AppUser-f906456bbfe082529855367b9f5cf2b27362fcd99779c1d2f436da9b8f420247295eb90f06960f36b9fde2d52dcc44248ce26306e784bdf8714f22d2d1e93f97",
            "file": "src/model/appuser.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AppUser {\r\n    \r\n}",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AProposPage",
            "id": "class-AProposPage-cd9e75238bf0d715b34d6358303548ce560b24e6284b24795710a0a79c78096fed36af2f66d8eb89c4b7fca1247fd4518123a488451ddf7cc7fdf44b15b1a1d7",
            "file": "cypress/pages/apropos.page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AProposPage {\r\n\r\n    /**\r\n     * Click sur le bouton pour acheter une clé d'api\r\n     * et retourn l'url de la page\r\n     * @returns Cypress.Chainable<string> - l'url de la page\r\n     * @example https://checkout.stripe.com/pay/cs_test_a1...\r\n     */\r\n    clickOnBuyApiKey(): Cypress.Chainable<string> {\r\n        cy.get('div > .container > .col-12 > div > .btn').click()\r\n\r\n        cy.wait(5000);\r\n\r\n        return cy.url();\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "clickOnBuyApiKey",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<string>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nClick sur le bouton pour acheter une clé d'api\net retourn l'url de la page\n```html\n```",
                    "description": "<p>Click sur le bouton pour acheter une clé d&#39;api\net retourn l&#39;url de la page</p>\n<div><pre class=\"line-numbers\"><code class=\"language-html\"></code></pre></div>",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 138,
                                "end": 145,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Cypress.Chainable<string> - l&#39;url de la page</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 200,
                                "end": 207,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "example"
                            },
                            "comment": "<p><a href=\"https://checkout.stripe.com/pay/cs_test_a1\">https://checkout.stripe.com/pay/cs_test_a1</a>...</p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AuthorisationBypassService",
            "id": "class-AuthorisationBypassService-8c1816e8eff402f48218ad8a061058c09bbc0fc4e260c1c740aaa4fc093fb0c617c180668cfbc7da26b20d8f2981d539bdad888c52fa2f38d5ce23e549c5f922",
            "file": "src/authorisation/authorisation-bypass-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable } from \"rxjs\";\r\nimport { AppUser } from \"src/model/appuser\";\r\nimport { AuthResponse } from \"src/model/authresponse\";\r\nimport { IAuthorisationSerivce } from \"./iauthorisation-service\";\r\n\r\nexport class AuthorisationBypassService implements IAuthorisationSerivce {\r\n    loginChanged: Observable<Boolean> = new Observable<Boolean>();\r\n    type: string = \"AuthDisabled\";\r\n\r\n    login(): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => { return resolve(); });\r\n    }\r\n    isLoggedIn(): Promise<Boolean> {\r\n        return new Promise<Boolean>((resolve, reject) => resolve(true));\r\n    }\r\n    completeLogin(): Promise<AppUser> {\r\n        return new Promise<AppUser>((resolve, reject) => resolve(new AppUser()));\r\n    }\r\n    logout(): void {\r\n        \r\n    }\r\n    completeLogout(): Promise<AuthResponse> {\r\n        return new Promise<AuthResponse>((resolve, reject) => resolve(new AuthResponse()));\r\n    }\r\n    getAccessToken(): Promise<String | null> {\r\n        return new Promise((resolve, reject) => {\r\n            return resolve(null);\r\n        });\r\n    }\r\n}",
            "properties": [
                {
                    "name": "loginChanged",
                    "defaultValue": "new Observable<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Boolean>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "defaultValue": "\"AuthDisabled\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "completeLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AppUser>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "completeLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AuthResponse>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<String | null>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Boolean>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAuthorisationSerivce"
            ]
        },
        {
            "name": "AuthorisationService",
            "id": "class-AuthorisationService-2ad0ba09657ea2f4ecf92b354588c2b6c11dfa61589ce8b2a085a335068c66bdf538437ffe28f4b980d7ae192e0d22e2c7bec91e4e04a22f0b38d5f8d179adcf",
            "file": "src/authorisation/authorisation-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UserManager, User, UserManagerSettings, SignoutResponse } from 'oidc-client'\r\nimport { Subject } from 'rxjs';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { AppUser } from 'src/model/appuser';\r\nimport { AuthResponse } from 'src/model/authresponse';\r\nimport { IAuthorisationSerivce } from './iauthorisation-service';\r\n\r\nexport class AuthorisationService implements IAuthorisationSerivce {\r\n    private _userManager: UserManager;\r\n    private _user?: User | null;\r\n    private _loginChangedSubject = new Subject<Boolean>();\r\n    type: string = \"IdentityServer\";\r\n    loginChanged = this._loginChangedSubject.asObservable();\r\n\r\n    constructor(_environmentService: EnvironmentService) {\r\n        const stsSettings:UserManagerSettings = {\r\n            authority: _environmentService.stsAuthority,\r\n            client_id: _environmentService.clientId,\r\n            client_secret: \"secret\",\r\n            redirect_uri: `${_environmentService.appRoot}/signin-callback`,\r\n            scope: \"openid profile erabliereapi\",\r\n            response_type: 'code',\r\n            post_logout_redirect_uri: `${_environmentService.stsAuthority}/signout-callback`\r\n        };\r\n        this._userManager = new UserManager(stsSettings);\r\n     }\r\n    \r\n     login(): Promise<void> {\r\n         return this._userManager.signinRedirect();\r\n     }\r\n\r\n     async isLoggedIn(): Promise<Boolean> {\r\n         const user = await this._userManager.getUser();\r\n         const isLoggedIn = !!user && !user.expired;\r\n         if (this._user !== user) {\r\n             this._loginChangedSubject.next(isLoggedIn);\r\n         }\r\n         this._user = user;\r\n         return isLoggedIn;\r\n     }\r\n\r\n    async completeLogin(): Promise<AppUser> {\r\n        const user = await this._userManager.signinRedirectCallback();\r\n        this._user = user;\r\n        this._loginChangedSubject.next(!!user && !user.expired);\r\n        return user;\r\n    }\r\n\r\n    logout() {\r\n        this._userManager.signoutRedirect();\r\n    }\r\n\r\n    completeLogout(): Promise<AuthResponse> {\r\n        return new Promise<AuthResponse>(() => {\r\n            this._user = null;\r\n            const signoutResponse = this._userManager.signoutRedirectCallback();\r\n            return new AuthResponse();\r\n        });\r\n    }\r\n\r\n    async getAccessToken() : Promise<String | null> {\r\n        const user = await this._userManager.getUser();\r\n        if (!!user && !user.expired) {\r\n            return user.access_token;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_loginChangedSubject",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": true,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_userManager",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserManager",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginChanged",
                    "defaultValue": "this._loginChangedSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "type",
                    "defaultValue": "\"IdentityServer\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "completeLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AppUser>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "completeLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AuthResponse>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<String | null>",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Boolean>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<void>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAuthorisationSerivce"
            ]
        },
        {
            "name": "AuthResponse",
            "id": "class-AuthResponse-94383f706782d20b44108ef74162876cd40c85b791257c4391b1821d23ac3847d3b94a03db72f964e5ae9549dc920d74448717ed3ff0a6ea12350ed454427eab",
            "file": "src/model/authresponse.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AuthResponse {\r\n    \r\n}",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AzureADAuthorisationService",
            "id": "class-AzureADAuthorisationService-7348a8055f786ab405a9488884862abc2c9bc49b2064aa7c7e02f13d1baebce972eeb2b36ff0fa7ab684d7ad56359ffcf1bade81f7659fe2c827414b894658ed",
            "file": "src/authorisation/azuread-autorisation-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { MsalService } from '@azure/msal-angular';\r\nimport { AccountInfo, PopupRequest, SilentRequest } from '@azure/msal-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { AppUser } from 'src/model/appuser';\r\nimport { AuthResponse } from 'src/model/authresponse';\r\nimport { IAuthorisationSerivce } from './iauthorisation-service';\r\n\r\nexport class AzureADAuthorisationService implements IAuthorisationSerivce {\r\n  private _isLoggedIn: Boolean = false;\r\n  private _loginChangedSubject = new Subject<Boolean>();\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n  type: string = \"AzureAD\";\r\n\r\n  constructor(private _msalInstance: MsalService, private _environmentService: EnvironmentService) { }\r\n\r\n  async login() {\r\n    const popupParam: PopupRequest = {\r\n      scopes: this._environmentService.scopes?.split(' ') ?? [],\r\n      prompt: \"select_account\"\r\n    }\r\n    var appUser = await this._msalInstance.loginPopup(popupParam).toPromise().then(response => {\r\n      return this.completeLogin();\r\n    });\r\n    console.log(\"AppUser\", appUser);\r\n  }\r\n\r\n  isLoggedIn(): Promise<Boolean> {\r\n    return new Promise(async (resolve, reject) => {\r\n      let user = this.getUser();\r\n\r\n      this._isLoggedIn = user != null;\r\n\r\n      return resolve(this._isLoggedIn);\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n    return new Promise<AppUser>((resolve, reject) => {\r\n      const user = this.getUser();\r\n      if (user != null) {\r\n        this._isLoggedIn = true;\r\n        this._loginChangedSubject.next(true);\r\n        this._msalInstance.instance.setActiveAccount(user);\r\n        return resolve(new AppUser());\r\n      }\r\n\r\n      this._isLoggedIn = false;\r\n      this._loginChangedSubject.next(false);\r\n      this._msalInstance.instance.setActiveAccount(null);\r\n      return resolve(new AppUser());\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this._msalInstance.logoutPopup().subscribe(async response => {\r\n      await this.completeLogout();\r\n    });\r\n  }\r\n\r\n  completeLogout(): Promise<AuthResponse> {\r\n    return new Promise<AuthResponse>((resolve, reject) => {\r\n      this._isLoggedIn = false;\r\n      this._msalInstance.instance.setActiveAccount(null);\r\n      this._loginChangedSubject.next(false);\r\n      return resolve(new AuthResponse());\r\n    })\r\n  }\r\n\r\n  getAccessToken(): Promise<String | null> {\r\n    var user = this.getUser();\r\n    this._msalInstance.instance.setActiveAccount(user);\r\n\r\n    const requestObj: SilentRequest = {\r\n      scopes: this._environmentService.scopes?.split(' ') ?? [],\r\n      authority: this._environmentService.stsAuthority,\r\n      account: this.getUser() ?? undefined,\r\n      forceRefresh: false\r\n    };\r\n\r\n    return this._msalInstance.acquireTokenSilent(requestObj).toPromise().then(authResult => {\r\n      if (this._isLoggedIn == false) {\r\n        this.completeLogin();\r\n      }\r\n      return authResult.accessToken;\r\n    }).catch(reason => {\r\n      console.log(reason);\r\n      this._isLoggedIn = false;\r\n      this._msalInstance.instance.setActiveAccount(null);\r\n      this._loginChangedSubject.next(false);\r\n      return null;\r\n    });\r\n  }\r\n\r\n  getUser(): AccountInfo | null {\r\n    var user = null;\r\n    if (this._msalInstance.instance.getAllAccounts().length > 0) {\r\n      user = this._msalInstance.instance.getAllAccounts()[0];\r\n    }\r\n    return user;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_msalInstance",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_msalInstance",
                        "type": "MsalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_loginChangedSubject",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginChanged",
                    "defaultValue": "this._loginChangedSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "type",
                    "defaultValue": "\"AzureAD\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "completeLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "completeLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<AuthResponse>",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<String | null>",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "AccountInfo | null",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Boolean>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAuthorisationSerivce"
            ]
        },
        {
            "name": "AzureADCypressAuthorisationService",
            "id": "class-AzureADCypressAuthorisationService-46e05d2360094e8892fb37c3c10bbfc38aac9f0bd0d5dfe0c24b2df240940e54abff6d8a18c8f4d5c99e226cbbb840869901c17cd411fdcf906d7874271e9566",
            "file": "src/authorisation/azuread-cypress-autorisation-service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Subject } from 'rxjs';\r\nimport { AppUser } from 'src/model/appuser';\r\nimport { AuthResponse } from 'src/model/authresponse';\r\nimport { IAuthorisationSerivce } from './iauthorisation-service';\r\n\r\nexport class AzureADCypressAuthorisationService implements IAuthorisationSerivce {\r\n  private _isLoggingIn = Boolean();\r\n  private _loginChangedSubject = new Subject<Boolean>();\r\n  type: string = \"AzureADCypress\";\r\n  loginChanged = this._loginChangedSubject.asObservable();\r\n\r\n  async login() {\r\n    var appUser = await this.completeLogin();\r\n    console.log(appUser);\r\n  }\r\n\r\n  isLoggedIn(): Promise<Boolean> {\r\n    return new Promise<Boolean>((resolve, reject) => {\r\n      if (this.getAccessToken() != null && this._isLoggingIn == false) {\r\n        this._isLoggingIn = true;\r\n        this._loginChangedSubject.next(true);\r\n      }\r\n\r\n      return resolve(this._isLoggingIn);\r\n    });\r\n  }\r\n\r\n  completeLogin() {\r\n    return new Promise<AppUser>((resolve, reject) => {\r\n      if (this._isLoggingIn == false) {\r\n        this._isLoggingIn = true;\r\n        this._loginChangedSubject.next(true);\r\n      }\r\n      return resolve(new AppUser());\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.completeLogout();\r\n  }\r\n\r\n  completeLogout() {\r\n    return new Promise<AuthResponse>((resolve, reject) => {\r\n      this._isLoggingIn = false;\r\n      this._loginChangedSubject.next(false);\r\n      return resolve(new AuthResponse());\r\n    });\r\n  }\r\n\r\n  getAccessToken(): Promise<String | null> {\r\n    return new Promise<String | null>((resolve, reject) => {\r\n        var token = localStorage.getItem(\"adal.idtoken\");\r\n\r\n        console.log(token);\r\n\r\n        if (token != null && this._isLoggingIn == false) {\r\n          this._isLoggingIn = true;\r\n          this._loginChangedSubject.next(true);\r\n        }\r\n\r\n        return resolve(token);\r\n    });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "_isLoggingIn",
                    "defaultValue": "Boolean()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_loginChangedSubject",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loginChanged",
                    "defaultValue": "this._loginChangedSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "defaultValue": "\"AzureADCypress\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "completeLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "completeLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAccessToken",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<String | null>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Boolean>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAuthorisationSerivce"
            ]
        },
        {
            "name": "Baril",
            "id": "class-Baril-82aa632daa68f2c1e22bf1ce054b2ab9f8da4b29b33779fd69b35ca69bfd8138b827f9828c695500062f0dc5076cb9ca9c41a60adde30703d382fdb24dfe77eb",
            "file": "src/model/baril.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Baril {\r\n    id?: any\r\n    df?: string\r\n    idErabliere?: any\r\n    qe?: string\r\n    q?: string\r\n}",
            "properties": [
                {
                    "name": "df",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "q",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "qe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Capteur",
            "id": "class-Capteur-8852e1d69c8c60b0fb0bc77306beaf340acab5374cc5d212d20141fafdafc60a79281db7f8cbd05c500e5b144f19c1b1e714ac7f91129dee637b8b5fc032a9c7",
            "file": "src/model/capteur.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DonneeCapteur } from \"./donneeCapteur\";\r\n\r\nexport class Capteur {\r\n    id?: number;\r\n    nom?: string;\r\n    symbole?: string;\r\n    afficherCapteurDashboard?: boolean;\r\n    ajouterDonneeDepuisInterface: boolean = false\r\n    dc?: string;\r\n    donnees?: DonneeCapteur[];\r\n}",
            "properties": [
                {
                    "name": "afficherCapteurDashboard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ajouterDonneeDepuisInterface",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "dc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "donnees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DonneeCapteur[]",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "nom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "symbole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Customer",
            "id": "class-Customer-73465df54f4ef6c9de40d62f1d1f91614f95c60dba8811b5e6f79369110671d62bfd10195ef4602852878c5e82af3c0af748ab226212c5d4ec28178d6f990984",
            "file": "src/model/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Customer {\r\n    id?: any\r\n    name?: string\r\n    uniqueName?: string\r\n    email?: string\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "uniqueName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomerAccess",
            "id": "class-CustomerAccess-a63af3c87584baa7b6e198323d12dc890a3e283c50c6ddece565805d7845167537bd0015d85a16feb1ffb20945bc45a821b296d4d69190f7d657fe60a2cb3b41",
            "file": "src/model/customerAccess.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Customer } from \"./customer\"\r\n\r\nexport class CustomerAccess {\r\n    id:any\r\n    idErabliere:any\r\n    idCustomer:any\r\n    customer?: Customer\r\n    access?:number\r\n}",
            "properties": [
                {
                    "name": "access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "customer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "idCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CustomerErabliere",
            "id": "class-CustomerErabliere-83004e57d3d08acd5a480bff93fdb9110d8800ed10a9c3c3ec597aa7e92d143ac934926998242094c618d37aaed3b7c6cdf1b3e38c339978051740814584dbd8",
            "file": "src/model/putCustomerAccess.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PutCustomerAccess {\r\n    idErabliere: any;\r\n    customerErablieres: CustomerErabliere[] = [new CustomerErabliere()];\r\n}\r\n\r\nexport class CustomerErabliere {\r\n    action?: number;\r\n    idCustomer: any;\r\n    access?: number;\r\n}",
            "properties": [
                {
                    "name": "access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "idCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Documentation",
            "id": "class-Documentation-1ef852cb496e93caeaa59e814c9c4cdfa9b5d926a87bc889364319228b5f4d9f137da7047414baf24054e09495c296f8122025db3b707f9934f8c5594a819151",
            "file": "src/model/documentation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Documentation {\r\n    id: any\r\n    idErabliere: any\r\n    title?: string\r\n    text?: string\r\n    fileExtension?: string\r\n    file?: string\r\n    created?: string\r\n}",
            "properties": [
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "fileExtension",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Dompeux",
            "id": "class-Dompeux-c90e2ced4ac5ece33513b5b630f083b0ba7b3a4ddcd4caf056ddaf09025abaedb87874aa7545ce98b2c729588a83b3fe391be07787628c7afbc2993e89cf1033",
            "file": "src/model/dompeux.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Dompeux {\r\n    id?:any\r\n    t?:any\r\n    dd?:any\r\n    df?:any\r\n}",
            "properties": [
                {
                    "name": "dd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "df",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "t",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Donnee",
            "id": "class-Donnee-2075f5d670148c27356c11c4e4ce70ddf046513acf726dbd7eb2fae924885ca287574e7ce4661b3a2a4fda583e9197ecf56c08701cc80da1c41434fc3e94d861",
            "file": "src/model/donnee.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Donnee {\r\n    id?:any\r\n    d?:Date\r\n    t?:number\r\n    nb?:number\r\n    v?:number\r\n    pi?:number\r\n    nboc?:number\r\n    iddp?:number\r\n}",
            "properties": [
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "iddp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "nb",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "nboc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "t",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "v",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DonneeCapteur",
            "id": "class-DonneeCapteur-5f78ee811b9c4814253516925963d14e25c1b478bb520d1b440628cf745766a2759e6d6edf63ba736b073fd7ac0b639ff9eff9dc2fea2ef0d890f18f2cfb3254",
            "file": "src/model/donneeCapteur.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DonneeCapteur {\r\n    id?: any;\r\n    valeur?: number;\r\n    text?: string;\r\n    d?: string;\r\n}\r\n\r\nexport class PostDonneeCapteur {\r\n    idCapteur?: any;\r\n    v?: number;\r\n    d?: string;\r\n}",
            "properties": [
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "valeur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Erabliere",
            "id": "class-Erabliere-1f2a90ee43d870c8f721dfb910c3320699965df150ffca22c5f6527c10e2105edf2fc0f0cf6c58cc0f172557ffe4ec4b47589f474381326d672145c762128e46",
            "file": "src/model/erabliere.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Capteur } from \"./capteur\";\r\n\r\nexport class Erabliere {\r\n    id?: any;\r\n    nom?: string;\r\n    ipRule?: string;\r\n    indiceOrdre?: number;\r\n    isPublic?: boolean;\r\n    afficherSectionBaril?: boolean;\r\n    afficherTrioDonnees?: boolean;\r\n    afficherSectionDompeux?: boolean;\r\n    capteurs?: Array<Capteur>;\r\n}",
            "properties": [
                {
                    "name": "afficherSectionBaril",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "afficherSectionDompeux",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "afficherTrioDonnees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "capteurs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Capteur>",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "indiceOrdre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ipRule",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "isPublic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "nom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FormUtil",
            "id": "class-FormUtil-b668ce6cb0a38817423eeabd5764b337277750229691675f90aae4a941a3d6ac122424bec75f1433de8e9883edf6f401da26c1aa37271bbfd251eac04c71cc29",
            "file": "cypress/util/formUtil.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class FormUtil {\r\n    static typeText(text: string, selector: string, formControl: string, timeout: number = 10000): void {\r\n        cy.get(selector, { timeout: timeout }).then(element => {\r\n            cy.wrap(element)\r\n                .find('input[formcontrolname=\"' + formControl + '\"]')\r\n                .type(text);\r\n        });\r\n    }\r\n    static clickButton(selector: string, buttonId: string, timeout: number = 10000): void {\r\n        cy.get(selector, { timeout: timeout }).then(noteComponent => {\r\n            cy.wrap(noteComponent)\r\n                .find('button[id=\"' + buttonId + '\"]')\r\n                .click();\r\n        });\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "clickButton",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "buttonId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeout",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "10000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "buttonId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeout",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "10000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "typeText",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formControl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeout",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "10000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formControl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeout",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "10000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GraphPannelCompoenent",
            "id": "class-GraphPannelCompoenent-256cf2e40daa189fa2dd292152dfd36c817f933f1b8e416fe82eab1ed1decd6bf92703633657d796b34bbea7d9f7f55addb40fef27b046714f3c92952ed36f35",
            "file": "cypress/pages/component/graphpannel.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class GraphPannelCompoenent {\r\n    \r\n    constructor(private pannelId: string) {\r\n\r\n    }\r\n\r\n    getAddButton(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        var addButton = cy.get(this.pannelId).then($pannel => {\r\n            var buttons = cy.wrap($pannel).find('button');\r\n            var addButton = buttons.filter(function(index, element) {\r\n                return element.innerText === \"Ajouter\";\r\n            });\r\n            return addButton;\r\n        });\r\n        return addButton;\r\n    }\r\n\r\n    getCancelButton(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        var cancelButton = cy.get(this.pannelId).then($pannel => {\r\n            var buttons = cy.wrap($pannel).find('button');\r\n            var cancelButton = buttons.filter(function(index, element) {\r\n                return element.innerText === \"Annuler\";\r\n            });\r\n            return cancelButton;\r\n        });\r\n        return cancelButton;\r\n    }\r\n\r\n    find(selector: string): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        var elem = cy.get(this.pannelId).then($pannel => {\r\n            var element = cy.wrap($pannel).find(selector);\r\n            return element;\r\n        });\r\n        return elem;\r\n    }\r\n\r\n    enterValue(value: string): void {\r\n        cy.get(this.pannelId).then($pannel => {\r\n            var valeurField = cy.wrap($pannel).find('input[name=\"valeur\"]');\r\n            valeurField.type(value);\r\n        });\r\n    }\r\n\r\n    enterDate(): void {\r\n        cy.get(this.pannelId).then($pannel => {\r\n            var dateField = cy.wrap($pannel).find('input[name=\"date\"]');\r\n            var localDate = new Date().toLocaleString('ca-FR');\r\n            var dateAndTime = localDate.split(',');\r\n            var dateInfo = dateAndTime[0].split('/');\r\n            var timeInfo = dateAndTime[1].split(':');\r\n            dateField.type(dateInfo[2].padStart(2, '0') + '-' + dateInfo[1].padStart(2, '0') + '-' + dateInfo[0].padStart(2, '0') + 'T' + timeInfo[0].trim().padStart(2, '0') + ':' + timeInfo[1].padStart(2, '0'));\r\n        });\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pannelId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "pannelId",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "enterDate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "enterValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "find",
                    "args": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selector",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAddButton",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCancelButton",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HomePage",
            "id": "class-HomePage-3fb299ba17b22195b6037f18f741c02d08c2df03f2aa584d0ee57203b0846b1ed3ee610b6726a55c55b5a4baf7703c3deb622b88a2c0ccaf3b71bb34c12166af",
            "file": "cypress/pages/home.page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AlertesPage } from \"./alertes.page\";\r\nimport { NotesPage } from \"./notes.page\";\r\nimport { GraphPannelCompoenent } from \"./component/graphpannel.component\";\r\nimport { AProposPage } from \"./apropos.page\";\r\n\r\nexport class HomePage {\r\n    visit(): HomePage {\r\n        cy.login();\r\n        cy.visit('/');\r\n        return this;\r\n    }\r\n\r\n    clickOnAlerteButtonNavMenu(): AlertesPage {\r\n        cy.waitFor('#nav-menu-alerte-button', 10000)\r\n        cy.get('#nav-menu-alerte-button', { timeout: 10000 }).click()\r\n        return new AlertesPage();\r\n    }\r\n\r\n    clickOnNotesButtonNavMenu(): NotesPage {\r\n        cy.waitFor('#nav-menu-notes-button', 10000)\r\n        cy.get('#nav-menu-notes-button', { timeout: 10000 }).click()\r\n        return new NotesPage();\r\n    }\r\n\r\n    clickOnAProposPage(): AProposPage {\r\n        cy.get('.container-fluid > .navbar-collapse > .navbar-nav > .nav-item:nth-child(5) > .nav-link').click();\r\n        return new AProposPage();\r\n    }\r\n\r\n    getGraphPannel(guidId: string): GraphPannelCompoenent {\r\n        return new GraphPannelCompoenent('#graph-pannel-' + guidId);\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "clickOnAlerteButtonNavMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "AlertesPage",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickOnAProposPage",
                    "args": [],
                    "optional": false,
                    "returnType": "AProposPage",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickOnNotesButtonNavMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "NotesPage",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getGraphPannel",
                    "args": [
                        {
                            "name": "guidId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "GraphPannelCompoenent",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "guidId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "visit",
                    "args": [],
                    "optional": false,
                    "returnType": "HomePage",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Note",
            "id": "class-Note-d26f83657c9a462679c4fd636d66aa25f2a343559cb3bf14756e8295faba194bf96797a4dc1270172dbf007757674381cb8959103742c7ceb432a80ed62f7fc9",
            "file": "src/model/note.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Note {\r\n  id: any\r\n  idErabliere: any\r\n  title?: string\r\n  text?: string\r\n  fileExtension?: string\r\n  file?: string\r\n  created?: string\r\n  noteDate?: string\r\n\r\n  // calculated field\r\n  decodedTextFile?: string\r\n}\r\n",
            "properties": [
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "decodedTextFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "fileExtension",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "noteDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NotesPage",
            "id": "class-NotesPage-a94eef038dd8c301b62f81861ff1e2cd4d1b1e918ee26dbab009a5abbd7e517556508e9bbf266ee7f9735e8a34ba4fe3c2c403a55c33c865df635767827d2cf7",
            "file": "cypress/pages/notes.page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FormUtil } from \"cypress/util/formUtil\";\r\n\r\nexport class NotesPage {\r\n    \r\n    getPageTitle(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        return cy.get('notes.col-lg-10 > h3');\r\n    }\r\n\r\n    getAddButton(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        var addButton = cy.get('#addNoteButton');\r\n        return addButton;\r\n    }\r\n\r\n    getCancelButton(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        var cancelButton = cy.get(\"#annulerCreerNote\");\r\n        return cancelButton;\r\n    }\r\n\r\n    enterNoteTitle(value: string): void {\r\n        FormUtil.typeText(value, \"notes\", \"title\");\r\n    }\r\n\r\n    enterNoteDescription(value: string): void {\r\n        FormUtil.typeText(value, \"notes\", \"text\");\r\n    }\r\n\r\n    enterNoteDate(date: string) {\r\n        FormUtil.typeText(date, \"notes\", \"noteDate\");\r\n    }\r\n\r\n    sendNote(): void {\r\n        FormUtil.clickButton(\"notes\", \"creerNote\");\r\n    }\r\n\r\n    addNote(title: string, content: string, date: string | undefined = undefined): NotesPage {\r\n        this.getAddButton()\r\n            .click();\r\n\r\n        this.enterNoteTitle(title);\r\n        this.enterNoteDescription(content);\r\n\r\n        if (date != undefined) {\r\n            this.enterNoteDate(date);\r\n        }\r\n\r\n        this.sendNote();\r\n\r\n        return this;\r\n    }\r\n\r\n    getNoteDescription(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        // get the first note of the page and check its description\r\n        return cy.get(\"note\").first().then(noteComponent => {\r\n            cy.wrap(noteComponent)\r\n                .find('p[class=\"noteDescription\"]')\r\n                .then(text => {\r\n                    return text;\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    getNoteTitle(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        // get the first note of the page and check its description\r\n        return cy.get(\"note\").first().then(noteComponent => {\r\n            cy.wrap(noteComponent)\r\n                .find('h4[class=\"mt-4\"]')\r\n                .then(text => {\r\n                    return text;\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    getNoteDate(): Cypress.Chainable<JQuery<HTMLElement>> {\r\n        // get the first note of the page and check its date\r\n        return cy.get(\"note\").first().then(noteComponent => {\r\n            cy.wrap(noteComponent)\r\n                .find('p[class=\"noteDate\"]')\r\n                .then(text => {\r\n                    return text;\r\n                }\r\n            );\r\n        });\r\n    }\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "addNote",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "date",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "NotesPage",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "content",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "date",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enterNoteDate",
                    "args": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enterNoteDescription",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enterNoteTitle",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAddButton",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCancelButton",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNoteDate",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNoteDescription",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNoteTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "Cypress.Chainable<JQuery<HTMLElement>>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendNote",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OAuthConfig",
            "id": "class-OAuthConfig-68c9bc2473f4a98fbaed628753218b03825d27ad5ceda695c3ab6723e3d2735c5e148bbfaa13ea476040a2271d346a67566e417dea2efbca92770631a950661c",
            "file": "src/model/oauthConfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class OAuthConfig {\r\n    apiUrl?: string\r\n    stsAuthority?: string\r\n    clientId?: string\r\n    tenantId?: string\r\n    scopes?: string\r\n    appRoot?: string\r\n    authEnable?: boolean\r\n}",
            "properties": [
                {
                    "name": "apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "appRoot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "authEnable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "scopes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "stsAuthority",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "tenantId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PostDonneeCapteur",
            "id": "class-PostDonneeCapteur-5f78ee811b9c4814253516925963d14e25c1b478bb520d1b440628cf745766a2759e6d6edf63ba736b073fd7ac0b639ff9eff9dc2fea2ef0d890f18f2cfb3254",
            "file": "src/model/donneeCapteur.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DonneeCapteur {\r\n    id?: any;\r\n    valeur?: number;\r\n    text?: string;\r\n    d?: string;\r\n}\r\n\r\nexport class PostDonneeCapteur {\r\n    idCapteur?: any;\r\n    v?: number;\r\n    d?: string;\r\n}",
            "properties": [
                {
                    "name": "d",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "idCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "v",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "PutCustomerAccess",
            "id": "class-PutCustomerAccess-83004e57d3d08acd5a480bff93fdb9110d8800ed10a9c3c3ec597aa7e92d143ac934926998242094c618d37aaed3b7c6cdf1b3e38c339978051740814584dbd8",
            "file": "src/model/putCustomerAccess.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PutCustomerAccess {\r\n    idErabliere: any;\r\n    customerErablieres: CustomerErabliere[] = [new CustomerErabliere()];\r\n}\r\n\r\nexport class CustomerErabliere {\r\n    action?: number;\r\n    idCustomer: any;\r\n    access?: number;\r\n}",
            "properties": [
                {
                    "name": "customerErablieres",
                    "defaultValue": "[new CustomerErabliere()]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomerErabliere[]",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UrlModel",
            "id": "class-UrlModel-9797ceb83f1cdccc6e8ab3e0b885bffd3a500e6cc8ea98ae04ab1169ed01d14cb30b28d009ad60b54a4e02815908ad0fc3b1f8a79fcdba25db2ceb3f92e794db",
            "file": "src/model/urlModel.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UrlModel {\r\n  href?: string\r\n  requiredLogin?: boolean\r\n  text?: string\r\n}\r\n",
            "properties": [
                {
                    "name": "href",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "requiredLogin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AjouterAlerteComponent",
            "id": "component-AjouterAlerteComponent-4501090905e79e91826d201856bf3e200c0ea0da37c80274adb87711e9476ce89df09396df0bb8b61f91e37165929f060f710f212d9658eb524e0f6172dcc8aa",
            "file": "src/alerte/ajouter-alerte.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ajouter-alerte-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "ajouter-alerte.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alertes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Array<Alerte>",
                    "decorators": []
                },
                {
                    "name": "alertesCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "Array<AlerteCapteur>",
                    "decorators": []
                },
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alerte",
                    "defaultValue": "new Alerte()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Alerte",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "alerteCapteur",
                    "defaultValue": "new AlerteCapteur()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlerteCapteur",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "alerteCapteurForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "alerteForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "capteurs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Capteur>",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "display",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "typeAlerte",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "typeAlerteList",
                    "defaultValue": "[\r\n        { id: 1, name: 'Alerte trio de donnée' },\r\n        { id: 2, name: 'Alerte de capteur' }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "typeAlerteSelectListForm",
                    "defaultValue": "new UntypedFormGroup({\r\n        state: new UntypedFormControl(this.typeAlerteList[0].id)\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "initializeForms",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonAjouterClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonAnnuleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonCreerAlerteCapteurClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonCreerClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeAlerteType",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\nimport { Alerte } from \"src/model/alerte\";\r\nimport { UntypedFormGroup, UntypedFormBuilder, UntypedFormControl } from \"@angular/forms\";\r\nimport { AlerteCapteur } from \"src/model/alerteCapteur\";\r\nimport { Capteur } from \"src/model/capteur\";\r\n\r\n@Component({\r\n    selector: 'ajouter-alerte-modal',\r\n    templateUrl: 'ajouter-alerte.component.html'\r\n})\r\nexport class AjouterAlerteComponent implements OnInit {\r\n\r\n    typeAlerteList = [\r\n        { id: 1, name: 'Alerte trio de donnée' },\r\n        { id: 2, name: 'Alerte de capteur' }\r\n    ];\r\n\r\n    typeAlerteSelectListForm = new UntypedFormGroup({\r\n        state: new UntypedFormControl(this.typeAlerteList[0].id)\r\n    });\r\n    \r\n    constructor(private _api: ErabliereApi, private fb: UntypedFormBuilder) {\r\n        this.alerteForm = this.fb.group({});\r\n        this.alerteCapteurForm = this.fb.group({});\r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.initializeForms();\r\n    }\r\n\r\n    initializeForms() {\r\n        this.alerteForm = this.fb.group({\r\n            destinataire: '',\r\n            temperatureMin: '',\r\n            temperatureMax: '',\r\n            vacciumMin: '',\r\n            vacciumMax: '',\r\n            niveauBassinMin: '',\r\n            niveauBassinMax: ''\r\n        });\r\n        this.alerteCapteurForm = this.fb.group({\r\n            destinataire: '',\r\n            min: '',\r\n            max: '',\r\n            idCapteur: ''\r\n        });\r\n    }\r\n    \r\n    display:string = \"\";\r\n\r\n    alerte:Alerte = new Alerte();\r\n    alerteCapteur:AlerteCapteur = new AlerteCapteur();\r\n\r\n    @Input() alertes?: Array<Alerte>;\r\n    @Input() alertesCapteur?: Array<AlerteCapteur>;\r\n\r\n    @Input() idErabliereSelectionee:any\r\n    capteurs: Array<Capteur> = [];\r\n\r\n    alerteForm: UntypedFormGroup;\r\n    alerteCapteurForm: UntypedFormGroup;\r\n\r\n    typeAlerte:number = 1;\r\n\r\n    onSubmit() {\r\n\r\n    }\r\n\r\n    onButtonAjouterClick() {\r\n        this.display = \"alerte\";\r\n    }\r\n\r\n    onButtonAnnuleClick() {\r\n        this.display = \"\";\r\n    }\r\n\r\n    onChangeAlerteType(event:any) {\r\n        this.typeAlerte = event.target.value;\r\n\r\n        if (this.typeAlerte == 2) {\r\n            this._api.getCapteurs(this.idErabliereSelectionee).then(r => {\r\n                this.capteurs = r;\r\n            });\r\n        }\r\n    }\r\n\r\n    onButtonCreerClick() {\r\n        if (this.alerte != undefined) {\r\n            this.alerte.idErabliere = this.idErabliereSelectionee;\r\n            this.alerte.envoyerA = this.alerteForm.controls['destinataire'].value;\r\n            this.alerte.temperatureThresholdLow = this.alerteForm.controls['temperatureMax'].value;\r\n            this.alerte.temperatureThresholdHight = this.alerteForm.controls['temperatureMin'].value;\r\n            this.alerte.vacciumThresholdLow = this.alerteForm.controls['vacciumMax'].value;\r\n            this.alerte.vacciumThresholdHight = this.alerteForm.controls['vacciumMin'].value;\r\n            this.alerte.niveauBassinThresholdLow = this.alerteForm.controls['niveauBassinMax'].value;\r\n            this.alerte.niveauBassinThresholdHight = this.alerteForm.controls['niveauBassinMin'].value;\r\n            this._api.postAlerte(this.idErabliereSelectionee, this.alerte)\r\n                     .then(r => {\r\n                         this.display = \"\";\r\n                         r.emails = r.envoyerA.split(\";\");\r\n                         this.alertes?.push(r);\r\n                     });\r\n        }\r\n        else {\r\n            console.log(\"this.alerte is undefined\");\r\n        }\r\n    }\r\n\r\n    onButtonCreerAlerteCapteurClick() {\r\n        if (this.alerteCapteur != undefined) {\r\n            this.alerteCapteur.idCapteur = this.alerteCapteurForm.controls['idCapteur'].value;\r\n            this.alerteCapteur.envoyerA = this.alerteCapteurForm.controls['destinataire'].value;\r\n            if (this.alerteCapteurForm.controls['min'].value != \"\") {\r\n                this.alerteCapteur.minVaue = parseInt(this.alerteCapteurForm.controls['min'].value);\r\n            } else {\r\n                this.alerteCapteur.minVaue = undefined;\r\n            }\r\n            if (this.alerteCapteurForm.controls['max'].value != \"\") {\r\n                this.alerteCapteur.maxValue = parseInt(this.alerteCapteurForm.controls['max'].value);\r\n            } else {\r\n                this.alerteCapteur.maxValue = undefined;\r\n            }\r\n            this._api.postAlerteCapteur(this.alerteCapteur.idCapteur, this.alerteCapteur)\r\n                     .then(r => {\r\n                         this.display = \"\";\r\n                         r.emails = r?.envoyerA?.split(\";\");\r\n                         this.alertesCapteur?.push(r);\r\n                     });\r\n        }\r\n        else {\r\n            console.log(\"this.alerteCapteur is undefined\");\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!display\">\r\n    <button id=\"ajouter-alerte-btn\" class=\"btn btn-primary\" (click)=\"onButtonAjouterClick()\">Ajouter</button>\r\n</div>\r\n<div *ngIf=\"display\">\r\n    <div>\r\n      <div>\r\n        <form [formGroup]=\"typeAlerteSelectListForm\">\r\n          <div class=\"form-group\">\r\n            <label for=\"typeAlerteSelect\">Type d'alerte</label>\r\n            <select class=\"form-control\" id=\"typeAlerteSelect\" formControlName=\"state\" (change)=\"onChangeAlerteType($event)\">\r\n              <option *ngFor=\"let typeAlerte of typeAlerteList\" [value]=\"typeAlerte.id\">{{typeAlerte.name}}</option>\r\n            </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"typeAlerte == 1\">\r\n      <form [formGroup]=\"alerteForm\">\r\n          <div class=\"form-group\">\r\n            Destinataires: <input class=\"form-control\" type=\"text\" formControlName=\"destinataire\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Temperature Min.: <input class=\"form-control\" type=\"text\" formControlName=\"temperatureMin\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Temperature Max.: <input class=\"form-control\" type=\"text\" formControlName=\"temperatureMax\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Vaccium Min.: <input class=\"form-control\" type=\"text\" formControlName=\"vacciumMin\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Vaccium Max.: <input class=\"form-control\" type=\"text\" formControlName=\"vacciumMax\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Niveau Bassin Min.: <input class=\"form-control\" type=\"text\" formControlName=\"niveauBassinMin\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Niveau Bassin Max.: <input class=\"form-control\" type=\"text\" formControlName=\"niveauBassinMax\">\r\n          </div>\r\n        <button id=\"creer-alerte-donnees-btn\" class=\"btn btn-primary\" (click)=\"onButtonCreerClick()\">Créer</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"onButtonAnnuleClick()\">Annuler</button>\r\n      </form>\r\n    </div>\r\n    <div *ngIf=\"typeAlerte == 2\">\r\n      <form [formGroup]=\"alerteCapteurForm\">\r\n          <div class=\"form-group\">\r\n            Capteur: <select class=\"form-control\" formControlName=\"idCapteur\">\r\n              <option *ngFor=\"let capteur of capteurs\" [value]=\"capteur.id\">{{capteur.nom}}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Destinataires: <input class=\"form-control\" type=\"text\" formControlName=\"destinataire\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Min.: <input class=\"form-control\" type=\"text\" formControlName=\"min\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            Max.: <input class=\"form-control\" type=\"text\" formControlName=\"max\">\r\n          </div>\r\n        <button id=\"creer-alerte-capteur-btn\" class=\"btn btn-primary\" (click)=\"onButtonCreerAlerteCapteurClick()\">Créer</button>\r\n        <button class=\"btn btn-secondary\" (click)=\"onButtonAnnuleClick()\">Annuler</button>\r\n      </form>\r\n    </div>\r\n</div>"
        },
        {
            "name": "AjouterDonneeCapteurComponent",
            "id": "component-AjouterDonneeCapteurComponent-a6c49d1165e3b960cd2de4be4c5fa51b151c6e40f4f1ac83a6ca90495ab83a928ee4346152dcc1937f3f634326338ba1f6a331128f111892d1695cd4a33b7c67",
            "file": "src/donneeCapteurs/ajouter-donnee-capteur.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ajouter-donnee-capteur",
            "styleUrls": [],
            "styles": [
                "\n        .border-top {\n            border-top: 1px solid #ccc;\n        }\n    "
            ],
            "template": "<button *ngIf=\"!display\" class=\"btn btn-primary\" (click)=\"afficherForm()\">Ajouter</button>\n<div *ngIf=\"display\" class=\"border-top\">\n    <h3>Ajouter une donnée</h3>\n    <form [formGroup]=\"donneeCapteurForm\">\n        <div class=\"form-group\">\n            <span *ngIf=\"generalErrorMessage\" class=\"text-danger\">{{ generalErrorMessage }}</span>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"valeur\">Valeur</label>\n            <input type=\"number\" class=\"form-control\" id=\"valeur\" name=\"valeur\" placeholder=\"Valeur\" formControlName=\"valeur\">\n            <div *ngIf=\"this.donneeCapteurForm.controls['valeur'].errors\">\n                <span class=\"text-danger\">{{ this.donneeCapteurForm.controls['valeur'].errors.message }}</span>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"date\">Date</label>\n            <input type=\"datetime-local\" class=\"form-control\" id=\"date\" name=\"date\" placeholder=\"Date\" formControlName=\"date\">\n            <div *ngIf=\"this.donneeCapteurForm.controls['date'].errors\">\n                <span class=\"text-danger\">{{ this.donneeCapteurForm.controls['date'].errors.message }}</span>\n            </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"ajouterDonnee()\">Ajouter</button>\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"annuler()\">Annuler</button>\n    </form>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "idCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "needToUpdate",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "donneeCapteurForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "generalErrorMessage",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "afficherForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ajouterDonnee",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "annuler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\nimport { PostDonneeCapteur } from \"src/model/donneeCapteur\";\r\n\r\n@Component({\r\n    selector: 'ajouter-donnee-capteur',\r\n    template: `\r\n        <button *ngIf=\"!display\" class=\"btn btn-primary\" (click)=\"afficherForm()\">Ajouter</button>\r\n        <div *ngIf=\"display\" class=\"border-top\">\r\n            <h3>Ajouter une donnée</h3>\r\n            <form [formGroup]=\"donneeCapteurForm\">\r\n                <div class=\"form-group\">\r\n                    <span *ngIf=\"generalErrorMessage\" class=\"text-danger\">{{ generalErrorMessage }}</span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"valeur\">Valeur</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"valeur\" name=\"valeur\" placeholder=\"Valeur\" formControlName=\"valeur\">\r\n                    <div *ngIf=\"this.donneeCapteurForm.controls['valeur'].errors\">\r\n                        <span class=\"text-danger\">{{ this.donneeCapteurForm.controls['valeur'].errors.message }}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"date\">Date</label>\r\n                    <input type=\"datetime-local\" class=\"form-control\" id=\"date\" name=\"date\" placeholder=\"Date\" formControlName=\"date\">\r\n                    <div *ngIf=\"this.donneeCapteurForm.controls['date'].errors\">\r\n                        <span class=\"text-danger\">{{ this.donneeCapteurForm.controls['date'].errors.message }}</span>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"ajouterDonnee()\">Ajouter</button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" (click)=\"annuler()\">Annuler</button>\r\n            </form>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .border-top {\r\n            border-top: 1px solid #ccc;\r\n        }\r\n    `]\r\n})\r\nexport class AjouterDonneeCapteurComponent implements OnInit {\r\n    @Input() idCapteur: any;\r\n    donneeCapteurForm: UntypedFormGroup;\r\n    display: boolean = false;\r\n    generalErrorMessage: string | null = null;\r\n\r\n    @Output() needToUpdate = new EventEmitter();\r\n\r\n    constructor(private api: ErabliereApi, private fb: UntypedFormBuilder) {\r\n        this.donneeCapteurForm = this.fb.group({});\r\n     }\r\n\r\n    ngOnInit(): void {\r\n        this.donneeCapteurForm = this.fb.group({\r\n            valeur: '',\r\n            date: ''\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n    }\r\n\r\n    ajouterDonnee() {\r\n        this.generalErrorMessage = null;\r\n        var donneeCapteur = new PostDonneeCapteur();\r\n        var validationError = false;\r\n        try {\r\n            donneeCapteur.v = parseInt(this.donneeCapteurForm.controls['valeur'].value);\r\n        } catch (error) {\r\n            this.donneeCapteurForm.controls['valeur'].setErrors({\r\n                'incorrect': true,\r\n                'message': 'Impossible de convertir la valeur en entier'\r\n            })\r\n            validationError = true;\r\n        }\r\n        try {\r\n            donneeCapteur.d = new Date(this.donneeCapteurForm.controls['date'].value).toISOString();\r\n        } catch (error) {\r\n            this.donneeCapteurForm.controls['date'].setErrors({\r\n                'incorrect': true,\r\n                'message': \"Impossible d'interpreter la date\"\r\n            })\r\n            validationError = true;\r\n        }\r\n        \r\n        if (validationError == false) {\r\n            donneeCapteur.idCapteur = this.idCapteur;\r\n\r\n            this.api.postDonneeCapteur(this.idCapteur, donneeCapteur).then(() => {\r\n                this.donneeCapteurForm.reset();\r\n                this.needToUpdate.emit();\r\n            }).catch(e => {\r\n                if (e.status == 400) {\r\n                    if (e.error.errors.V != undefined) {\r\n                        this.donneeCapteurForm.controls['valeur'].setErrors({\r\n                            'incorrect': true,\r\n                            'message': e.error.errors.V.join(', ')\r\n                        })\r\n                    }\r\n                    if (e.error.errors['$.D'] != undefined) {\r\n                        this.donneeCapteurForm.controls['date'].setErrors({\r\n                            'incorrect': true,\r\n                            'message': e.error.errors['$.D'].join(', ')\r\n                        })\r\n                    }\r\n                }\r\n                else {\r\n                    this.generalErrorMessage = \"Une erreur est survenue lors de l'ajout de la donnée\";\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    annuler() {\r\n        this.donneeCapteurForm.reset();\r\n        this.display = false;\r\n    }\r\n\r\n    afficherForm() {\r\n        this.display = true;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        .border-top {\n            border-top: 1px solid #ccc;\n        }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "AjouterErabliereComponent",
            "id": "component-AjouterErabliereComponent-1a705917ea13ec9504df8801b0a0fe316f52c00fa28a2065574e0424853aa55cbbfda3241caee5ecbcf9eab4c612fa6107d2ed57b2d675ea22ba2e85bd6d87ba",
            "file": "src/erablieres/ajouter-erabliere.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ajouter-erabliere",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ajouter-erabliere.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "shouldReloadErablieres",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "erabliereForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErabliereFormComponent",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ErabliereFormComponent"
                        }
                    ]
                },
                {
                    "name": "modalTitle",
                    "defaultValue": "\"Ajouter une erabliere\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ajouterErabliere",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { ErabliereFormComponent } from 'src/erablieres/erabliere-form.component'\r\n\r\n@Component({\r\n    selector: 'ajouter-erabliere',\r\n    templateUrl: './ajouter-erabliere.component.html',\r\n})\r\nexport class AjouterErabliereComponent implements OnInit {\r\n    @ViewChild(ErabliereFormComponent) erabliereForm?: ErabliereFormComponent;\r\n    modalTitle: string = \"Ajouter une erabliere\";\r\n    @Output() shouldReloadErablieres = new EventEmitter();\r\n\r\n    constructor(private _api: ErabliereApi) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ajouterErabliere() {\r\n        if (this.erabliereForm != undefined) {\r\n            if (this.erabliereForm.erabliere != undefined) {\r\n                let erabliere = this.erabliereForm.erabliere;\r\n\r\n                this._api.postErabliere(erabliere).then(() => {\r\n                    if (this.erabliereForm != undefined) {\r\n                        this.erabliereForm.erabliere = this.erabliereForm.getDefaultErabliere();\r\n                    }\r\n                    this.shouldReloadErablieres.emit();\r\n                });\r\n            }\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal fade\" \r\n     id=\"erabliereFormModal\" \r\n     tabindex=\"-1\" \r\n     role=\"dialog\" \r\n     aria-labelledby=\"erabliereFormModalLabel\" \r\n     aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"erabliereFormModalLabel\">{{ modalTitle }}</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <erabliere-form></erabliere-form>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Annuler</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"ajouterErabliere()\">Ajouter</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "AjouterNoteComponent",
            "id": "component-AjouterNoteComponent-c76ac115762271ee190228aceb966efde5b1efc7de268475f20d8141badd04c567991ed68e0040e4b5e9319f31dc89d73d5064dc0ed2c8638b3f6edb4ace299f",
            "file": "src/notes/ajouter-note.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ajouter-note",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "ajouter-note.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Note[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "needToUpdate",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "error",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "note",
                    "defaultValue": "new Note()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Note",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "noteForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "convertToBase64",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonAjouterClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonAnnuleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonCreerClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\nimport { UntypedFormGroup, UntypedFormBuilder, FormControl, Validators } from \"@angular/forms\";\r\nimport { Note } from \"src/model/note\";\r\n\r\n@Component({\r\n    selector: 'ajouter-note',\r\n    templateUrl: 'ajouter-note.component.html'\r\n})\r\nexport class AjouterNoteComponent implements OnInit {\r\n    constructor(private _api: ErabliereApi, private fb: UntypedFormBuilder) {\r\n        this.noteForm = this.fb.group({});\r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.initializeForm();\r\n    }\r\n\r\n    initializeForm() {\r\n        this.noteForm = this.fb.group({\r\n            title: ['', Validators.required],\r\n            text: new FormControl(''),\r\n            file: new FormControl(''),\r\n            fileBase64: new FormControl(''),\r\n            noteDate: new FormControl(''),\r\n        });\r\n    }\r\n    \r\n    display:boolean = false;\r\n\r\n    error: string | null = null;\r\n\r\n    note:Note = new Note();\r\n\r\n    @Input() notes?: Note[];\r\n\r\n    @Input() idErabliereSelectionee:any\r\n\r\n    @Output() needToUpdate = new EventEmitter();\r\n\r\n    noteForm: UntypedFormGroup;\r\n\r\n    onSubmit() {\r\n\r\n    }\r\n\r\n    onButtonAjouterClick() {\r\n        this.display = true;\r\n    }\r\n\r\n    onButtonAnnuleClick() {\r\n        this.display = false;\r\n    }\r\n\r\n    onButtonCreerClick() {\r\n        if (this.note != undefined) {\r\n            this.note.idErabliere = this.idErabliereSelectionee;\r\n            this.note.title = this.noteForm.controls['title'].value;\r\n            this.note.text = this.noteForm.controls['text'].value;\r\n            this.note.file = this.noteForm.controls['fileBase64'].value;\r\n            if (this.noteForm.controls['noteDate'].value != \"\") {\r\n                this.note.noteDate = this.noteForm.controls['noteDate'].value;\r\n            }\r\n            else {\r\n                this.note.noteDate = undefined;\r\n            }\r\n            this._api.postNote(this.idErabliereSelectionee, this.note)\r\n                     .then(r => {\r\n                        this.noteForm.reset();\r\n                        this.needToUpdate.emit();\r\n                      })\r\n                      .catch(e => {\r\n                        if (e.status == 400) {\r\n                            if (e.error.errors.Title != undefined) {\r\n                                this.noteForm.controls['title'].setErrors({\r\n                                    'incorrect': true,\r\n                                    'message': e.error.errors.Title.join(', ')\r\n                                })\r\n                            }\r\n                            if (e.error.errors.Text != undefined) {\r\n                                this.noteForm.controls['text'].setErrors({\r\n                                    'incorrect': true,\r\n                                    'message': e.error.errors.Text.join(', ')\r\n                                })\r\n                            }\r\n                            if (e.error.errors.FileBase64 != undefined) {\r\n                                this.noteForm.controls['file'].setErrors({\r\n                                    'incorrect': true,\r\n                                    'message': e.error.errors.FileBase64.join(', ')\r\n                                })\r\n                            }\r\n                            if (e.error.errors['$.noteDate'] != undefined) {\r\n                                this.noteForm.controls['noteDate'].setErrors({\r\n                                    'incorrect': true,\r\n                                    'message': e.error.errors['$.noteDate'].join(', ')\r\n                                })\r\n                            }\r\n                        }\r\n                        else {\r\n                            throw e;\r\n                        }\r\n                      });\r\n        }\r\n        else {\r\n            console.log(\"this.note is undefined\");\r\n        }\r\n    }\r\n\r\n    convertToBase64(event:any) {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => {\r\n            this.noteForm.controls['fileBase64'].setValue(reader.result?.toString().split(',')[1]);\r\n        };\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!display\">\r\n    <button id=\"addNoteButton\" class=\"btn btn-primary\" (click)=\"onButtonAjouterClick()\">Ajouter</button>\r\n</div>\r\n<div *ngIf=\"display\">\r\n    <form [formGroup]=\"noteForm\">\r\n        <div class=\"form-group\">\r\n          Titre: <input class=\"form-control\" type=\"text\" formControlName=\"title\">\r\n          <div *ngIf=\"this.noteForm.controls['title'].errors\">\r\n            <span class=\"text-danger\">{{ this.noteForm.controls['title'].errors.message }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Texte: <input class=\"form-control\" type=\"text\" formControlName=\"text\">\r\n          <div *ngIf=\"this.noteForm.controls['text'].errors\">\r\n            <span class=\"text-danger\">{{ this.noteForm.controls['text'].errors.message }}</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Fichier: <input class=\"form-control\" type=\"file\" formControlName=\"file\" (change)=\"convertToBase64($event)\">\r\n        </div>\r\n        <div *ngIf=\"this.noteForm.controls['file'].errors\">\r\n          <span class=\"text-danger\">{{ this.noteForm.controls['file'].errors.message }}</span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Date de la note: <input class=\"form-control\" type=\"text\" formControlName=\"noteDate\">\r\n          <div *ngIf=\"this.noteForm.dirty && this.noteForm.controls['noteDate'].errors\">\r\n            <span class=\"text-danger\">{{ this.noteForm.controls['noteDate'].errors.message }}</span>\r\n          </div>\r\n        </div>\r\n      <button id=\"creerNote\" class=\"btn btn-primary\" (click)=\"onButtonCreerClick()\">Créer</button>\r\n      <button id=\"annulerCreerNote\" class=\"btn btn-secondary\" (click)=\"onButtonAnnuleClick()\">Annuler</button>\r\n    </form>\r\n</div>"
        },
        {
            "name": "AlerteComponent",
            "id": "component-AlerteComponent-87b582b73c127be49aabeb69351091895c9ebb875c364eb9cfc0a7fcea2585f991c3fb030204fc3fd1c2c6c992c664d7c9c6498dc19bef488d4b814dbca34cf3",
            "file": "src/alerte/alerte.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "alerte-page",
            "styleUrls": [
                "./alerte.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./alerte.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alertes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Array<Alerte>",
                    "decorators": []
                },
                {
                    "name": "alertesCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Array<AlerteCapteur>",
                    "decorators": []
                },
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alerteCapteurEditForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AlerteCapteur",
                    "optional": true,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "alerteCapteurEditFormObservable",
                    "defaultValue": "this.alerteCapteurEditFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "alerteCapteurEditFormSubject",
                    "defaultValue": "new Subject<AlerteCapteur>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "alerteEditForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Alerte",
                    "optional": true,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "alerteEditFormObservable",
                    "defaultValue": "this.displayEditFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "alerteEditFormSubject",
                    "defaultValue": "new Subject<Alerte>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "displayEditAlerteCapteurForm",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "displayEditAlerteCapteurFormObservable",
                    "defaultValue": "this.displayEditFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "displayEditAlerteCapteurFormSubject",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "displayEditForm",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "displayEditFormObservable",
                    "defaultValue": "this.displayEditFormSubject.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "displayEditFormSubject",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "editAlerte",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "editAlerteCapteur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonActiverAlerteCapteurClick",
                    "args": [
                        {
                            "name": "capteurId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "capteurId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonActiverAlerteClick",
                    "args": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonDeleteAlerteCapteurClick",
                    "args": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "idCapteur",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonDeleteClick",
                    "args": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonDesactiverAlerteCapteurClick",
                    "args": [
                        {
                            "name": "capteurId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "capteurId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonDesactiverAlerteClick",
                    "args": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonModifierAlerteCapteurClick",
                    "args": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onButtonModifierClick",
                    "args": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "alerteId",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\nimport { Alerte } from \"src/model/alerte\";\r\nimport { AlerteCapteur } from \"src/model/alerteCapteur\";\r\n\r\n@Component({\r\n  selector: 'alerte-page',\r\n  templateUrl: './alerte.component.html',\r\n  styleUrls: ['./alerte.component.css']\r\n})\r\nexport class AlerteComponent implements OnInit {\r\n  constructor(private _api: ErabliereApi) { }\r\n\r\n  ngOnInit(): void {\r\n    this.displayEditFormSubject.subscribe(b => {\r\n      this.displayEditForm = b == \"alerte\" || b == \"alerteCapteur\";\r\n    });\r\n\r\n    this.alerteEditFormSubject.subscribe(b => {\r\n      if (this.alertes != undefined) {\r\n        var i = this.alertes.findIndex(a => a.id == this.alerteEditForm?.id);\r\n\r\n        this.alertes[i] = b;\r\n      }\r\n    });\r\n\r\n    this.alerteCapteurEditFormSubject.subscribe(b => {\r\n      if (this.alertesCapteur != undefined) {\r\n        var i = this.alertesCapteur.findIndex(a => a.id == this.alerteCapteurEditForm?.id);\r\n\r\n        this.alertesCapteur[i] = b;\r\n      }\r\n    });\r\n  }\r\n\r\n  @Input() alertes?: Array<Alerte>;\r\n  @Input() alertesCapteur?: Array<AlerteCapteur>;\r\n  @Input() idErabliereSelectionee: any\r\n\r\n  displayEditFormSubject = new Subject<string>();\r\n  displayEditFormObservable = this.displayEditFormSubject.asObservable();\r\n  displayEditForm: boolean = false;\r\n\r\n  alerteEditFormSubject = new Subject<Alerte>();\r\n  alerteEditFormObservable = this.displayEditFormSubject.asObservable();\r\n  alerteEditForm?: Alerte;\r\n\r\n  displayEditAlerteCapteurFormSubject = new Subject<Boolean>();\r\n  displayEditAlerteCapteurFormObservable = this.displayEditFormSubject.asObservable();\r\n  displayEditAlerteCapteurForm: boolean = false;\r\n\r\n  alerteCapteurEditFormSubject = new Subject<AlerteCapteur>();\r\n  alerteCapteurEditFormObservable = this.alerteCapteurEditFormSubject.asObservable();\r\n  alerteCapteurEditForm?: AlerteCapteur;\r\n\r\n  editAlerte: boolean = false;\r\n  editAlerteCapteur: boolean = false;\r\n\r\n  onButtonModifierClick(alerteId: any) {\r\n    this.alerteEditForm = this.alertes?.find(a => a.id == alerteId);\r\n    this.alerteEditFormSubject.next(this.alerteEditForm);\r\n    this.displayEditFormSubject.next(\"alerte\");\r\n    this.editAlerte = true;\r\n    this.editAlerteCapteur = false;\r\n  }\r\n\r\n  onButtonModifierAlerteCapteurClick(alerteId: any) {\r\n    this.alerteCapteurEditForm = this.alertesCapteur?.find(a => a.id == alerteId);\r\n    this.alerteCapteurEditFormSubject.next(this.alerteCapteurEditForm);\r\n    this.displayEditFormSubject.next(\"alerteCapteur\");\r\n    this.editAlerte = false;\r\n    this.editAlerteCapteur = true;\r\n  }\r\n\r\n  onButtonDeleteClick(alerteId: any) {\r\n    if (confirm(\"Voulez-vous vraiment supprimer l'alerte \" + alerteId + \" ? \")) {\r\n      this._api.deleteAlerte(this.idErabliereSelectionee, alerteId)\r\n        .then(a => {\r\n          this._api.getAlertes(this.idErabliereSelectionee)\r\n            .then(a => {\r\n              this.alertes = a;\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  onButtonDeleteAlerteCapteurClick(idCapteur: any, alerteId: any) {\r\n    if (confirm(\"Voulez-vous vraiment supprimer l'alerte capteur \" + alerteId + \" ? \")) {\r\n      this._api.deleteAlerteCapteur(idCapteur, alerteId)\r\n        .then(a => {\r\n          this._api.getAlertesCapteur(this.idErabliereSelectionee)\r\n            .then(a => {\r\n              this.alertesCapteur = a;\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  onButtonDesactiverAlerteCapteurClick(capteurId: any, alerteId: any) {\r\n    this._api.desactiverAlerteCapteur(capteurId, alerteId)\r\n      .then(a => {\r\n        this._api.getAlertesCapteur(this.idErabliereSelectionee)\r\n          .then(a => {\r\n            this.alertesCapteur = a;\r\n          });\r\n      });\r\n  }\r\n\r\n  onButtonActiverAlerteCapteurClick(capteurId: any, alerteId: any) {\r\n    this._api.activerAlerteCapteur(capteurId, alerteId)\r\n      .then(a => {\r\n        this._api.getAlertesCapteur(this.idErabliereSelectionee)\r\n          .then(a => {\r\n            this.alertesCapteur = a;\r\n          });\r\n      });\r\n  }\r\n\r\n  onButtonDesactiverAlerteClick(alerteId: any) {\r\n    this._api.desactiverAlerte(this.idErabliereSelectionee, alerteId)\r\n      .then(a => {\r\n        this._api.getAlertes(this.idErabliereSelectionee)\r\n          .then(a => {\r\n            this.alertes = a;\r\n          });\r\n      });\r\n  }\r\n\r\n  onButtonActiverAlerteClick(alerteId: any) {\r\n    this._api.activerAlerte(this.idErabliereSelectionee, alerteId)\r\n      .then(a => {\r\n        this._api.getAlertes(this.idErabliereSelectionee)\r\n          .then(a => {\r\n            this.alertes = a;\r\n          });\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".shortid {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    max-width: 25px;\r\n}\r\n\r\n.feature_desc {\r\n    display: block;\r\n}\r\n.feature_desc:before {\r\n    content: \"\";\r\n    display: block;\r\n}",
                    "styleUrl": "./alerte.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3>Alertes</h3>\r\n<ajouter-alerte-modal *ngIf=\"!displayEditForm\"\r\n    [idErabliereSelectionee]=\"idErabliereSelectionee\"\r\n    [alertes]=\"alertes\"\r\n    [alertesCapteur]=\"alertesCapteur\">\r\n</ajouter-alerte-modal>\r\n<modifier-alerte-modal *ngIf=\"displayEditForm || displayEditAlerteCapteurForm\"\r\n    [idErabliereSelectionee]=\"idErabliereSelectionee\"\r\n    [displayEditFormSubject]=\"displayEditFormSubject\"\r\n    [alerteEditFormSubject]=\"alerteEditFormSubject\"\r\n    [alerte]=\"alerteEditForm\"\r\n    [alerteCapteurEditFormSubject]=\"alerteCapteurEditFormSubject\"\r\n    [alerteCapteur]=\"alerteCapteurEditForm\"\r\n    [editAlerte]=\"editAlerte\"\r\n    [editAlerteCapteur]=\"editAlerteCapteur\">\r\n</modifier-alerte-modal>\r\n<div>\r\n    <p *ngIf=\"alertes != null && alertes.length == 0 && alertesCapteur != null && alertesCapteur.length == 0\">Aucune alerte de configuré</p>\r\n\r\n    <div *ngIf=\"alertesCapteur != null && alertesCapteur.length > 0\">\r\n        <h4>Alerte capteurs</h4>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Id\r\n                    </th>\r\n                    <th>\r\n                        État\r\n                    </th>\r\n                    <th>\r\n                        Envoyer à\r\n                    </th>\r\n                    <th>\r\n                        Min.\r\n                    </th>\r\n                    <th>\r\n                        Max.\r\n                    </th>\r\n                    <th>\r\n                        Capteur\r\n                    </th>\r\n                    <th></th>\r\n                <tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let alerte of alertesCapteur\">\r\n                    <td class=\"shortid\">\r\n                        {{alerte.id}}\r\n                    </td>\r\n                    <td *ngIf=\"alerte.isEnable\">\r\n                        Activé\r\n                    </td>\r\n                    <td *ngIf=\"!alerte.isEnable\">\r\n                        Désactivé\r\n                    </td>\r\n                    <td>\r\n                      <span *ngFor=\"let email of alerte.emails\" class=\"feature_desc\">{{email}}</span>\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.minVaue}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.maxValue}}\r\n                    </td>\r\n                    <td class=\"shortid\">\r\n                        {{alerte.idCapteur}}\r\n                    </td>\r\n                    <td>\r\n                        <button *ngIf=\"alerte.isEnable\" class=\"btn btn-outline-warning btn-block\" (click)=\"onButtonDesactiverAlerteCapteurClick(alerte.idCapteur, alerte.id)\">désactiver</button>\r\n                        <button *ngIf=\"!alerte.isEnable\" class=\"btn btn-outline-success btn-block\" (click)=\"onButtonActiverAlerteCapteurClick(alerte.idCapteur, alerte.id)\">activer</button>\r\n                        <button class=\"btn btn-info btn-block\" (click)=\"onButtonModifierAlerteCapteurClick(alerte.id)\">modifier</button>\r\n                        <button class=\"btn btn-danger btn-block\" (click)=\"onButtonDeleteAlerteCapteurClick(alerte.idCapteur, alerte.id)\">supprimer</button>\r\n                    </td>\r\n                <tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div *ngIf=\"alertes != null && alertes.length > 0\">\r\n        <h4>Alerte trio données</h4>\r\n        <table *ngIf=\"alertes != null && alertes.length > 0\" class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        Id\r\n                    </th>\r\n                    <th>\r\n                        État\r\n                    </th>\r\n                    <th>\r\n                        Envoyer à\r\n                    </th>\r\n                    <th>\r\n                        Temperature min.\r\n                    </th>\r\n                    <th>\r\n                        Temperature max.\r\n                    </th>\r\n                    <th>\r\n                        Vaccium min.\r\n                    </th>\r\n                    <th>\r\n                        Vaccium max.\r\n                    </th>\r\n                    <th>\r\n                        Niveau bassin min.\r\n                    </th>\r\n                    <th>\r\n                        Niveau bassin max.\r\n                    </th>\r\n                    <th></th>\r\n                <tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let alerte of alertes\">\r\n                    <td class=\"shortid\">\r\n                        {{alerte.id}}\r\n                    </td>\r\n                    <td *ngIf=\"alerte.isEnable\">\r\n                        Activé\r\n                    </td>\r\n                    <td *ngIf=\"!alerte.isEnable\">\r\n                        Désactivé\r\n                    </td>\r\n                    <td>\r\n                      <span *ngFor=\"let email of alerte.emails\" class=\"feature_desc\">{{email}}</span>\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.temperatureThresholdHight}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.temperatureThresholdLow}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.vacciumThresholdHight}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.vacciumThresholdLow}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.niveauBassinThresholdHight}}\r\n                    </td>\r\n                    <td>\r\n                        {{alerte.niveauBassinThresholdLow}}\r\n                    </td>\r\n                    <td>\r\n                        <button *ngIf=\"alerte.isEnable\" class=\"btn btn-outline-warning btn-block\" (click)=\"onButtonDesactiverAlerteClick(alerte.id)\">désactiver</button>\r\n                        <button *ngIf=\"!alerte.isEnable\" class=\"btn btn-outline-success btn-block\" (click)=\"onButtonActiverAlerteClick(alerte.id)\">activer</button>\r\n                        <button class=\"btn btn-info btn-block\" (click)=\"onButtonModifierClick(alerte.id)\">modifier</button>\r\n                        <button class=\"btn btn-danger btn-block\" (click)=\"onButtonDeleteClick(alerte.id)\">supprimer</button>\r\n                    </td>\r\n                <tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d6c75a1c8f8669d88343e36879507ceede6af42734b8a5eda8992b31f0b1c42a3be3b2b282524651947e7bf88780ad9c0e77adbfc9b7948c3f1d7bcf23b5775a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n  <router-outlet></router-outlet>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  `\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AProposComponent",
            "id": "component-AProposComponent-7e98771b9f4ab4c05fc352917cbecc678d1a097fbcb418ebe8a65676293a43957d56bc5381202737ff17bc72b02261ef96d0c255b3b13167400d259b0f237a02",
            "file": "src/apropos/apropos.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "apropos",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./apropos.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkoutEnabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "supportEmail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "urlApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "buyApiKey",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { EnvironmentService } from \"src/environments/environment.service\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\n\r\n@Component({\r\n    selector: 'apropos',\r\n    templateUrl: \"./apropos.component.html\"\r\n})\r\nexport class AProposComponent {\r\n    urlApi?: string\r\n    checkoutEnabled?: boolean\r\n    supportEmail?: string\r\n    \r\n    constructor(private _enviromentService: EnvironmentService, private _erbliereApi: ErabliereApi){}\r\n\r\n    ngOnInit(): void {\r\n        this.urlApi = this._enviromentService.apiUrl;\r\n\r\n        this._erbliereApi.getOpenApiSpec().then(spec => {\r\n            this.supportEmail = spec.info.contact.email;\r\n            this.checkoutEnabled = spec.paths['/Checkout'] !== undefined;\r\n        });\r\n    }\r\n\r\n    buyApiKey(): void {\r\n        this._erbliereApi.startCheckoutSession().then(resonse => {\r\n            window.location.href = resonse.url;\r\n        });\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_enviromentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_erbliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_enviromentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_erbliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<h3>À Propos</h3>\r\n<hr />\r\n\r\n<div *ngIf=\"checkoutEnabled\">\r\n    <h4>Obtenir une clé d'api</h4>\r\n    <p>Il est possible d'obtenir une clé d'api au tarif de d'approximativement 15$ par mois. Après l'achat de la clé, vous receverez un courriel avec la clé d'api à insérer dans les requêtes.</p>\r\n    <button class=\"btn btn-primary\" (click)=\"buyApiKey()\">Obtenir une clé d'api</button>\r\n</div>\r\n\r\n<div *ngIf=\"supportEmail != ''\">\r\n    <h4 class=\"mt-4\">Obtenir un compte</h4>\r\n    <p>Envoyer un courriel à <a href=\"mailto:{{supportEmail}}\">{{supportEmail}}</a>.</p>\r\n</div>\r\n\r\n<h4 class=\"mt-4\">Spécification de l'api</h4>\r\n<a href=\"{{urlApi}}/api/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">Swagger</a>\r\n\r\n<h4 class=\"mt-4\">Érablière API</h4>\r\n<p>Projet en développement, le but est de rendre ouvertes les données reliées aux érablières en fournissant des mécanismes de monitorage, d'alerte et de partage de donnée entre multiples érablières.</p>\r\n\r\n<h4 class=\"mt-4\">Comment ça marche ?</h4>\r\n<p>\r\n    Des ordinateurs dans le nuage sont dédié et réceptionnent les données envoyées par divers équipements depuis des érablières. Les données peuvent ensuite être consultées à l'aide d'un navigateur web depuis un téléphone ou un ordinateur ayant accès à internet.\r\n    <br />\r\n    <br />\r\n    Pour savoir si un appareil déjà à l'érablière est compatible avec cette technologie, il faut que cet appareil soit en mesure d'effectuer des requêtes HTTP, ou de relayer l'information à un appareil ayant cette capacité.\r\n</p>\r\n\r\n<div *ngIf=\"supportEmail != ''\">\r\n    <h4 class=\"mt-4\">Recherche d'érablière à connecter</h4>\r\n    <p>Vous aimeriez participer au développement de ce projet ? Envoyer un courriel à <a href=\"mailto:{{supportEmail}}\">{{supportEmail}}</a>.</p>\r\n</div>\r\n\r\n<h4 class=\"mt-4\">Recherche des développeurs</h4>\r\n<p>Vous aimeriez participer au développement de ce projet ? Parcourir le code source du programme sur <a href=\"https://github.com/freddycoder/ErabliereApi\" target=\"_blank\">github</a>.</p>\r\n"
        },
        {
            "name": "BarilsComponent",
            "id": "component-BarilsComponent-6a9da349674edfa5e6ef4eaabc34ea417234c9511a545537fb31421486a1ecc1f146fec5bd3a5b7fd3630ce7a2a6cf13d784c1d6debf1a62cb213322b03b1cee",
            "file": "src/barils/barils.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "barils-panel",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"border-top\">\n    <h3>Barils</h3>\n    <h6>Id érablière {{ erabliereId }}</h6>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>\n                    Numéro\n                </th>\n                <th>\n                    Date fermeture\n                </th>\n                <th>\n                    Estimation\n                </th>\n                <th>\n                    Résultat après classement\n                </th>\n            <tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let baril of barils\">\n                <td>\n                    {{baril.id}}\n                </td>\n                <td>\n                    {{baril.df}}\n                </td>\n                <td>\n                    {{baril.qe}}\n                </td>\n                <td>\n                    {{baril.q}}\n                </td>\n            <tr>\n        </tbody>\n    </table>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "erabliereId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "barils",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Baril>",
                    "optional": true,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "fetchBaril",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Baril } from 'src/model/baril';\r\nimport { Erabliere } from 'src/model/erabliere';\r\n\r\n@Component({\r\n    selector: 'barils-panel',\r\n    template: `\r\n        <div class=\"border-top\">\r\n            <h3>Barils</h3>\r\n            <h6>Id érablière {{ erabliereId }}</h6>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            Numéro\r\n                        </th>\r\n                        <th>\r\n                            Date fermeture\r\n                        </th>\r\n                        <th>\r\n                            Estimation\r\n                        </th>\r\n                        <th>\r\n                            Résultat après classement\r\n                        </th>\r\n                    <tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let baril of barils\">\r\n                        <td>\r\n                            {{baril.id}}\r\n                        </td>\r\n                        <td>\r\n                            {{baril.df}}\r\n                        </td>\r\n                        <td>\r\n                            {{baril.qe}}\r\n                        </td>\r\n                        <td>\r\n                            {{baril.q}}\r\n                        </td>\r\n                    <tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    `\r\n})\r\nexport class BarilsComponent implements OnInit, OnChanges {\r\n    barils?:Array<Baril>;\r\n    @Input() erabliereId:any\r\n\r\n    constructor(private _erabliereApi : ErabliereApi) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.fetchBaril();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.fetchBaril();\r\n    }\r\n\r\n    fetchBaril() {\r\n        this._erabliereApi.getBarils(this.erabliereId).then(d => this.barils = d);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ]
        },
        {
            "name": "BarPannelComponent",
            "id": "component-BarPannelComponent-a79319860747f127fa83b48a4612146bb63d23ef7fd3574008af429a13fa761ce5f98beef0daed3b99aaca002ceec9e5b5b44343951a03281b4d9860077d0c03",
            "file": "src/donnees/sub-panel/barpannel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bar-panel",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"border-top\">\n    <h3>{{ titre }} {{ valeurActuel }} {{ symbole }}</h3>\n\n    <div class=\"btn-group\">\n        <div class=\"dropdown show\">\n            <a class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Durée {{ duree }}\n            </a>\n\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n            <a class=\"dropdown-item\" href=\"#\">12h</a>\n        </div>\n    </div>\n\n    </div>\n    <div class=\"chart-wrapper\">\n        <canvas baseChart class=\"chart\"\n            [datasets]=\"datasets\"\n            [labels]=\"timeaxes\"\n            [options]=\"lineChartOptions\"\n            [colors]=\"lineChartColors\"\n            [legend]=\"lineChartLegend\"\n            [chartType]=\"barChartType\"\n            [plugins]=\"lineChartPlugins\">\n        </canvas>\n    </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "barChartType",
                    "defaultValue": "'bar' as ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "ChartType",
                    "decorators": []
                },
                {
                    "name": "datasets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "ChartDataSets[]",
                    "decorators": []
                },
                {
                    "name": "symbole",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "timeaxes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Label[]",
                    "decorators": []
                },
                {
                    "name": "titre",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "valeurActuel",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseChartDirective",
                    "optional": true,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BaseChartDirective"
                        }
                    ]
                },
                {
                    "name": "duree",
                    "defaultValue": "\"12h\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "lineChartColors",
                    "defaultValue": "[\r\n        {\r\n            borderColor: 'black',\r\n            backgroundColor: 'rgba(33,42,234,0.78)',\r\n        }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "lineChartLegend",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "lineChartOptions",
                    "defaultValue": "{\r\n        responsive: true,\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    offsetGridLines: true\r\n                }\r\n            }]\r\n        }\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "lineChartPlugins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Color, Label, BaseChartDirective } from 'ng2-charts';\r\n\r\n@Component({\r\n    selector: 'bar-panel',\r\n    template: `\r\n        <div class=\"border-top\">\r\n            <h3>{{ titre }} {{ valeurActuel }} {{ symbole }}</h3>\r\n\r\n            <div class=\"btn-group\">\r\n                <div class=\"dropdown show\">\r\n                    <a class=\"btn btn-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Durée {{ duree }}\r\n                    </a>\r\n\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                    <a class=\"dropdown-item\" href=\"#\">12h</a>\r\n                </div>\r\n            </div>\r\n\r\n            </div>\r\n            <div class=\"chart-wrapper\">\r\n                <canvas baseChart class=\"chart\"\r\n                    [datasets]=\"datasets\" \r\n                    [labels]=\"timeaxes\" \r\n                    [options]=\"lineChartOptions\"\r\n                    [colors]=\"lineChartColors\" \r\n                    [legend]=\"lineChartLegend\" \r\n                    [chartType]=\"barChartType\" \r\n                    [plugins]=\"lineChartPlugins\">\r\n                </canvas>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class BarPannelComponent {\r\n    @ViewChild(BaseChartDirective) chart?: BaseChartDirective;\r\n\r\n    @Input() datasets: ChartDataSets[] = [];\r\n\r\n    @Input() timeaxes: Label[] = [];\r\n\r\n    @Input() barChartType = 'bar' as ChartType;\r\n\r\n    lineChartOptions: ChartOptions = {\r\n        responsive: true,\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    offsetGridLines: true\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    lineChartColors: Color[] = [\r\n        {\r\n            borderColor: 'black',\r\n            backgroundColor: 'rgba(33,42,234,0.78)',\r\n        }\r\n    ];\r\n\r\n    lineChartLegend = true;\r\n    lineChartPlugins = [];\r\n    \r\n    @Input() titre:string = \"\";\r\n    duree:string = \"12h\"\r\n    @Input() valeurActuel:string = \"\";\r\n    @Input() symbole:string = \"\";\r\n\r\n    constructor() { this.chart = undefined; }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 70
            }
        },
        {
            "name": "CapteurPannelsComponent",
            "id": "component-CapteurPannelsComponent-f2f7120b77eff6de3b4eee93fe196118d0fa382db613758161f774a58fef68beab0dafac69e21b8205dcebd775000e4df094299fa75b9606699162214f5f8acc",
            "file": "src/donnees/sub-panel/capteurpannels.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "capteur-panels",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"border-top\">\n  <div class=\"row\">\n    <div class=\"col-md-6\" *ngFor=\"let capteur of capteurs\">\n        <graph-panel [titre]=\"capteur.nom\"\n                     [symbole]=\"capteur.symbole\"\n                     [idCapteur]=\"capteur.id\"\n                     [ajouterDonneeDepuisInterface]=\"capteur.ajouterDonneeDepuisInterface\"></graph-panel>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "capteurs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Capteur[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { GraphiqueComponent } from 'src/graphique/graphique.component';\r\nimport { Capteur } from 'src/model/capteur';\r\nimport { GraphPannelComponent } from './graphpanel.component';\r\n\r\n@Component({\r\n    selector: 'capteur-panels',\r\n    template: `\r\n        <div class=\"border-top\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\" *ngFor=\"let capteur of capteurs\">\r\n                <graph-panel [titre]=\"capteur.nom\" \r\n                             [symbole]=\"capteur.symbole\"\r\n                             [idCapteur]=\"capteur.id\"\r\n                             [ajouterDonneeDepuisInterface]=\"capteur.ajouterDonneeDepuisInterface\"></graph-panel>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    `\r\n})\r\nexport class CapteurPannelsComponent implements OnInit {\r\n  @Input() capteurs?: Capteur[];\r\n\r\n  // dataList:Array<GraphPannelComponent> = new Array<GraphPannelComponent>();\r\n\r\n  ngOnInit(): void {\r\n    // this.capteurs?.forEach(capteur => {\r\n\r\n    // });\r\n  }\r\n  \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-118e801183b600d65586002dcea276e45af9cb7496d38ac67bd4caf01d2b753933e3aec30aab72b69488b81a3fdb9e63a27a14a45cc04cc2a9f7d4ca4dd97ac8",
            "file": "src/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dashboard",
            "styleUrls": [],
            "styles": [],
            "template": "<nav class=\"navbar navbar-expand-lg navbar-light bd-navbar\">\n    <div class=\"container-fluid\">\n    <h2 class=\"mr-5\">{{ title }}</h2>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"navbar-collapse collapse d-lg-inline-flex flex-lg-row\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 0\" (click)=\"selectionnerPage(0)\" role=\"button\">Graphique</a>\n            </li>\n            <li *ngFor=\"let url of urls\" class=\"nav-item\">\n                <a class=\"nav-link\" href=\"{{ url.href }}\" role=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">{{ url.text }}</a>\n            </li>\n            <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\n                <a id=\"nav-menu-alerte-button\" class=\"nav-link\" [class.active]=\"pageSelectionnee === 1\" (click)=\"selectionnerPage(1)\" role=\"button\">Alerte</a>\n            </li>\n            <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\n                <a id=\"nav-menu-notes-button\" class=\"nav-link\" [class.active]=\"pageSelectionnee === 5\" (click)=\"selectionnerPage(5)\" role=\"button\">Notes</a>\n            </li>\n            <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\n                <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 4\" (click)=\"selectionnerPage(4)\" role=\"button\">Documentation</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 3\" (click)=\"selectionnerPage(3)\" role=\"button\">À propos</a>\n            </li>\n        </ul>\n        <span [hidden]=\"!useAuthentication\">\n            <button id=\"login-button\" class=\"btn btn-outline-success my-2 my-sm-0\" *ngIf=\"!isLoggedIn\" (click)=\"login()\">Se connecter</button>\n            <button id=\"logout-button\" class=\"btn btn-outline-success my-2 my-sm-0\" *ngIf=\"isLoggedIn\" (click)=\"logout()\">Déconnexion</button>\n        </span>\n    </div>\n    </div>\n</nav>\n<div *ngIf=\"!isLoggedIn\" class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"alert alert-information\" role=\"alert\">\n                <strong>Vous n'êtes pas connecté </strong> <a href=\"#\" (click)=\"login()\">Cliquer ici pour vous connecter</a>\n                <p>Pour obtenir un compte, communiquer à l'administrateur. Vous trouverez les informations dans la page À propos.</p>\n            </div>\n        </div>\n    </div>\n</div>\n<erablieres [pageSelectionnee]=\"pageSelectionnee\"\n            [cacheMenuErabliere]=\"cacheMenuErabliere\"\n            (onAfterRecieveingErablieres)=\"onAfterRecieveingErablieres($event)\"\n            #erabliereComponent></erablieres>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cacheMenuErabliere",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "erabierePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErabliereComponent",
                    "optional": true,
                    "description": "",
                    "line": 95,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'erabliereComponent'"
                        }
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "pageSelectionnee",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "thereIsAtLeastOneErabliere",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "title",
                    "defaultValue": "'Érablière IU'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "urls",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UrlModel[]",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "useAuthentication",
                    "defaultValue": "environment.enableAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAfterRecieveingErablieres",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionnerPage",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AuthorisationFactoryService } from 'src/authorisation/authorisation-factory-service';\r\nimport { IAuthorisationSerivce } from 'src/authorisation/iauthorisation-service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ErabliereComponent } from 'src/erablieres/erabliere.component';\r\nimport { EnvironmentService } from '../environments/environment.service';\r\nimport { UrlModel } from '../model/urlModel';\r\n\r\n@Component({\r\n  selector: 'dashboard',\r\n  template: `\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bd-navbar\">\r\n            <div class=\"container-fluid\">\r\n            <h2 class=\"mr-5\">{{ title }}</h2>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"navbar-collapse collapse d-lg-inline-flex flex-lg-row\">\r\n                <ul class=\"navbar-nav me-auto mb-2 mb-lg-0 mr-auto\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 0\" (click)=\"selectionnerPage(0)\" role=\"button\">Graphique</a>\r\n                    </li>\r\n                    <li *ngFor=\"let url of urls\" class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"{{ url.href }}\" role=\"button\" target=\"_blank\" rel=\"noopener noreferrer\">{{ url.text }}</a>\r\n                    </li>\r\n                    <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\r\n                        <a id=\"nav-menu-alerte-button\" class=\"nav-link\" [class.active]=\"pageSelectionnee === 1\" (click)=\"selectionnerPage(1)\" role=\"button\">Alerte</a>\r\n                    </li>\r\n                    <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\r\n                        <a id=\"nav-menu-notes-button\" class=\"nav-link\" [class.active]=\"pageSelectionnee === 5\" (click)=\"selectionnerPage(5)\" role=\"button\">Notes</a>\r\n                    </li>\r\n                    <li *ngIf=\"isLoggedIn && thereIsAtLeastOneErabliere\" class=\"nav-item\">\r\n                        <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 4\" (click)=\"selectionnerPage(4)\" role=\"button\">Documentation</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" [class.active]=\"pageSelectionnee === 3\" (click)=\"selectionnerPage(3)\" role=\"button\">À propos</a>\r\n                    </li>\r\n                </ul>\r\n                <span [hidden]=\"!useAuthentication\">\r\n                    <button id=\"login-button\" class=\"btn btn-outline-success my-2 my-sm-0\" *ngIf=\"!isLoggedIn\" (click)=\"login()\">Se connecter</button>\r\n                    <button id=\"logout-button\" class=\"btn btn-outline-success my-2 my-sm-0\" *ngIf=\"isLoggedIn\" (click)=\"logout()\">Déconnexion</button>\r\n                </span>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        <div *ngIf=\"!isLoggedIn\" class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"alert alert-information\" role=\"alert\">\r\n                        <strong>Vous n'êtes pas connecté </strong> <a href=\"#\" (click)=\"login()\">Cliquer ici pour vous connecter</a>\r\n                        <p>Pour obtenir un compte, communiquer à l'administrateur. Vous trouverez les informations dans la page À propos.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <erablieres [pageSelectionnee]=\"pageSelectionnee\" \r\n                    [cacheMenuErabliere]=\"cacheMenuErabliere\"\r\n                    (onAfterRecieveingErablieres)=\"onAfterRecieveingErablieres($event)\"\r\n                    #erabliereComponent></erablieres>\r\n    `\r\n})\r\nexport class DashboardComponent {\r\n  pageSelectionnee = 0;\r\n  cacheMenuErabliere = false;\r\n  title = 'Érablière IU';\r\n\r\n  isLoggedIn: Boolean = false;\r\n  thereIsAtLeastOneErabliere: Boolean = false;\r\n  useAuthentication: Boolean = environment.enableAuth;\r\n  urls: UrlModel[] = [];\r\n\r\n  private _authService: IAuthorisationSerivce\r\n\r\n  constructor(authFactoryService: AuthorisationFactoryService, environmentService: EnvironmentService, cdr: ChangeDetectorRef) {\r\n    this._authService = authFactoryService.getAuthorisationService();\r\n    this._authService.isLoggedIn().then(isLoggedIn => {\r\n      this.isLoggedIn = isLoggedIn;\r\n    });\r\n    this._authService.loginChanged.subscribe(isLoggedIn => {\r\n      this.isLoggedIn = isLoggedIn;\r\n      cdr.detectChanges();\r\n    });\r\n    this.urls = environmentService.additionnalUrls ?? [];\r\n  }\r\n\r\n  login() {\r\n    this._authService.login();\r\n  }\r\n\r\n  logout() {\r\n    this._authService.logout();\r\n  }\r\n\r\n  @ViewChild('erabliereComponent') erabierePage?: ErabliereComponent\r\n\r\n  selectionnerPage(i: number) {\r\n    this.pageSelectionnee = i;\r\n    this.cacheMenuErabliere = i == 3;\r\n\r\n    if (this.pageSelectionnee == 1) {\r\n      this.erabierePage?.loadAlertes();\r\n    }\r\n\r\n    if (this.pageSelectionnee == 4) {\r\n      this.erabierePage?.loadDocumentations();\r\n    }\r\n\r\n    if (this.pageSelectionnee == 5) {\r\n      this.erabierePage?.loadNotes();\r\n    }\r\n  }\r\n\r\n  onAfterRecieveingErablieres($event: any) {\r\n    this.thereIsAtLeastOneErabliere = $event;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "DateTimeSelector",
            "id": "component-DateTimeSelector-8006e32128159ecf3098d6225bdf944012a0089d2799ea32a8d3b6db776aed0ef3ec2bdc1242919534e4ec87ba1d4df93f0d4a0a94c789d7f4e88f664a4b3580",
            "file": "src/donnees/sub-panel/userinput/datetimeselector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-time-selector",
            "styleUrls": [],
            "styles": [],
            "template": "<span>{{titre}}</span>\n<input class=\"form-control\" type=\"date\" [formControl]=\"dateControl\"/>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "titre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<SimpleChange>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "dateControl",
                    "defaultValue": "new UntypedFormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "previousVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, SimpleChange } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'date-time-selector',\r\n    template: `\r\n        <span>{{titre}}</span>\r\n        <input class=\"form-control\" type=\"date\" [formControl]=\"dateControl\"/>\r\n    `\r\n})\r\nexport class DateTimeSelector implements OnInit {\r\n    @Input() titre?: string;\r\n    currentVal: any;\r\n    previousVal: any;\r\n    @Output() onChange: EventEmitter<SimpleChange> = new EventEmitter();\r\n\r\n    dateControl = new UntypedFormControl('');\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() { \r\n        this.dateControl.valueChanges.subscribe(value => {\r\n            this.previousVal = this.currentVal;\r\n            this.currentVal = value;\r\n            this.onChange.emit(new SimpleChange(this.previousVal, this.currentVal, false));\r\n        });\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "DocumentationComponent",
            "id": "component-DocumentationComponent-493cbc3873810b7802f8e334313a633cf24389eb8c4d7c2e602054f3fc20cfc8ef9b039ee799173bc8b515f76cf9091e5a2214949d2f1e3fd36691c9cbb0c7eb",
            "file": "src/documentation/documentation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "documentation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documentation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "documentations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Documentation[]",
                    "decorators": []
                },
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core'\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { Documentation } from 'src/model/documentation';\r\n\r\n@Component({\r\n    selector: 'documentation',\r\n    templateUrl: \"./documentation.component.html\"\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n    @Input() idErabliereSelectionee:any\r\n\r\n    @Input() documentations?: Documentation[];\r\n    \r\n    constructor (private _api: ErabliereApi) {\r\n        \r\n    }\r\n\r\n    ngOnInit(): void {\r\n        \r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"row ml-1\">\r\n    <div *ngIf=\"documentations == undefined || documentations.length == 0\">\r\n        <p>Aucune documentation</p>\r\n    </div>\r\n    <div *ngFor=\"let documentation of documentations\" class=\"col-12\">\r\n        <div class=\"row\">\r\n            <h4 class=\"mt-4\">{{ documentation.title }}</h4>\r\n        </div>\r\n        \r\n        <div class=\"row\">\r\n            <p>{{ documentation.text }}</p>\r\n        </div>\r\n        \r\n        <div class=\"row\">\r\n            <img *ngIf=\"documentation.file != ''\" src=\"data:image/png;base64,{{ documentation.file }}\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DonneesComponent",
            "id": "component-DonneesComponent-57615f8d6dc5e6e5e9cf5d8fc5865d0be9a17ecdbaeef426ce5a1126e14dac94cf589eb1750181b5d258317ce85e54a253a7b21c455d10ecb7693146171af246",
            "file": "src/donnees/donnees.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "donnees-panel",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"border-top\">\n  <div class=\"row\">\n    <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\n      <graph-panel [titre]=\"titre_temperature\"\n                   [valeurActuel]=\"temperatureValueActuel\"\n                   [symbole]=\"temperatureSymbole\"\n                   [timeaxes]=\"timeaxes\"\n                   (updateGraphCallback)=\"updateGraph($event)\"\n                   (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\n                   [datasets]=\"temperature\" #temperatureGraphPannel></graph-panel>\n    </div>\n    <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\n      <graph-panel [titre]=\"titre_vaccium\"\n                   [valeurActuel]=\"vacciumValueActuel\"\n                   [symbole]=\"vacciumSymbole\"\n                   [timeaxes]=\"timeaxes\"\n                   (updateGraphCallback)=\"updateGraph($event)\"\n                   (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\n                   [datasets]=\"vaccium\" #vacciumGraphPannel></graph-panel>\n    </div>\n    <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\n      <graph-panel [titre]=\"titre_niveaubassin\"\n                   [valeurActuel]=\"niveauBassinValueActuel\"\n                   [symbole]=\"niveauBassinSymbole\"\n                   [timeaxes]=\"timeaxes\"\n                   (updateGraphCallback)=\"updateGraph($event)\"\n                   (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\n                   [datasets]=\"niveaubassin\" #niveaubassinGraphPannel></graph-panel>\n    </div>\n    <div *ngIf=\"initialErabliere?.afficherSectionDompeux\" class=\"col-md-6\">\n      <bar-panel [titre]=\"titre_dompeux\"\n                 [timeaxes]=\"timeaxes_dompeux\"\n                 [datasets]=\"dompeux\"\n                 [barChartType]=\"dompeux_line_type\" #dompeuxGraphPannel></bar-panel>\n    <div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dureeDonneesRequete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "erabliereSubject",
                    "defaultValue": "new Subject<Erabliere>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "Subject<Erabliere>",
                    "decorators": []
                },
                {
                    "name": "initialErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "Erabliere",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dateDebutFixRange",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 367
                },
                {
                    "name": "dateFinFixRange",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 368
                },
                {
                    "name": "ddr",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "ddrDompeux",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "debutEnHeure",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 324
                },
                {
                    "name": "dernierDompeuxRecu",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "derniereDonneeRecu",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "dompeux",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "dompeux_chart_type",
                    "defaultValue": "\"bar\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "dompeux_line_type",
                    "defaultValue": "\"bar\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "dompeuxGraphPannel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphPannelComponent",
                    "optional": true,
                    "description": "",
                    "line": 55,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dompeuxGraphPannel'"
                        }
                    ]
                },
                {
                    "name": "duree",
                    "defaultValue": "\"12h\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 323
                },
                {
                    "name": "erabliereAfficherSectionDompeux",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "erabliereAfficherTrioDonnees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | undefined",
                    "optional": false,
                    "description": "",
                    "line": 103
                },
                {
                    "name": "erabliereId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "fixRange",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 366
                },
                {
                    "name": "ids",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<number>",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "idsDompeux",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<number>",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "intervalRequetes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "niveaubassin",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "niveaubassinGraphPannel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphPannelComponent",
                    "optional": true,
                    "description": "",
                    "line": 54,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'niveaubassinGraphPannel'"
                        }
                    ]
                },
                {
                    "name": "niveauBassinSymbole",
                    "defaultValue": "\"%\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "niveauBassinValueActuel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "temperature",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "temperatureGraphPannel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphPannelComponent",
                    "optional": true,
                    "description": "",
                    "line": 52,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'temperatureGraphPannel'"
                        }
                    ]
                },
                {
                    "name": "temperatureSymbole",
                    "defaultValue": "\"°c\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "temperatureValueActuel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "timeaxes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Label[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "timeaxes_dompeux",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Label[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "titre_dompeux",
                    "defaultValue": "\"Dompeux\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "titre_niveaubassin",
                    "defaultValue": "\"Niveau Bassin\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "titre_temperature",
                    "defaultValue": "\"Temperature\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "titre_vaccium",
                    "defaultValue": "\"Vaccium\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "vaccium",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "vacciumGraphPannel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GraphPannelComponent",
                    "optional": true,
                    "description": "",
                    "line": 53,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vacciumGraphPannel'"
                        }
                    ]
                },
                {
                    "name": "vacciumSymbole",
                    "defaultValue": "\"HG\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "vacciumValueActuel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "vacciumYOption",
                    "defaultValue": "[\r\n          {\r\n            display: true,\r\n            ticks: { \r\n                beginAtZero: true, \r\n                max: 30\r\n            }\r\n        }\r\n      ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "cleanGraphComponentCache",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 360,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "doHttpCall",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 221,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doHttpCallDompeux",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchDataAndBuildGraph",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "obtenirDebutFiltre",
                    "args": [],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 326,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDuree",
                    "args": [
                        {
                            "name": "duree",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 353,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "duree",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateGraph",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 332,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateGraphUsingFixRangeCallback",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 370,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ChartDataSets, ChartType } from 'chart.js';\r\nimport { Label } from 'ng2-charts';\r\nimport { Subject } from 'rxjs';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { Erabliere } from 'src/model/erabliere';\r\nimport { GraphPannelComponent } from './sub-panel/graphpanel.component';\r\n\r\n@Component({\r\n    selector: 'donnees-panel',\r\n    template: `\r\n        <div class=\"border-top\">\r\n          <div class=\"row\">\r\n            <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\r\n              <graph-panel [titre]=\"titre_temperature\" \r\n                           [valeurActuel]=\"temperatureValueActuel\"\r\n                           [symbole]=\"temperatureSymbole\"\r\n                           [timeaxes]=\"timeaxes\" \r\n                           (updateGraphCallback)=\"updateGraph($event)\"\r\n                           (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\r\n                           [datasets]=\"temperature\" #temperatureGraphPannel></graph-panel>\r\n            </div>\r\n            <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\r\n              <graph-panel [titre]=\"titre_vaccium\" \r\n                           [valeurActuel]=\"vacciumValueActuel\"\r\n                           [symbole]=\"vacciumSymbole\"\r\n                           [timeaxes]=\"timeaxes\" \r\n                           (updateGraphCallback)=\"updateGraph($event)\"\r\n                           (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\r\n                           [datasets]=\"vaccium\" #vacciumGraphPannel></graph-panel>\r\n            </div>\r\n            <div *ngIf=\"initialErabliere?.afficherTrioDonnees\" class=\"col-md-6\">\r\n              <graph-panel [titre]=\"titre_niveaubassin\" \r\n                           [valeurActuel]=\"niveauBassinValueActuel\"\r\n                           [symbole]=\"niveauBassinSymbole\"\r\n                           [timeaxes]=\"timeaxes\" \r\n                           (updateGraphCallback)=\"updateGraph($event)\"\r\n                           (updateGraphUsingFixRangeCallback)=\"updateGraphUsingFixRangeCallback($event)\"\r\n                           [datasets]=\"niveaubassin\" #niveaubassinGraphPannel></graph-panel>\r\n            </div>\r\n            <div *ngIf=\"initialErabliere?.afficherSectionDompeux\" class=\"col-md-6\">\r\n              <bar-panel [titre]=\"titre_dompeux\" \r\n                         [timeaxes]=\"timeaxes_dompeux\" \r\n                         [datasets]=\"dompeux\"\r\n                         [barChartType]=\"dompeux_line_type\" #dompeuxGraphPannel></bar-panel>\r\n            <div>\r\n          </div>\r\n        </div>\r\n    `\r\n})\r\nexport class DonneesComponent implements OnInit {\r\n      @ViewChild('temperatureGraphPannel') temperatureGraphPannel?: GraphPannelComponent\r\n      @ViewChild('vacciumGraphPannel') vacciumGraphPannel?: GraphPannelComponent\r\n      @ViewChild('niveaubassinGraphPannel') niveaubassinGraphPannel?: GraphPannelComponent\r\n      @ViewChild('dompeuxGraphPannel') dompeuxGraphPannel?: GraphPannelComponent\r\n\r\n      intervalRequetes?:any\r\n\r\n      @Input() initialErabliere?: Erabliere\r\n      @Input() erabliereSubject: Subject<Erabliere> = new Subject<Erabliere>()\r\n      @Input() dureeDonneesRequete:any\r\n\r\n      timeaxes: Label[] = [];\r\n      timeaxes_dompeux: Label[] = []\r\n\r\n      derniereDonneeRecu?:string = undefined;\r\n      ddr?:string = undefined;\r\n      dernierDompeuxRecu?:string = undefined;\r\n      ddrDompeux?:string = undefined;\r\n\r\n      ids:Array<number> = []\r\n      idsDompeux:Array<number> = []\r\n\r\n      titre_temperature = \"Temperature\"\r\n      temperature: ChartDataSets[] = []\r\n      temperatureValueActuel?:string|null\r\n      temperatureSymbole:string = \"°c\"\r\n\r\n      titre_vaccium = \"Vaccium\"\r\n      vaccium: ChartDataSets[] = []\r\n      vacciumValueActuel?:string|null\r\n      vacciumSymbole:string = \"HG\"\r\n      vacciumYOption:any = [\r\n          {\r\n            display: true,\r\n            ticks: { \r\n                beginAtZero: true, \r\n                max: 30\r\n            }\r\n        }\r\n      ]\r\n\r\n      titre_niveaubassin = \"Niveau Bassin\"\r\n      niveaubassin: ChartDataSets[] = []\r\n      niveauBassinValueActuel?:string|null\r\n      niveauBassinSymbole:string = \"%\"\r\n\r\n      titre_dompeux = \"Dompeux\"\r\n      dompeux: ChartDataSets[] = []\r\n      dompeux_line_type: ChartType = \"bar\"\r\n      dompeux_chart_type:string = \"bar\"\r\n\r\n      erabliereAfficherTrioDonnees: boolean | undefined;\r\n      erabliereAfficherSectionDompeux: boolean | undefined;\r\n      erabliereId: any;\r\n\r\n      constructor(private _erabliereApi:ErabliereApi){ }\r\n\r\n      ngOnInit() {\r\n        this.erabliereSubject.subscribe(response => {\r\n          this.ngOnDestroy();\r\n          this.ddr = undefined;\r\n          this.ddrDompeux = undefined;\r\n          this.dernierDompeuxRecu = undefined;\r\n          this.derniereDonneeRecu = undefined;\r\n\r\n          if (response != undefined) {\r\n            this.erabliereAfficherTrioDonnees = response.afficherTrioDonnees;\r\n            this.erabliereAfficherSectionDompeux = response.afficherSectionDompeux;\r\n            this.erabliereId = response.id;\r\n          }\r\n          else {\r\n            this.erabliereAfficherTrioDonnees = undefined;\r\n            this.erabliereAfficherSectionDompeux = undefined;\r\n            this.erabliereId = undefined;\r\n          }\r\n\r\n          this.fetchDataAndBuildGraph()\r\n        });\r\n\r\n        this.erabliereAfficherTrioDonnees = this.initialErabliere?.afficherTrioDonnees;\r\n        this.erabliereAfficherSectionDompeux = this.initialErabliere?.afficherSectionDompeux;\r\n        this.erabliereId = this.initialErabliere?.id;\r\n\r\n        this.fetchDataAndBuildGraph();\r\n      }\r\n\r\n      fetchDataAndBuildGraph() {\r\n        if (this.erabliereAfficherTrioDonnees == true) {\r\n          this.doHttpCall();\r\n        }\r\n        if (this.erabliereAfficherSectionDompeux == true) {\r\n          this.doHttpCallDompeux();\r\n        }\r\n\r\n        this.intervalRequetes = setInterval(() => {\r\n          if (this.fixRange == false) {\r\n            if (this.erabliereAfficherTrioDonnees == true) {\r\n              this.doHttpCall();\r\n            }\r\n          }\r\n          if (this.erabliereAfficherSectionDompeux == true) {\r\n            this.doHttpCallDompeux();\r\n          }\r\n        }, 1000 * 60);\r\n      }\r\n\r\n      ngOnDestroy() {\r\n        clearInterval(this.intervalRequetes);\r\n      }\r\n\r\n      doHttpCallDompeux() {\r\n        let debutFiltre = this.obtenirDebutFiltre().toISOString();\r\n        let finFiltre = new Date().toISOString();\r\n\r\n        var xddr = null;\r\n        if (this.dernierDompeuxRecu != undefined) {\r\n          xddr = this.dernierDompeuxRecu.toString();\r\n        }\r\n\r\n        this._erabliereApi.getDompeux(this.erabliereId, debutFiltre, finFiltre, xddr)\r\n        .then(resp=> {\r\n          const h = resp.headers;\r\n\r\n          this.dernierDompeuxRecu = h.get(\"x-dde\")?.valueOf();\r\n          this.ddrDompeux = h.get(\"x-ddr\")?.valueOf();\r\n\r\n          var e = resp.body;\r\n\r\n          if (e == null) {\r\n            return;\r\n          }\r\n        \r\n            let idsDompeux = e.map(ee => ee.id);\r\n\r\n            let dompeux = [\r\n              { data: e.map(ee => (new Date(ee.df).getTime() - new Date(ee.dd).getTime()) / 1000), label: 'Durée en seconde' }\r\n            ];\r\n\r\n            let timeaxes_dompeux = e.map(ee => new Date(ee.t).toLocaleTimeString());\r\n\r\n            if (h.has(\"x-ddr\") && this.ddrDompeux != undefined && h.get(\"x-ddr\")?.valueOf() == this.ddrDompeux) {\r\n            \r\n              if (idsDompeux.length > 0 && this.idsDompeux[this.idsDompeux.length - 1] === idsDompeux[0]) {\r\n                dompeux[0].data.shift();\r\n                timeaxes_dompeux.shift();\r\n                idsDompeux.shift();\r\n              }\r\n              \r\n              dompeux[0].data.forEach((d:number) => this.dompeux[0].data?.push(d));\r\n              timeaxes_dompeux.forEach((t: Label) => this.timeaxes_dompeux?.push(t));\r\n              idsDompeux.forEach((n: number) => this.idsDompeux.push(n));\r\n\r\n              while (this.timeaxes_dompeux.length > 0 &&\r\n                new Date(this.timeaxes_dompeux[0].toString()) < new Date(debutFiltre)) {\r\n                this.timeaxes_dompeux.shift();\r\n                this.dompeux[0].data?.shift();\r\n                this.idsDompeux.shift();\r\n              }\r\n            }\r\n            else {\r\n              this.dompeux = dompeux;\r\n              this.timeaxes_dompeux = timeaxes_dompeux;\r\n              this.idsDompeux = idsDompeux;\r\n            }\r\n\r\n            this.dompeuxGraphPannel?.chart?.update();\r\n        });\r\n      }\r\n\r\n      doHttpCall() {\r\n        let debutFiltre = this.obtenirDebutFiltre().toISOString();\r\n        let finFiltre = new Date().toISOString();\r\n\r\n        if (this.fixRange) {\r\n          debutFiltre = this.dateDebutFixRange;\r\n          finFiltre = this.dateFinFixRange;\r\n        }\r\n\r\n        var xddr = null;\r\n        if (this.derniereDonneeRecu != undefined) {\r\n          xddr = this.derniereDonneeRecu.toString();\r\n        }\r\n\r\n        this._erabliereApi.getDonnees(this.erabliereId, debutFiltre, finFiltre, xddr)\r\n          .then(reponse => {\r\n            var h = reponse.headers;\r\n\r\n            this.derniereDonneeRecu = h.get(\"x-dde\")?.valueOf();\r\n            this.ddr = h.get(\"x-ddr\")?.valueOf();\r\n\r\n            var e = reponse.body;\r\n\r\n            if (e == null) {\r\n              return;\r\n            }\r\n\r\n            let ids = e.map(ee => ee.id);\r\n\r\n            let temperature = [\r\n              { data: e.map(ee => ee.t != null ? ee.t / 10 : null), label: 'Temperature' }\r\n            ];\r\n            let vaccium = [\r\n              { data: e.map(ee => ee.v != null ? ee.v / 10 : null), label: 'Vaccium' }\r\n            ];\r\n            let niveaubassin = [\r\n              { data: e.map(ee => ee.nb), label: 'Niveau bassin' }\r\n            ];\r\n\r\n            let timeaxes = e.map(ee => ee.d);\r\n\r\n            if (e.length > 0) {\r\n              var tva = e[e.length - 1].t;\r\n              var vva = e[e.length - 1].v;\r\n              this.temperatureValueActuel = tva != null ? (tva / 10).toFixed(1) : null;\r\n              this.vacciumValueActuel = vva != null ? (vva / 10).toFixed(1) : null;\r\n              this.niveauBassinValueActuel = e[e.length - 1].nb?.toString();\r\n            }\r\n            else if (e.length == 0) {\r\n              this.temperatureValueActuel = null;\r\n              this.vacciumValueActuel = null;\r\n              this.niveauBassinValueActuel = null;\r\n            }\r\n\r\n            if (h.has(\"x-ddr\") && this.ddr != undefined && h.get(\"x-ddr\")?.valueOf() == this.ddr) {\r\n              \r\n              if (ids.length > 0 && this.ids[this.ids.length - 1] === ids[0]) {\r\n                this.temperature[0].data?.pop();\r\n                this.vaccium[0].data?.pop();\r\n                this.niveaubassin[0].data?.pop();\r\n                this.timeaxes.pop();\r\n\r\n                this.temperature[0].data?.push(temperature[0].data.shift() as any);\r\n                this.vaccium[0].data?.push(vaccium[0].data.shift() as any);\r\n                this.niveaubassin[0].data?.push(niveaubassin[0].data.shift() as any);\r\n                this.timeaxes.push(timeaxes.shift() as any);\r\n              }\r\n              \r\n              temperature[0].data.forEach(t => this.temperature[0].data?.push(t as any));\r\n              vaccium[0].data.forEach(v => this.vaccium[0].data?.push(v as any));\r\n              niveaubassin[0].data.forEach(nb => this.niveaubassin[0].data?.push(nb as any));\r\n              timeaxes.forEach(t => this.timeaxes.push(t as any));\r\n              ids.forEach((n: number) => this.ids.push(n));\r\n\r\n              while (this.timeaxes.length > 0 &&\r\n                     new Date(this.timeaxes[0].toString()) < new Date(debutFiltre)) {\r\n                this.timeaxes.shift();\r\n                this.temperature[0].data?.shift();\r\n                this.vaccium[0].data?.shift();\r\n                this.niveaubassin[0].data?.shift();\r\n                this.ids.shift();\r\n              }\r\n            }\r\n            else {\r\n              this.temperature = temperature;\r\n              this.vaccium = vaccium;\r\n              this.niveaubassin = niveaubassin;\r\n              this.timeaxes = timeaxes as any[];\r\n              this.ids = ids;\r\n            }\r\n\r\n            this.temperatureGraphPannel?.chart?.update();\r\n            this.vacciumGraphPannel?.chart?.update();\r\n            this.niveaubassinGraphPannel?.chart?.update();\r\n          })\r\n          .catch(reason => {\r\n            console.log(reason);\r\n            this.derniereDonneeRecu = undefined;\r\n            this.ddr = undefined;\r\n          });\r\n        }\r\n\r\n        duree:string = \"12h\"\r\n        debutEnHeure: number = 12;\r\n\r\n      obtenirDebutFiltre() : Date {\r\n        var twelve_hour = 1000 * 60 * 60 * this.debutEnHeure;\r\n\r\n        return new Date(Date.now() - twelve_hour);\r\n      }\r\n\r\n      updateGraph($event: any): void {\r\n        this.fixRange = false;\r\n        this.duree = \"\";\r\n\r\n        if ($event.days != 0) {\r\n            this.duree = $event.days + \" jours\";\r\n        }\r\n\r\n        if ($event.hours != 0) {\r\n            this.duree = this.duree + \" \" + $event.hours + \"h\";\r\n        }\r\n\r\n        this.updateDuree(this.duree);\r\n\r\n        this.debutEnHeure = $event.hours + (24 * $event.days);\r\n\r\n        this.cleanGraphComponentCache();\r\n\r\n        this.doHttpCall();\r\n    }\r\n\r\n    updateDuree(duree: string) {\r\n      this.duree = duree;\r\n      this.temperatureGraphPannel?.updateDuree(this.duree);\r\n      this.vacciumGraphPannel?.updateDuree(this.duree);\r\n      this.niveaubassinGraphPannel?.updateDuree(this.duree);\r\n    }\r\n\r\n    private cleanGraphComponentCache() {\r\n        this.derniereDonneeRecu = undefined;\r\n        this.ddr = undefined;\r\n        this.ids = [];\r\n    }\r\n\r\n    fixRange: boolean = false;\r\n    dateDebutFixRange?: any = undefined\r\n    dateFinFixRange?: any = undefined\r\n\r\n    updateGraphUsingFixRangeCallback($event: any): void {\r\n      this.fixRange = true;\r\n      this.dateDebutFixRange = $event.dateDebutFixRange;\r\n      this.dateFinFixRange = $event.dateFinFixRange;\r\n      this.cleanGraphComponentCache();\r\n      this.updateDuree(this.dateDebutFixRange + \" - \" + this.dateFinFixRange);\r\n      this.doHttpCall();\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 105,
                "jsdoctags": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "EditAccessCompoenent",
            "id": "component-EditAccessCompoenent-486917913bd48d1964726bdf386b4ef88dc99a610d1b6964b2105a68852bb7395e0d81bc2d1dd1d1555ab297698eece7c0ab365f06a8c3ac759e3c4a1aad9e12",
            "file": "src/access/edit-access.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "edit-access",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "edit-access.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "acces",
                    "defaultValue": "new CustomerAccess()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "CustomerAccess",
                    "decorators": []
                },
                {
                    "name": "displayEditAccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "shouldUpdateAccess",
                    "defaultValue": "new EventEmitter<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accessInternal",
                    "defaultValue": "new CustomerAccess()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomerAccess",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateAccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { CustomerAccess } from 'src/model/customerAccess';\r\nimport { PutCustomerAccess } from 'src/model/putCustomerAccess';\r\n\r\n@Component({\r\n    selector: 'edit-access',\r\n    templateUrl: 'edit-access.component.html'\r\n})\r\nexport class EditAccessCompoenent implements OnInit {\r\n    @Input() displayEditAccess: Boolean = false;\r\n    @Input() acces: CustomerAccess = new CustomerAccess();\r\n    accessInternal: CustomerAccess = new CustomerAccess();\r\n    @Output() shouldUpdateAccess = new EventEmitter<Boolean>();\r\n\r\n    constructor(private _api: ErabliereApi) { }\r\n\r\n    ngOnInit() { \r\n        this.accessInternal = { ...this.acces };\r\n    }\r\n\r\n    updateAccess() {\r\n        if (this.acces != undefined) {\r\n\r\n            var putModel = new PutCustomerAccess();\r\n            putModel.idErabliere = this.acces.idErabliere;\r\n            putModel.customerErablieres = [];\r\n            putModel.customerErablieres.push({\r\n                idCustomer: this.acces.idCustomer,\r\n                action: 1,\r\n                access: this.accessInternal.access\r\n            });\r\n\r\n            this._api.putCustomerAccess(this.acces.idErabliere, putModel).then(() => {\r\n                this.displayEditAccess = false;\r\n                this.shouldUpdateAccess.emit(true);\r\n            }).catch(error => {\r\n                throw error;\r\n            });\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"!displayEditAccess\">\r\n    {{acces?.access}}\r\n</div>\r\n<div *ngIf=\"displayEditAccess\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-10\">\r\n                <input class=\"form-control form-control-sm\" type=\"number\" [(ngModel)]=\"accessInternal.access\">\r\n            </div>\r\n            <div class=\"col-2\">\r\n                <button class=\"btn btn-primary btn-sm float-right\" (click)=\"updateAccess()\">&#9998;</button>\r\n            </div>\r\n        </div>        \r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ErabliereComponent",
            "id": "component-ErabliereComponent-a93fc794675fb59c0fa7de968ce316dc9cd82b13557854af9aeea79c08ccae67020d49a1cc8aca63a18efb0aa9123b044f9d398663a80b7fba05cb9102bbb4c8",
            "file": "src/erablieres/erabliere.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "erablieres",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "erabliere.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cacheMenuErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pageSelectionnee",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onAfterRecieveingErablieres",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "alertes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Alerte>",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "alertesCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<AlerteCapteur>",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "authDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "documentations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Documentation>",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "erablieres",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Erabliere>",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "erabliereSelectionnee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Erabliere",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "etat",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "idSelectionnee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "modifierErabliereComponent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModifierErabliereComponent",
                    "optional": true,
                    "description": "",
                    "line": 169,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ModifierErabliereComponent"
                        }
                    ]
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Note>",
                    "optional": true,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "handleErabliereLiClick",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadAlertes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadDocumentations",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadErablieresPage",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "loadNotes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "openEditErabliereForm",
                    "args": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "erabliere",
                            "type": "Erabliere",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterContentChecked, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthorisationFactoryService } from 'src/authorisation/authorisation-factory-service';\r\nimport { IAuthorisationSerivce } from 'src/authorisation/iauthorisation-service';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { Alerte } from 'src/model/alerte';\r\nimport { AlerteCapteur } from 'src/model/alerteCapteur';\r\nimport { Documentation } from 'src/model/documentation';\r\nimport { Erabliere } from 'src/model/erabliere';\r\nimport { Note } from 'src/model/note';\r\nimport { ModifierErabliereComponent } from './modifier-erabliere.component';\r\n\r\n@Component({\r\n  selector: 'erablieres',\r\n  templateUrl: 'erabliere.component.html'\r\n})\r\nexport class ErabliereComponent implements OnInit {\r\n  erablieres?: Array<Erabliere>;\r\n  etat: string = \"\";\r\n  erabliereSelectionnee?: Erabliere;\r\n  idSelectionnee?: any\r\n  @Input() cacheMenuErabliere?: boolean;\r\n  @Input() pageSelectionnee?: number = 0;\r\n  alertes?: Array<Alerte>;\r\n  alertesCapteur?: Array<AlerteCapteur>;\r\n  documentations?: Array<Documentation>;\r\n  notes?: Array<Note>;\r\n  private _authService: IAuthorisationSerivce\r\n  @Output() onAfterRecieveingErablieres: EventEmitter<number> = new EventEmitter<number>();\r\n  loggedIn: Boolean = false;\r\n  authDisabled: boolean = false;\r\n\r\n  constructor(private _erabliereApi: ErabliereApi, authFactory: AuthorisationFactoryService, private _router: Router) {\r\n    this.erabliereSelectionnee = undefined;\r\n    this._authService = authFactory.getAuthorisationService();\r\n    if (this._authService.type == \"AuthDisabled\") {\r\n      this.authDisabled = true;\r\n    }\r\n    this._authService.loginChanged.subscribe(loggedIn => {\r\n      this.loggedIn = loggedIn;\r\n      if (loggedIn) {\r\n        this.loadErablieresPage();\r\n      }\r\n      else {\r\n        this.erablieres = undefined;\r\n        this.erabliereSelectionnee = undefined;\r\n        this.idSelectionnee = undefined;\r\n        this.etat = \"Vous n'êtes pas connecté\";\r\n        this.pageSelectionnee = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.loggedIn = await this._authService.isLoggedIn();\r\n    await this.loadErablieresPage();\r\n  }\r\n\r\n  async loadErablieresPage() {\r\n    const titreChargement = \"Chargement des érablières...\";\r\n\r\n    if (this.etat == titreChargement) {\r\n      return new Promise<void>((resolve, reject) => { });\r\n    }\r\n\r\n    this.etat = titreChargement;\r\n\r\n    const erablieres = await (this._erabliereApi.getErablieresExpandCapteurs(true).catch(err => {\r\n      console.log(err);\r\n      this.etat = \"Erreur lors du chargement des érablieres\";\r\n    }));\r\n\r\n    if (erablieres != null) {\r\n      this.erablieres = erablieres.sort((a, b) => {\r\n        if (a.indiceOrdre != null && b.indiceOrdre == null) {\r\n          return -1;\r\n        }\r\n        else if (b.indiceOrdre != null && a.indiceOrdre == null) {\r\n          return 1;\r\n        }\r\n        else if (a.indiceOrdre != null && b.indiceOrdre != null) {\r\n          return a.indiceOrdre - b.indiceOrdre;\r\n        }\r\n\r\n        return a.nom?.localeCompare(b.nom ?? \"\") ?? 0;\r\n      });\r\n\r\n      if (this.erablieres.length > 0) {\r\n        this.onAfterRecieveingErablieres.emit(this.erablieres.length);\r\n        this.etat = \"Chargement des erablieres terminé\";\r\n        this.erabliereSelectionnee = this.erablieres[0];\r\n        this.idSelectionnee = this.erabliereSelectionnee.id;\r\n\r\n        // verifier quel est la page selectionnee base sur l'url\r\n        if (this._router.url.indexOf(\"/alertes\") > -1) {\r\n          this.pageSelectionnee = 1;\r\n        }\r\n        else if (this._router.url.indexOf(\"/documentations\") > -1) {\r\n          this.pageSelectionnee = 4;\r\n        }\r\n        else if (this._router.url.indexOf(\"/notes\") > -1) {\r\n          this.pageSelectionnee = 5;\r\n        }\r\n        else if (this._router.url.indexOf(\"/apropos\") > -1) {\r\n          this.pageSelectionnee = 3;\r\n        }\r\n        else {\r\n          this.pageSelectionnee = 0;\r\n        }\r\n\r\n        this.handleErabliereLiClick(this.erabliereSelectionnee.id);\r\n      }\r\n      else {\r\n        this.etat = \"Aucune erablière\";\r\n      }\r\n    }\r\n  }\r\n\r\n  handleErabliereLiClick(idErabliere: number) {\r\n    if (this.erablieres == null || this.erablieres == undefined) {\r\n      return;\r\n    }\r\n\r\n    this.erabliereSelectionnee = this.erablieres.find(e => e.id === idErabliere);\r\n\r\n    this.idSelectionnee = this.erabliereSelectionnee?.id;\r\n\r\n    if (this.pageSelectionnee == 1) {\r\n      this.loadAlertes();\r\n    }\r\n\r\n    if (this.pageSelectionnee == 4) {\r\n      this.loadDocumentations();\r\n    }\r\n\r\n    if (this.pageSelectionnee == 5) {\r\n      this.loadNotes();\r\n    }\r\n  }\r\n\r\n  loadAlertes() {\r\n    this._erabliereApi.getAlertes(this.erabliereSelectionnee?.id).then(alertes => {\r\n      this.alertes = alertes;\r\n    });\r\n    this._erabliereApi.getAlertesCapteur(this.erabliereSelectionnee?.id).then(alertesCapteur => {\r\n      this.alertesCapteur = alertesCapteur;\r\n    });\r\n  }\r\n\r\n  loadDocumentations() {\r\n    this._erabliereApi.getDocumentations(this.erabliereSelectionnee?.id).then(documentations => {\r\n      this.documentations = documentations;\r\n    });\r\n  }\r\n\r\n  loadNotes() {\r\n    this._erabliereApi.getNotes(this.erabliereSelectionnee?.id).then(notes => {\r\n      notes.forEach(n => {\r\n        if (n.fileExtension == 'csv') {\r\n          n.decodedTextFile = atob(n.file ?? \"\");\r\n        }\r\n      });\r\n\r\n      this.notes = notes;\r\n    });\r\n  }\r\n\r\n  @ViewChild(ModifierErabliereComponent) modifierErabliereComponent?: ModifierErabliereComponent;\r\n\r\n  openEditErabliereForm(erabliere: Erabliere) {\r\n    if (this.modifierErabliereComponent != undefined) {\r\n      if (this.modifierErabliereComponent.erabliereForm != undefined) {\r\n        this.modifierErabliereComponent.erabliereForm.erabliere = { ...erabliere };\r\n        this.modifierErabliereComponent.modifierAccesUtilisateurs?.refreashAccess(erabliere.id);\r\n      }\r\n      else {\r\n        console.log(\"erabliereForm is undefined\");\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"modifierErabliereComponent is undefined\");\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authFactory",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "_erabliereApi",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authFactory",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ajouter-erabliere (shouldReloadErablieres)=\"loadErablieresPage()\"></ajouter-erabliere>\r\n<modifier-erabliere (shouldReloadErablieres)=\"loadErablieresPage()\" \r\n                    [authEnabled]=\"!authDisabled\" \r\n                    [idErabliere]=\"erabliereSelectionnee?.id\"></modifier-erabliere>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2 border-right\" [hidden]=\"cacheMenuErabliere\">\r\n        <div class=\"list-group\">\r\n            <a *ngIf=\"etat != 'Chargement des erablieres terminé'\" \r\n               class=\"list-group-item list-group-item-action\" href=\"#\">\r\n                <div class=\"d-flex w-100 justify-content-between\">\r\n                    <h5 class=\"mb-1\">{{etat}}</h5>\r\n                </div>\r\n            </a>\r\n            <a *ngFor=\"let erabliere of erablieres\" \r\n                href=\"#\" \r\n                class=\"list-group-item list-group-item-action\"\r\n                [class.active]=\"erabliereSelectionnee?.id === erabliere.id\"\r\n                (click)=\"handleErabliereLiClick(erabliere.id)\">{{erabliere.nom}} <button *ngIf=\"(!erabliere.isPublic || authDisabled)\"\r\n                                                                                         class=\"btn btn-info btn-sm float-right\"\r\n                                                                                         (click)=\"openEditErabliereForm(erabliere)\"\r\n                                                                                         data-toggle=\"modal\" data-target=\"#modifierErabliereFormModal\">&#9998;</button></a>\r\n            <button *ngIf=\"loggedIn\" class=\"list-group-item list-group-item-action\" \r\n                    data-toggle=\"modal\" data-target=\"#erabliereFormModal\">\r\n                <div class=\"d-flex w-100 justify-content-between\">\r\n                    <h5 class=\"mb-1\">Ajouter une erablière</h5>\r\n                </div>\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"erabliereSelectionnee !== null\" class=\"col-lg-10 col-md-12\" [hidden]=\"pageSelectionnee !== 0\">\r\n        <graphique [erabliere]=\"erabliereSelectionnee\"></graphique>\r\n    </div>\r\n\r\n    <alerte-page class=\"col-lg-10 col-md-12\" [alertes]=\"alertes\" [alertesCapteur]=\"alertesCapteur\" [hidden]=\"pageSelectionnee !== 1\" [idErabliereSelectionee]=\"idSelectionnee\">\r\n    </alerte-page>\r\n\r\n    <documentation class=\"col-lg-10 col-md-12\" [documentations]=\"documentations\" [hidden]=\"pageSelectionnee !== 4\" [idErabliereSelectionee]=\"idSelectionnee\">\r\n    </documentation>\r\n\r\n    <notes class=\"col-lg-10 col-md-12\" \r\n          [notes]=\"notes\" \r\n          [hidden]=\"pageSelectionnee !== 5\" \r\n          [idErabliereSelectionee]=\"idSelectionnee\"\r\n          (needToUpdate)=\"loadNotes()\">\r\n    </notes>\r\n\r\n    <div class=\"container\">\r\n        <div>\r\n            <div class=\"container\">\r\n                <apropos class=\"col-12\" [hidden]=\"pageSelectionnee !== 3\"></apropos>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ErabliereFormComponent",
            "id": "component-ErabliereFormComponent-0b30a9b4764077a1faac608893551e993ac19a18ec4f837a3a8f4138fa1a15b3b80028ad2fc6da3684139dcf6795fe7811d6f35474e17ad5e113fc16a2f454e6",
            "file": "src/erablieres/erabliere-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "erabliere-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./erabliere-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "erabliere",
                    "defaultValue": "this.getDefaultErabliere()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Erabliere",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "plusdOptions",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "plusOptionsButtonText",
                    "defaultValue": "\"Plus d'options\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "afficherPlusOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDefaultErabliere",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Erabliere } from 'src/model/erabliere';\r\n\r\n@Component({\r\n    selector: 'erabliere-form',\r\n    templateUrl: './erabliere-form.component.html',\r\n})\r\nexport class ErabliereFormComponent implements OnInit {\r\n    getDefaultErabliere() {\r\n        let e = new Erabliere();\r\n        e.afficherSectionBaril = true;\r\n        e.afficherSectionDompeux = true;\r\n        e.afficherTrioDonnees = true;\r\n        e.ipRule = \"-\";\r\n        return e;\r\n    }\r\n\r\n    erabliere: Erabliere = this.getDefaultErabliere();\r\n    plusdOptions: boolean = false;\r\n    plusOptionsButtonText: string = \"Plus d'options\";\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    afficherPlusOptions() {\r\n        this.plusdOptions = !this.plusdOptions;\r\n        if (this.plusdOptions) {\r\n            this.plusOptionsButtonText = \"Moins d'options\";\r\n        } else {\r\n            this.plusOptionsButtonText = \"Plus d'options\";\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<form #erabliereForm=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"nomErabliere\">Nom de l'érablière</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nom\" name=\"nom\" placeholder=\"Nom de l'erablière\"\r\n               [(ngModel)]=\"erabliere.nom\">\r\n    </div>\r\n    <div [hidden]=\"!plusdOptions\">\r\n        <div class=\"form-group\">\r\n            <label for=\"ipRules\">Règle IP</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"ipRule\" name=\"ipRule\" rows=\"3\" placeholder=\"Règle IP\"\r\n                   [(ngModel)]=\"erabliere.ipRule\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"numeroOrdre\">Numéro ordre</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"indiceOrdre\" name=\"indiceOrdre\" placeholder=\"0\"\r\n            [(ngModel)]=\"erabliere.indiceOrdre\">\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"afficherSectionBaril\" name=\"afficherSectionBaril\"\r\n            [(ngModel)]=\"erabliere.afficherSectionBaril\">\r\n            <label for=\"utiliserSectionBaril\" class=\"form-check-label\">Afficher section barils</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"afficherTrioDonnees\" name=\"afficherTrioDonnees\"\r\n            [(ngModel)]=\"erabliere.afficherTrioDonnees\">\r\n            <label for=\"utiliserSectionTrioDonnees\" class=\"form-check-label\">Afficher trio données</label>\r\n        </div>\r\n        <div class=\"form-check\">\r\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"afficherSectionDompeux\" name=\"afficherSectionDompeux\"\r\n            [(ngModel)]=\"erabliere.afficherSectionDompeux\">\r\n            <label for=\"utiliserSectionDompeux\" class=\"form-check-label\">Afficher section dompeux</label>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button type=\"button\" \r\n                class=\"btn btn-sm mt-3\"\r\n                [ngClass]=\"plusdOptions ? 'btn-sm btn-secondary' : 'btn-sm btn-success'\"\r\n                (click)=\"afficherPlusOptions()\">{{ plusOptionsButtonText }}</button>\r\n    </div>\r\n</form>"
        },
        {
            "name": "GraphiqueComponent",
            "id": "component-GraphiqueComponent-2d34dd5b83350a34232867403801ae3fb7bf973278ccf9d6c89673b8da62f9678da7820a4dd53eb1fe60433fca5cbb05eb6e5d78002fc3db2dae88b3c730e1c5",
            "file": "src/graphique/graphique.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "graphique",
            "styleUrls": [],
            "styles": [],
            "template": "<div>\n    <donnees-panel *ngIf=\"erabliere?.afficherTrioDonnees == true || erabliere?.afficherSectionDompeux == true\"\n                   [initialErabliere]=\"erabliere\"\n                   [erabliereSubject]=\"resetErabliere\"></donnees-panel>\n    <capteur-panels [capteurs]=\"erabliere?.capteurs\"></capteur-panels>\n    <barils-panel *ngIf=\"erabliere?.afficherSectionBaril == true\"\n                  [erabliereId]=\"erabliere?.id\"></barils-panel>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "erabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Erabliere",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "resetErabliere",
                    "defaultValue": "new Subject<Erabliere>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<Erabliere>",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetChildForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Erabliere } from \"src/model/erabliere\";\r\n\r\n@Component({\r\n    selector: 'graphique',\r\n    template: `\r\n        <div>\r\n            <donnees-panel *ngIf=\"erabliere?.afficherTrioDonnees == true || erabliere?.afficherSectionDompeux == true\" \r\n                           [initialErabliere]=\"erabliere\"\r\n                           [erabliereSubject]=\"resetErabliere\"></donnees-panel>\r\n            <capteur-panels [capteurs]=\"erabliere?.capteurs\"></capteur-panels>\r\n            <barils-panel *ngIf=\"erabliere?.afficherSectionBaril == true\" \r\n                          [erabliereId]=\"erabliere?.id\"></barils-panel>\r\n        </div>\r\n    `\r\n})\r\nexport class GraphiqueComponent implements OnChanges {\r\n    \r\n    @Input() erabliere?:Erabliere\r\n\r\n    resetErabliere: Subject<Erabliere> = new Subject<Erabliere>();\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.resetChildForm();\r\n    }\r\n\r\n    resetChildForm(){\r\n        this.resetErabliere.next(this.erabliere);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnChanges"
            ]
        },
        {
            "name": "GraphPannelComponent",
            "id": "component-GraphPannelComponent-47fbd86d62790bc3e9ed2d2c42755bd3460d927a0c5a127c572a35a696e5d879ec246bfa6274717be2486b07ec93639a0e8fd8ae7ec05e634ba47824a35afa9a",
            "file": "src/donnees/sub-panel/graphpanel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "graph-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./graphpanel.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ajouterDonneeDepuisInterface",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "datasets",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ChartDataSets[]",
                    "decorators": []
                },
                {
                    "name": "idCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "lineChartType",
                    "defaultValue": "'line' as ChartType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "ChartType",
                    "decorators": []
                },
                {
                    "name": "lineScaleType",
                    "defaultValue": "'time'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "symbole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "textActuel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | undefined | null",
                    "decorators": []
                },
                {
                    "name": "timeaxes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Label[]",
                    "decorators": []
                },
                {
                    "name": "titre",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "valeurActuel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string | null | number | undefined",
                    "decorators": []
                },
                {
                    "name": "yScaleOption",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "updateGraphCallback",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 160,
                    "type": "EventEmitter"
                },
                {
                    "name": "updateGraphUsingFixRangeCallback",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 161,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BaseChartDirective",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "BaseChartDirective"
                        }
                    ]
                },
                {
                    "name": "dateDebutFixRange",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 217
                },
                {
                    "name": "dateFinFixRange",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 218
                },
                {
                    "name": "ddr",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "debutEnHeure",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "dernierDonneeRecu",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "duree",
                    "defaultValue": "\"12h\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "fixRange",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "ids",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<number>",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "interval",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "lineChartColors",
                    "defaultValue": "[\r\n        {\r\n            borderColor: 'black',\r\n            backgroundColor: 'rgba(255,255,0,0.28)',\r\n        }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "lineChartLegend",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "lineChartOptions",
                    "defaultValue": "{\r\n        responsive: true,\r\n        scales: {\r\n            xAxes: [{\r\n                type: this.lineScaleType,\r\n                ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 7\r\n                }\r\n            }]\r\n        }\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "lineChartPlugins",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "captureDateDebut",
                    "args": [
                        {
                            "name": "$event",
                            "type": "SimpleChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "SimpleChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "captureDateFin",
                    "args": [
                        {
                            "name": "$event",
                            "type": "SimpleChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "SimpleChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cleanGraphComponentCache",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "doHttpCall",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "obtenirDebutFiltre",
                    "args": [],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateDonneesCapteur",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateDuree",
                    "args": [
                        {
                            "name": "duree",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 194,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "duree",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateGraph",
                    "args": [
                        {
                            "name": "days",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "days",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "hours",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateGraphUsingFixRange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 200,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, SimpleChange, ViewChild } from '@angular/core';\r\nimport { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\r\nimport { Color, Label, BaseChartDirective } from 'ng2-charts';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\n\r\n@Component({\r\n    selector: 'graph-panel',\r\n    templateUrl: './graphpanel.component.html',\r\n})\r\nexport class GraphPannelComponent implements OnInit {\r\n    @ViewChild(BaseChartDirective) chart?: BaseChartDirective;\r\n    @Input() datasets: ChartDataSets[] = [];\r\n    @Input() timeaxes: Label[] = [];\r\n    @Input() lineChartType = 'line' as ChartType;\r\n    @Input() lineScaleType = 'time'\r\n    @Input() yScaleOption: any = undefined\r\n    lineChartOptions: ChartOptions = {\r\n        responsive: true,\r\n        scales: {\r\n            xAxes: [{\r\n                type: this.lineScaleType,\r\n                ticks: {\r\n                    autoSkip: true,\r\n                    maxTicksLimit: 7\r\n                }\r\n            }]\r\n        }\r\n    };\r\n\r\n    lineChartColors: Color[] = [\r\n        {\r\n            borderColor: 'black',\r\n            backgroundColor: 'rgba(255,255,0,0.28)',\r\n        }\r\n    ];\r\n\r\n    lineChartLegend = true;\r\n    lineChartPlugins = [];\r\n\r\n    @Input() titre: string | undefined = \"\";\r\n    @Input() valeurActuel?: string | null | number | undefined;\r\n    @Input() symbole: string | undefined;\r\n    @Input() textActuel?: string | undefined | null;\r\n    @Input() ajouterDonneeDepuisInterface: boolean = false;\r\n\r\n    constructor(private _api: ErabliereApi) { this.chart = undefined; }\r\n\r\n    @Input() idCapteur?: any;\r\n\r\n    interval?: any\r\n\r\n    ngOnInit(): void {\r\n        if (this.idCapteur != null) {\r\n            this.doHttpCall();\r\n\r\n            this.interval = setInterval(() => {\r\n                if (this.fixRange == false) {\r\n                    this.doHttpCall();\r\n                }\r\n            }, 1000 * 60);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    updateDonneesCapteur(event: any) {\r\n        this.cleanGraphComponentCache();\r\n        this.doHttpCall();\r\n    }\r\n\r\n    dernierDonneeRecu?: string = undefined;\r\n    ddr?: string = undefined;\r\n\r\n    ids: Array<number> = []\r\n\r\n    doHttpCall(): void {\r\n        let debutFiltre = this.obtenirDebutFiltre().toISOString();\r\n        let finFiltre = new Date().toISOString();\r\n\r\n        if (this.fixRange) {\r\n            debutFiltre = this.dateDebutFixRange;\r\n            finFiltre = this.dateFinFixRange;\r\n        }\r\n\r\n        var xddr = null;\r\n        if (this.dernierDonneeRecu != undefined) {\r\n            xddr = this.dernierDonneeRecu.toString();\r\n        }\r\n\r\n        this._api.getDonneesCapteur(this.idCapteur, debutFiltre, finFiltre, xddr).then(resp => {\r\n            const h = resp.headers;\r\n\r\n            this.dernierDonneeRecu = h.get(\"x-dde\")?.valueOf();\r\n            this.ddr = h.get(\"x-ddr\")?.valueOf();\r\n\r\n            var json = resp.body;\r\n\r\n            if (json == null) {\r\n                console.log(\"donneeCapteur response body was null. Return immediatly\");\r\n                return;\r\n            }\r\n\r\n            let ids = json.map(ee => ee.id);\r\n\r\n            let donnees = [\r\n                { data: json.map(donneeCapteur => donneeCapteur.valeur != null ? donneeCapteur.valeur / 10 : null), label: this.titre }\r\n            ];\r\n\r\n            let timeaxes = json.map(donneeCapteur => donneeCapteur.d);\r\n\r\n            if (json.length > 0) {\r\n                var actualData = json[json.length - 1];\r\n                var tva = actualData.valeur;\r\n                this.valeurActuel = tva != null ? (tva / 10).toFixed(1) : null;\r\n                this.textActuel = actualData.text;\r\n            }\r\n\r\n            if (h.has(\"x-ddr\") && this.ddr != undefined && h.get(\"x-ddr\")?.valueOf() == this.ddr) {\r\n\r\n                if (ids.length > 0 && this.ids[this.ids.length - 1] === ids[0]) {\r\n                    this.datasets[0].data?.pop();\r\n                    this.timeaxes.pop();\r\n\r\n                    this.datasets[0].data?.push(donnees[0].data.shift() as any);\r\n                    this.timeaxes.push(timeaxes.shift() as any);\r\n                }\r\n\r\n                donnees[0].data.forEach(t => this.datasets[0].data?.push(t as any));\r\n                timeaxes.forEach(t => this.timeaxes.push(t as any));\r\n                ids.forEach((n: number) => this.ids.push(n));\r\n\r\n                while (this.timeaxes.length > 0 &&\r\n                    new Date(this.timeaxes[0].toString()) < new Date(debutFiltre)) {\r\n                    this.timeaxes.shift();\r\n                    this.datasets[0].data?.shift();\r\n                    this.ids.shift();\r\n                }\r\n            }\r\n            else {\r\n                this.datasets = donnees;\r\n                this.timeaxes = timeaxes as any[];\r\n                this.ids = ids;\r\n            }\r\n\r\n            this.chart?.update();\r\n        });\r\n    }\r\n\r\n    duree: string = \"12h\"\r\n    debutEnHeure: number = 12;\r\n\r\n    obtenirDebutFiltre(): Date {\r\n        var twelve_hour = 1000 * 60 * 60 * this.debutEnHeure;\r\n\r\n        return new Date(Date.now() - twelve_hour);\r\n    }\r\n\r\n    @Output() updateGraphCallback = new EventEmitter();\r\n    @Output() updateGraphUsingFixRangeCallback = new EventEmitter();\r\n\r\n    updateGraph(days: number, hours: number): void {\r\n        this.fixRange = false;\r\n        if (this.idCapteur != null) {\r\n            this.duree = \"\";\r\n\r\n            if (days != 0) {\r\n                this.duree = days + \" jours\";\r\n            }\r\n\r\n            if (hours != 0) {\r\n                this.duree = this.duree + \" \" + hours + \"h\";\r\n            }\r\n\r\n            this.debutEnHeure = hours + (24 * days);\r\n\r\n            this.cleanGraphComponentCache();\r\n\r\n            this.doHttpCall();\r\n        }\r\n        else {\r\n            // When this.idCapteur is null, we are in a component such as 'donnees.component.ts'\r\n            this.updateGraphCallback.emit({ days, hours });\r\n        }\r\n    }\r\n\r\n    private cleanGraphComponentCache() {\r\n        this.dernierDonneeRecu = undefined;\r\n        this.ddr = undefined;\r\n        this.ids = [];\r\n    }\r\n\r\n    updateDuree(duree: string) {\r\n        this.duree = duree;\r\n    }\r\n\r\n    fixRange: boolean = false;\r\n\r\n    updateGraphUsingFixRange() {\r\n        this.fixRange = true;\r\n        if (this.idCapteur != null) {\r\n            this.cleanGraphComponentCache();\r\n            this.updateDuree(this.dateDebutFixRange + \" - \" + this.dateFinFixRange);\r\n            this.doHttpCall();\r\n        }\r\n        else {\r\n            // When this.idCapteur is null, we are in a component such as 'donnees.component.ts'\r\n            var obj = {\r\n                dateDebutFixRange: this.dateDebutFixRange,\r\n                dateFinFixRange: this.dateFinFixRange\r\n            }\r\n            this.updateGraphUsingFixRangeCallback.emit(obj);\r\n        }\r\n    }\r\n\r\n    dateDebutFixRange: any = undefined;\r\n    dateFinFixRange: any = undefined;\r\n\r\n    captureDateDebut($event: SimpleChange) {\r\n        this.dateDebutFixRange = $event.currentValue;\r\n    }\r\n\r\n    captureDateFin($event: SimpleChange) {\r\n        this.dateFinFixRange = $event.currentValue;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 44,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div id=\"graph-pannel-{{idCapteur}}\" class=\"border-top\">\r\n    <h3>{{ titre }} {{ valeurActuel }} {{ symbole }}</h3>\r\n\r\n    <div class=\"container\">\r\n        <div class=\"col-6 btn-group\">\r\n            <div class=\"dropdown show\">\r\n                <a class=\"btn btn-secondary \r\n                   dropdown-toggle\" \r\n                   href=\"#\" \r\n                   role=\"button\" \r\n                   id=\"dropdownMenuLink\" \r\n                   data-toggle=\"dropdown\" \r\n                   aria-haspopup=\"true\" \r\n                   aria-expanded=\"false\">\r\n                    Durée {{ duree }}\r\n                </a>\r\n\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                <span class=\"dropdown-item\" (click)=\"updateGraph(0, 12)\">12h</span>\r\n                <span class=\"dropdown-item\" (click)=\"updateGraph(0, 24)\">24h</span>\r\n                <span class=\"dropdown-item\" (click)=\"updateGraph(7, 0)\">7 jours</span>\r\n                <span class=\"dropdown-item\">\r\n                    Choisir interval\r\n                    <div>\r\n                        <date-time-selector [titre]=\"'Début: '\" (onChange)=\"captureDateDebut($event)\"></date-time-selector>\r\n                        <date-time-selector [titre]=\"'Fin: '\" (onChange)=\"captureDateFin($event)\"></date-time-selector>\r\n                    </div>\r\n                    <button class=\"btn btn-secondary m-2\" (click)=\"updateGraphUsingFixRange()\">Appliquer</button>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12\">\r\n            <ajouter-donnee-capteur *ngIf=\"ajouterDonneeDepuisInterface\" [idCapteur]=\"idCapteur\" (needToUpdate)=\"updateDonneesCapteur($event)\"></ajouter-donnee-capteur>\r\n            <h6>{{ textActuel }}</h6>\r\n        </div>\r\n    </div>\r\n\r\n    </div>\r\n    <div class=\"chart-wrapper\">\r\n        <canvas baseChart class=\"chart\"\r\n            [datasets]=\"datasets\" \r\n            [labels]=\"timeaxes\" \r\n            [options]=\"lineChartOptions\"\r\n            [colors]=\"lineChartColors\" \r\n            [legend]=\"lineChartLegend\" \r\n            [chartType]=\"lineChartType\" \r\n            [plugins]=\"lineChartPlugins\">\r\n        </canvas>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ModifierAccesUtilisateursComponent",
            "id": "component-ModifierAccesUtilisateursComponent-07fba9afd0646371b2e8e8f04b74966cc759ec5bfbc793e6810196fe5ea5b2a1bb5e2bd06b2aacc3b59a95d84425443f78b378eae22961a9550a186551245f88",
            "file": "src/erablieres/modifier-acces-utilisateurs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "modifier-acces-utilisateurs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modifier-acces-utilisateurs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customersAccess",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CustomerAccess[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "displayEditAccess",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "displayNewLine",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "erreurAjoutAcces",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "erreurChargementDroits",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "newCustomerAccess",
                    "defaultValue": "new PutCustomerAccess()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PutCustomerAccess",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addUserAccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "creerAcces",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "customerSelected",
                    "args": [
                        {
                            "name": "customer",
                            "type": "Customer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "customer",
                            "type": "Customer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideAddUserAccess",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hideEditForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreashAccess",
                    "args": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "idErabliere",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldRefreshAccessAfterUpdate",
                    "args": [
                        {
                            "name": "shouldRefreshAccess",
                            "type": "Boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "shouldRefreshAccess",
                            "type": "Boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showEditForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "supprimer",
                    "args": [
                        {
                            "name": "customerAccess",
                            "type": "CustomerAccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "customerAccess",
                            "type": "CustomerAccess",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { Customer } from 'src/model/customer';\r\nimport { CustomerAccess } from 'src/model/customerAccess';\r\nimport { PutCustomerAccess } from 'src/model/putCustomerAccess';\r\n\r\n@Component({\r\n    selector: 'modifier-acces-utilisateurs',\r\n    templateUrl: 'modifier-acces-utilisateurs.component.html',\r\n})\r\n\r\nexport class ModifierAccesUtilisateursComponent implements OnInit {\r\n    customersAccess: CustomerAccess[] = [];\r\n    erreurChargementDroits: Boolean = false;\r\n    erreurAjoutAcces: Boolean = false;\r\n    displayNewLine: Boolean = false;\r\n    displayEditAccess: Boolean = false;\r\n    newCustomerAccess: PutCustomerAccess = new PutCustomerAccess()\r\n    @Input() idErabliere: any;\r\n    constructor(private _api: ErabliereApi) { }\r\n\r\n    ngOnInit() { \r\n        \r\n    }\r\n\r\n    refreashAccess(idErabliere: any) {\r\n        this.erreurChargementDroits = false;\r\n        this._api.getCustomersAccess(idErabliere).then(customersAccess => {\r\n            this.customersAccess = customersAccess;\r\n        })\r\n        .catch(error => {\r\n            this.customersAccess = [];\r\n            this.erreurChargementDroits = true;\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    addUserAccess() {\r\n        this.displayNewLine = true;\r\n        this.newCustomerAccess = new PutCustomerAccess();\r\n    }\r\n\r\n    hideAddUserAccess() {\r\n        this.displayNewLine = false;\r\n    }\r\n\r\n    creerAcces() {\r\n        this.erreurAjoutAcces = false;\r\n        this.newCustomerAccess.idErabliere = this.idErabliere;\r\n        this.newCustomerAccess.customerErablieres[0].action = 0;\r\n        this._api.putCustomerAccess(this.idErabliere, this.newCustomerAccess).then(() => {\r\n            this.refreashAccess(this.idErabliere);\r\n            this.displayNewLine = false;\r\n            this.newCustomerAccess = new PutCustomerAccess();\r\n        }).catch(error => {\r\n            this.erreurAjoutAcces = true;\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    customerSelected(customer: Customer) {\r\n        console.log(\"CustomerSelected \" + customer.id);\r\n        this.newCustomerAccess.customerErablieres[0].idCustomer = customer.id;\r\n    }\r\n\r\n    showEditForm() {\r\n        this.displayEditAccess = true;\r\n    }\r\n\r\n    hideEditForm() {\r\n        this.displayEditAccess = false;\r\n    }\r\n\r\n    supprimer(customerAccess?: CustomerAccess) {\r\n        if (customerAccess != undefined) {\r\n            this._api.deleteCustomerAccess(customerAccess.idErabliere, customerAccess.id).then(() => {\r\n                this.refreashAccess(customerAccess.idErabliere);\r\n            });\r\n        }\r\n    }\r\n\r\n    shouldRefreshAccessAfterUpdate(shouldRefreshAccess: Boolean) {\r\n        this.displayEditAccess = false;\r\n        if (shouldRefreshAccess) {\r\n            this.refreashAccess(this.idErabliere);\r\n        }\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <h5>Accès</h5>\r\n    <!-- Si une erreur a eu lieu de du chargement des droits, afficher un message d'erreur -->\r\n    <div *ngIf=\"erreurChargementDroits\">\r\n        <div class=\"alert alert-danger\" role=\"alert\">\r\n            Une erreur est survenue lors du chargement des droits.\r\n        </div>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Nom</th>\r\n                    <th>Email</th>\r\n                    <th>Nom Unique</th>\r\n                    <th>Accès</th>\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let acces of customersAccess\">\r\n                    <td>{{acces.customer?.name}}</td>\r\n                    <td>{{acces.customer?.email}}</td>\r\n                    <td>{{acces.customer?.uniqueName}}</td>\r\n                    <td>\r\n                        <edit-access [acces]=\"acces\" [displayEditAccess]=\"displayEditAccess\" (shouldUpdateAccess)=\"shouldRefreshAccessAfterUpdate($event)\"></edit-access>\r\n                    </td>\r\n                    <td>\r\n                        <button class=\"btn btn-danger btn-sm float-right\" (click)=\"supprimer(acces)\">&#10683;</button>\r\n                        <button *ngIf=\"!displayEditAccess\" class=\"btn btn-outline-info btn-sm mr-3 float-right\" (click)=\"showEditForm()\">&#9998;</button>\r\n                        <button *ngIf=\"displayEditAccess\" class=\"btn btn-outline-secondary btn-sm mr-3 float-right\" (click)=\"hideEditForm()\">&#8854;</button>\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"displayNewLine\">\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td>\r\n                        <select-customer (customerSelected)=\"customerSelected($event)\"></select-customer>\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"number\" class=\"form-control form-control-sm\" [(ngModel)]=\"newCustomerAccess.customerErablieres[0].access\" placeholder=\"Accès\">\r\n                    </td>\r\n                    <td>\r\n                        <button class=\"btn btn-primary btn-sm float-right\" (click)=\"creerAcces()\">&#43;</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <div *ngIf=\"erreurAjoutAcces\">\r\n            <div class=\"alert alert-danger\" role=\"alert\">\r\n                Une erreur est survenue lors de l'ajout d'un accès.\r\n            </div>\r\n        </div>\r\n        <button *ngIf=\"!erreurChargementDroits && !displayNewLine\" class=\"btn btn-outline-success\" (click)=\"addUserAccess()\">&#43;</button>\r\n        <button *ngIf=\"!erreurChargementDroits && displayNewLine\" class=\"btn btn-outline-secondary\" (click)=\"hideAddUserAccess()\">&#8854;</button>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ModifierAlerteComponent",
            "id": "component-ModifierAlerteComponent-802fd9e8afa54f2c89a44f34bbfe15ec1cfc99100b8c9d317f0543eea206b82691533c37e6d5a2ea818e167106a1d8e7889851f104b28b0b97c010347657dd91",
            "file": "src/alerte/modifier-alerte.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "modifier-alerte-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modifier-alerte.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alerte",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "Alerte",
                    "decorators": []
                },
                {
                    "name": "alerteCapteur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "AlerteCapteur",
                    "decorators": []
                },
                {
                    "name": "alerteCapteurEditFormSubject",
                    "defaultValue": "new Subject<AlerteCapteur>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "alerteEditFormSubject",
                    "defaultValue": "new Subject<Alerte>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "displayEditFormSubject",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "editAlerte",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "editAlerteCapteur",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alerteCapteurForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "alerteForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonAnnuleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonModifierAlerteCapteurClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onButtonModifierClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ErabliereApi } from \"src/core/erabliereapi.service\";\r\nimport { Alerte } from \"src/model/alerte\";\r\nimport { UntypedFormGroup, UntypedFormBuilder } from \"@angular/forms\";\r\nimport { Subject } from \"rxjs\";\r\nimport { AlerteCapteur } from \"src/model/alerteCapteur\";\r\n\r\n@Component({\r\n    selector: 'modifier-alerte-modal',\r\n    templateUrl: 'modifier-alerte.component.html'\r\n})\r\nexport class ModifierAlerteComponent implements OnInit {\r\n    constructor(private _api: ErabliereApi, private fb: UntypedFormBuilder) {\r\n        this.alerteForm = this.fb.group({\r\n            id: '',\r\n            destinataire: '',\r\n            temperatureMin: '',\r\n            temperatureMax: '',\r\n            vacciumMin: '',\r\n            vacciumMax: '',\r\n            niveauBassinMin: '',\r\n            niveauBassinMax: '',\r\n            isEnable: ''\r\n        });\r\n        this.alerteCapteurForm = this.fb.group({\r\n            destinataire: '',\r\n            min: '',\r\n            max: '',\r\n            isEnable: ''\r\n        });\r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        let alerte = this.alerte;\r\n\r\n        if (alerte != undefined) {\r\n            this.alerteForm.setValue({\r\n                id: alerte.id,\r\n                destinataire: alerte.envoyerA,\r\n                temperatureMin: alerte.temperatureThresholdHight,\r\n                temperatureMax: alerte.temperatureThresholdLow,\r\n                vacciumMin: alerte.vacciumThresholdHight,\r\n                vacciumMax: alerte.vacciumThresholdLow,\r\n                niveauBassinMin: alerte.niveauBassinThresholdHight,\r\n                niveauBassinMax: alerte.niveauBassinThresholdLow,\r\n                isEnable: alerte.isEnable\r\n            });\r\n        }\r\n\r\n        let alerteCapteur = this.alerteCapteur;\r\n\r\n        if (alerteCapteur != undefined) {\r\n            this.alerteCapteurForm.setValue({\r\n                destinataire: alerteCapteur.envoyerA,\r\n                min: alerteCapteur.minVaue,\r\n                max: alerteCapteur.maxValue,\r\n                isEnable: alerteCapteur.isEnable\r\n            });\r\n        }\r\n    }\r\n\r\n    @Input() alerte?:Alerte;\r\n    @Input() alerteCapteur?:AlerteCapteur\r\n    @Input() idErabliereSelectionee:any\r\n\r\n    @Input() displayEditFormSubject = new Subject<string>();\r\n    @Input() alerteEditFormSubject = new Subject<Alerte>();\r\n    @Input() alerteCapteurEditFormSubject = new Subject<AlerteCapteur>();\r\n\r\n    alerteForm: UntypedFormGroup;\r\n    alerteCapteurForm: UntypedFormGroup;\r\n\r\n    @Input() editAlerte: boolean = false;\r\n    @Input() editAlerteCapteur: boolean = false;\r\n\r\n    onSubmit() {\r\n\r\n    }\r\n\r\n    onButtonAnnuleClick() {\r\n        this.displayEditFormSubject.next(\"\");\r\n    }\r\n\r\n    onButtonModifierClick() {\r\n        let alerte = new Alerte();\r\n\r\n        alerte.id = this.alerteForm.controls['id'].value;\r\n        alerte.idErabliere = this.idErabliereSelectionee;\r\n        alerte.envoyerA = this.alerteForm.controls['destinataire'].value;\r\n        alerte.temperatureThresholdLow = this.alerteForm.controls['temperatureMax'].value;\r\n        alerte.temperatureThresholdHight = this.alerteForm.controls['temperatureMin'].value;\r\n        alerte.vacciumThresholdLow = this.alerteForm.controls['vacciumMax'].value;\r\n        alerte.vacciumThresholdHight = this.alerteForm.controls['vacciumMin'].value;\r\n        alerte.niveauBassinThresholdLow = this.alerteForm.controls['niveauBassinMax'].value;\r\n        alerte.niveauBassinThresholdHight = this.alerteForm.controls['niveauBassinMin'].value;\r\n        alerte.isEnable = this.alerteForm.controls['isEnable'].value;\r\n        this._api.putAlerte(this.idErabliereSelectionee, alerte)\r\n                 .then(r => {\r\n                     this.displayEditFormSubject.next(\"\");\r\n                     this.alerteEditFormSubject.next(r);\r\n                 });\r\n    }\r\n\r\n    onButtonModifierAlerteCapteurClick() {\r\n        let alerte = new AlerteCapteur();\r\n\r\n        alerte.id = this.alerteCapteur?.id;\r\n        alerte.idCapteur = this.alerteCapteur?.idCapteur;\r\n        alerte.envoyerA = this.alerteCapteurForm.controls['destinataire'].value;\r\n        alerte.isEnable = this.alerteCapteurForm.controls['isEnable'].value;\r\n        if (this.alerteCapteurForm.controls['min'].value != \"\") {\r\n            alerte.minVaue = parseInt(this.alerteCapteurForm.controls['min'].value);\r\n        } else {\r\n            alerte.minVaue = undefined;\r\n        }\r\n        if (this.alerteCapteurForm.controls['max'].value != \"\") {\r\n            alerte.maxValue = parseInt(this.alerteCapteurForm.controls['max'].value);\r\n        } else {\r\n            alerte.maxValue = undefined;\r\n        }\r\n        this._api.putAlerteCapteur(alerte.idCapteur, alerte)\r\n                 .then(r => {\r\n                     this.displayEditFormSubject.next(\"\");\r\n                     this.alerteCapteurEditFormSubject.next(r);\r\n                 });\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"editAlerte\">\r\n    <p>Id: {{ alerte?.id }}</p>\r\n    <form [formGroup]=\"alerteForm\">\r\n        <div class=\"form-group\">\r\n          Destinataires: <input class=\"form-control\" type=\"text\" formControlName=\"destinataire\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Temperature Min.: <input class=\"form-control\" type=\"text\" formControlName=\"temperatureMin\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Temperature Max.: <input class=\"form-control\" type=\"text\" formControlName=\"temperatureMax\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Vaccium Min.: <input class=\"form-control\" type=\"text\" formControlName=\"vacciumMin\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Vaccium Max.: <input class=\"form-control\" type=\"text\" formControlName=\"vacciumMax\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Niveau Bassin Min.: <input class=\"form-control\" type=\"text\" formControlName=\"niveauBassinMin\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          Niveau Bassin Max.: <input class=\"form-control\" type=\"text\" formControlName=\"niveauBassinMax\">\r\n        </div>\r\n      <button class=\"btn btn-primary\" (click)=\"onButtonModifierClick()\">Modifier</button>\r\n      <button class=\"btn btn-secondary\" (click)=\"onButtonAnnuleClick()\">Annuler</button>\r\n    </form>\r\n</div>\r\n<div *ngIf=\"editAlerteCapteur\">\r\n  <p>Id: {{ alerteCapteur?.id }}</p>\r\n  <form [formGroup]=\"alerteCapteurForm\">\r\n      <div class=\"form-group\">\r\n        Destinataires: <input class=\"form-control\" type=\"text\" formControlName=\"destinataire\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        Min.: <input class=\"form-control\" type=\"text\" formControlName=\"min\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        Max.: <input class=\"form-control\" type=\"text\" formControlName=\"max\">\r\n      </div>\r\n    <button class=\"btn btn-primary\" (click)=\"onButtonModifierAlerteCapteurClick()\">Modifier</button>\r\n    <button class=\"btn btn-secondary\" (click)=\"onButtonAnnuleClick()\">Annuler</button>\r\n  </form>\r\n</div>"
        },
        {
            "name": "ModifierErabliereComponent",
            "id": "component-ModifierErabliereComponent-c85cbd0634e5e28c54290cb88574eeb79a97a060b2557fd23bb28402a8768310a96005b2991bc0502b710c83c99cade6608108d3499bd20ad1d9c5f6f5d0328a",
            "file": "src/erablieres/modifier-erabliere.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "modifier-erabliere",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./modifier-erabliere.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "authEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Boolean",
                    "decorators": []
                },
                {
                    "name": "idErabliere",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "shouldReloadErablieres",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "afficherSectionDeleteErabliere",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "erabliereForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErabliereFormComponent",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ErabliereFormComponent"
                        }
                    ]
                },
                {
                    "name": "modalTitle",
                    "defaultValue": "\"Modifier une érablière\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "modifierAccesUtilisateurs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModifierAccesUtilisateursComponent",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ModifierAccesUtilisateursComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteErabliere",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "modifierErabliere",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onHideModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDeleteErabliere",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { ErabliereFormComponent } from 'src/erablieres/erabliere-form.component'\r\nimport { ModifierAccesUtilisateursComponent } from './modifier-acces-utilisateurs.component';\r\n\r\n@Component({\r\n    selector: 'modifier-erabliere',\r\n    templateUrl: './modifier-erabliere.component.html',\r\n})\r\nexport class ModifierErabliereComponent implements OnInit {\r\n    @ViewChild(ErabliereFormComponent) erabliereForm?: ErabliereFormComponent;\r\n    @ViewChild(ModifierAccesUtilisateursComponent) modifierAccesUtilisateurs?: ModifierAccesUtilisateursComponent;\r\n    modalTitle: string = \"Modifier une érablière\";\r\n    @Output() shouldReloadErablieres = new EventEmitter();\r\n    @Input() authEnabled: Boolean = false;\r\n    @Input() idErabliere?: any;\r\n    afficherSectionDeleteErabliere: boolean = false;\r\n\r\n    constructor(private _api: ErabliereApi) { }\r\n\r\n    ngOnInit() {\r\n        this.afficherSectionDeleteErabliere = false;\r\n    }\r\n\r\n    modifierErabliere() {\r\n        if (this.erabliereForm != undefined) {\r\n            if (this.erabliereForm.erabliere != undefined) {\r\n                let erabliere = this.erabliereForm.erabliere;\r\n\r\n                this._api.putErabliere(erabliere).then(() => {\r\n                    this.shouldReloadErablieres.emit();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    showDeleteErabliere() {\r\n        this.afficherSectionDeleteErabliere = true;\r\n    }\r\n\r\n    deleteErabliere() {\r\n        if (confirm(\"Voulez-vous vraiment supprimer cette érablière ? Cette action est irréversible.\")) {\r\n            var erabliere = this.erabliereForm?.erabliere;\r\n            if (erabliere != undefined) {\r\n                this._api.deleteErabliere(this.idErabliere, erabliere).then(() => {\r\n                    this.afficherSectionDeleteErabliere = true;\r\n                    this.shouldReloadErablieres.emit({event: 'delete'});\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onHideModal() {\r\n        this.afficherSectionDeleteErabliere = false;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal fade\" \r\n     id=\"modifierErabliereFormModal\" \r\n     tabindex=\"-1\" \r\n     role=\"dialog\" \r\n     aria-labelledby=\"modifierErabliereFormModalLabel\" \r\n     aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"modifierErabliereFormModalLabel\">{{ modalTitle }}</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <erabliere-form></erabliere-form>\r\n                <div *ngIf=\"authEnabled\">\r\n                    <hr />\r\n                    <modifier-acces-utilisateurs [idErabliere]=\"idErabliere\"></modifier-acces-utilisateurs>\r\n                </div>\r\n                <div class=\"container\">\r\n                    <div *ngIf=\"!afficherSectionDeleteErabliere\">\r\n                        <hr />\r\n                        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"showDeleteErabliere()\">Supprimer</button>\r\n                    </div>\r\n                    <div *ngIf=\"afficherSectionDeleteErabliere\">\r\n                        <hr />\r\n                        <h5 class=\"text-danger\">Supprimer l'érablière</h5>\r\n                        <p class=\"text-danger\">Cette action entrainera la suppression de l'érablère et de tout les données relié à l'érablière. Les données ne pourront pas être récupéré.</p>\r\n                        <button type=\"button\" class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteErabliere()\">Supprimer</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"onHideModal()\">Annuler</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"modifierErabliere()\">Modifier</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "NoteComponent",
            "id": "component-NoteComponent-959c61dfb61b24dbf4ed631cf2a0c9a31afd9e26ebcfd8a00a79df00890f646c89a7a9ea4dfbffad714a14ec1fc46839829786cdaf1af13c80d6a544b988b11c",
            "file": "src/notes/note.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "note",
            "styleUrls": [],
            "styles": [],
            "template": "<div id=\"note-{{ note.id }}\">\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <h4 class=\"mt-4\">{{ note.title }}</h4>\n        </div>\n\n        <div class=\"col-md-8\">\n            <button class=\"btn btn-danger btn-sm\" (click)=\"deleteNote()\">Supprimer</button>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <p class=\"noteDate\">{{ note.noteDate }}</p>\n    </div>\n\n    <div class=\"row\">\n        <p class=\"noteDescription\">{{ note.text }}</p>\n    </div>\n\n    <div *ngIf=\"note.fileExtension == 'csv'\">\n        <p>{{ note.decodedTextFile }}</p>\n    </div>\n\n    <div *ngIf=\"note.fileExtension != 'csv'\" class=\"row\">\n        <img *ngIf=\"note.file != ''\" src=\"data:image/png;base64,{{ note.file }}\" />\n    </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "note",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "Note",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "needToUpdate",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "deleteNote",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { Note } from 'src/model/note';\r\n\r\n@Component({\r\n    selector: 'note',\r\n    template: `\r\n        <div id=\"note-{{ note.id }}\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <h4 class=\"mt-4\">{{ note.title }}</h4>\r\n                </div>\r\n\r\n                <div class=\"col-md-8\">\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"deleteNote()\">Supprimer</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <p class=\"noteDate\">{{ note.noteDate }}</p>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <p class=\"noteDescription\">{{ note.text }}</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"note.fileExtension == 'csv'\">\r\n                <p>{{ note.decodedTextFile }}</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"note.fileExtension != 'csv'\" class=\"row\">\r\n                <img *ngIf=\"note.file != ''\" src=\"data:image/png;base64,{{ note.file }}\" />\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class NoteComponent implements OnInit {\r\n    constructor(private _api: ErabliereApi) { \r\n        this.note = new Note();\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    @Input() note: Note;\r\n\r\n    deleteNote() {\r\n        this._api.deleteNote(this.note.idErabliere, this.note.id).then(\r\n            (data) => {\r\n                this.needToUpdate.emit();\r\n            }\r\n        );\r\n    }\r\n\r\n    @Output() needToUpdate = new EventEmitter();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "NotesComponent",
            "id": "component-NotesComponent-cbaf8917bf3ea969bb718daa8234f544ee34ff7ce167a4a33665812cf0713bdbe3d72c4598460e618e2ae7bd20180504eaa2091b023bfaa27a19934979ad81fd",
            "file": "src/notes/notes.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "notes",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notes.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "idErabliereSelectionee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "notes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Note[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "needToUpdate",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateNotes",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Note } from 'src/model/note';\r\n\r\n@Component({\r\n    selector: 'notes',\r\n    templateUrl: \"./notes.component.html\"\r\n})\r\nexport class NotesComponent implements OnInit {\r\n    @Input() idErabliereSelectionee:any\r\n\r\n    @Input() notes?: Note[];\r\n\r\n    @Output() needToUpdate = new EventEmitter();\r\n    \r\n    constructor () { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    updateNotes(event:any) {\r\n        this.needToUpdate.emit();\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3>Notes</h3>\r\n<ajouter-note [idErabliereSelectionee]=\"idErabliereSelectionee\" (needToUpdate)=\"updateNotes($event)\"></ajouter-note>\r\n<div class=\"row ml-1\">\r\n    <div *ngIf=\"notes == undefined || notes.length == 0\">\r\n        <p>Aucune note</p>\r\n    </div>\r\n    <div *ngFor=\"let note of notes\" class=\"col-12\">\r\n        <note [note]=\"note\" (needToUpdate)=\"updateNotes($event)\"></note>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "SelectCustomerComponent",
            "id": "component-SelectCustomerComponent-37507929cc75c71852b60eb5c1cc9aa9cf34df0e74b40e82a4fe5d62a46fa1b150c3d17e6d29bfcff527786760997adcb7ea773df2483a435b5ffdd1820563c3",
            "file": "src/customer/select-customer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-customer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "select-customer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "customerSelected",
                    "defaultValue": "new EventEmitter<Customer>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "customers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selectRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'select'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ErabliereApi } from 'src/core/erabliereapi.service';\r\nimport { Customer } from 'src/model/customer';\r\n\r\n@Component({\r\n    selector: 'select-customer',\r\n    templateUrl: 'select-customer.component.html'\r\n})\r\n\r\nexport class SelectCustomerComponent implements OnInit {\r\n    @ViewChild('select') selectRef?: ElementRef;\r\n    customers: Customer[] = [];\r\n    @Output() customerSelected = new EventEmitter<Customer>();\r\n\r\n    constructor(private _api: ErabliereApi) { }\r\n\r\n    ngOnInit() { \r\n        this._api.getCustomers().then(customers => {\r\n            this.customers = customers;\r\n        })\r\n        .catch(error => {\r\n            this.customers = [];\r\n            throw error;\r\n        });\r\n    }\r\n\r\n    onSelectChange(event: any) {\r\n        this.customerSelected.emit(this.customers.find(c => c.id == event.target.value));\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "_api",
                        "type": "ErabliereApi",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<select class=\"custom-select\" (change)=\"onSelectChange($event)\">\r\n    <option selected>Choisir un utilisateur</option>\r\n    <option *ngFor=\"let customer of customers\" [value]=\"customer.id\">\r\n        {{ customer.uniqueName }}\r\n    </option>\r\n</select>"
        },
        {
            "name": "SigninRedirectCallbackComponent",
            "id": "component-SigninRedirectCallbackComponent-50ce1754928f79b877347e9f69028398a4c9b74376ed4d5356426e581ae6f9b156beb6054d5c7a07d344b05adf0e488f0c4cac1bbfc95f5c8f13a003a31ab5af",
            "file": "src/authorisation/signin-redirect/signin-redirect-callback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signin-callback",
            "styleUrls": [],
            "styles": [],
            "template": "<div></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthorisationFactoryService } from '../authorisation-factory-service';\r\nimport { IAuthorisationSerivce } from '../iauthorisation-service';\r\n\r\n@Component({\r\n    selector: 'app-signin-callback',\r\n    template: '<div></div>'\r\n})\r\n\r\nexport class SigninRedirectCallbackComponent implements OnInit {\r\n    private _authService: IAuthorisationSerivce\r\n\r\n    constructor(private _authFactoryService: AuthorisationFactoryService, private _router: Router) \r\n    {\r\n        this._authService = _authFactoryService.getAuthorisationService();\r\n    }\r\n\r\n    async ngOnInit() {\r\n        await this._authService.completeLogin().then(user => {\r\n            this._router.navigate(['/'], {replaceUrl: true});\r\n        });\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SignoutRedirectCallbackComponent",
            "id": "component-SignoutRedirectCallbackComponent-5a88b0288a89d0463a7e34292a6de6b59b4acfe1d0d17859faff64f4ea1a25de25668072695b3ecc0901e48a6f928589bc03229f6ba7b897eecde556456d6e44",
            "file": "src/authorisation/signout-redirect/signout-redirect-callback.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signout-redirect-callback",
            "styleUrls": [],
            "styles": [],
            "template": "<div></div>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAuthorisationSerivce",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthorisationFactoryService } from '../authorisation-factory-service';\r\nimport { IAuthorisationSerivce } from '../iauthorisation-service';\r\n\r\n@Component({\r\n    selector: 'signout-redirect-callback',\r\n    template: '<div></div>'\r\n})\r\n\r\nexport class SignoutRedirectCallbackComponent implements OnInit {\r\n    private _authService: IAuthorisationSerivce\r\n\r\n    constructor(private _authFactoryService: AuthorisationFactoryService,\r\n                private _router: Router) \r\n                {\r\n                    this._authService = _authFactoryService.getAuthorisationService();\r\n                }\r\n\r\n    ngOnInit() { \r\n        this._authService.completeLogout().then(_ => {\r\n            this._router.navigate(['/'], { replaceUrl: true });\r\n        })\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "_authFactoryService",
                        "type": "AuthorisationFactoryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "_router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-41e0a566f3503f8b2a83729dac65891c771117bbd49ba84932800984b3d972051f6a742c340b93ed6f44f8e89c9249a433e5189eab4c38ba7b4db6b7912c0e0e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [
                {
                    "name": "ngDoBootstrap",
                    "args": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "appRef",
                            "type": "ApplicationRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, NgModule, DoBootstrap, ApplicationRef, Injector } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { ErabliereComponent } from 'src/erablieres/erabliere.component';\r\nimport { DonneesComponent } from 'src/donnees/donnees.component';\r\nimport { GraphPannelComponent } from 'src/donnees/sub-panel/graphpanel.component';\r\nimport { BarilsComponent } from 'src/barils/barils.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { AlerteComponent } from 'src/alerte/alerte.component';\r\nimport { AProposComponent } from 'src/apropos/apropos.component';\r\nimport { DocumentationComponent } from 'src/documentation/documentation.component';\r\nimport { BarPannelComponent } from 'src/donnees/sub-panel/barpannel.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { SigninRedirectCallbackComponent } from 'src/authorisation/signin-redirect/signin-redirect-callback.component';\r\nimport { DashboardComponent } from 'src/dashboard/dashboard.component';\r\nimport { SignoutRedirectCallbackComponent } from 'src/authorisation/signout-redirect/signout-redirect-callback.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CapteurPannelsComponent } from 'src/donnees/sub-panel/capteurpannels.component';\r\nimport { EnvironmentService } from 'src/environments/environment.service';\r\nimport { GraphiqueComponent } from 'src/graphique/graphique.component';\r\nimport { AjouterAlerteComponent } from 'src/alerte/ajouter-alerte.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModifierAlerteComponent } from 'src/alerte/modifier-alerte.component';\r\nimport { NotesComponent } from 'src/notes/notes.component';\r\nimport { AjouterNoteComponent } from 'src/notes/ajouter-note.component';\r\nimport { AjouterDonneeCapteurComponent } from 'src/donneeCapteurs/ajouter-donnee-capteur.component';\r\nimport { MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\r\nimport { BrowserCacheLocation, Configuration, IPublicClientApplication, LogLevel, PublicClientApplication } from '@azure/msal-browser';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthorisationFactoryService } from 'src/authorisation/authorisation-factory-service';\r\nimport { DateTimeSelector } from 'src/donnees/sub-panel/userinput/datetimeselector.component';\r\nimport { NoteComponent } from 'src/notes/note.component';\r\nimport { AjouterErabliereComponent } from 'src/erablieres/ajouter-erabliere.component';\r\nimport { ErabliereFormComponent } from 'src/erablieres/erabliere-form.component';\r\nimport { ModifierErabliereComponent } from 'src/erablieres/modifier-erabliere.component';\r\nimport { ModifierAccesUtilisateursComponent } from 'src/erablieres/modifier-acces-utilisateurs.component';\r\nimport { SelectCustomerComponent } from 'src/customer/select-customer.component';\r\nimport { EditAccessCompoenent } from 'src/access/edit-access.component';\r\n\r\ndeclare global {\r\n  interface Window { \r\n    appRef: ApplicationRef, \r\n    Cypress: any,\r\n    authorisationFactoryService: AuthorisationFactoryService\r\n   }\r\n}\r\n\r\nexport function initConfig(appConfig: EnvironmentService) {\r\n  return () => appConfig.loadConfig();\r\n}\r\n\r\nexport function MSALInstanceFactory(appConfig: EnvironmentService): IPublicClientApplication {\r\n  if (!appConfig.authEnable) {\r\n    return new PublicClientApplication({\r\n      auth: {\r\n        clientId: \"null\"\r\n      }\r\n    });\r\n  }\r\n\r\n  if (appConfig.clientId == undefined) {\r\n    throw new Error(\"/assets/config/oauth-oidc.json/clientId cannot be null when using AzureAD authentication mode\");\r\n  }\r\n\r\n  const msalConfig: Configuration = {\r\n    auth: {\r\n      clientId: appConfig.clientId,\r\n      authority: \"https://login.microsoftonline.com/\" + appConfig.tenantId,\r\n      redirectUri: \"/signin-callback\",\r\n      postLogoutRedirectUri: \"/signout-callback\",\r\n      navigateToLoginRequestUrl: true\r\n    },\r\n    cache: {\r\n      cacheLocation: BrowserCacheLocation.LocalStorage,\r\n      storeAuthStateInCookie: false,\r\n    },\r\n    system: {\r\n      loggerOptions: {\r\n        loggerCallback: (level: LogLevel, message: string, containsPii: boolean): void => {\r\n          if (containsPii) {\r\n            return;\r\n          }\r\n          switch (level) {\r\n            case LogLevel.Error:\r\n              console.error(message);\r\n              return;\r\n            case LogLevel.Info:\r\n              console.info(message);\r\n              return;\r\n            case LogLevel.Verbose:\r\n              console.debug(message);\r\n              return;\r\n            case LogLevel.Warning:\r\n              console.warn(message);\r\n              return;\r\n          }\r\n        },\r\n        piiLoggingEnabled: false\r\n      },\r\n      windowHashTimeout: 60000,\r\n      iframeHashTimeout: 6000,\r\n      loadFrameTimeout: 0,\r\n      asyncPopups: false\r\n    }\r\n  };\r\n\r\n  return new PublicClientApplication(msalConfig);\r\n}\r\n\r\nconst isIE = window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ErabliereComponent,\r\n    AjouterErabliereComponent,\r\n    ModifierErabliereComponent,\r\n    ErabliereFormComponent,\r\n    ModifierAccesUtilisateursComponent,\r\n    SelectCustomerComponent,\r\n    EditAccessCompoenent,\r\n    GraphiqueComponent,\r\n    DonneesComponent,\r\n    DashboardComponent,\r\n    GraphPannelComponent,\r\n    DateTimeSelector,\r\n    CapteurPannelsComponent,\r\n    BarPannelComponent,\r\n    BarilsComponent,\r\n    AlerteComponent,\r\n    AjouterAlerteComponent,\r\n    ModifierAlerteComponent,\r\n    AProposComponent,\r\n    DocumentationComponent,\r\n    NotesComponent,\r\n    NoteComponent,\r\n    AjouterNoteComponent,\r\n    AjouterDonneeCapteurComponent,\r\n    SigninRedirectCallbackComponent,\r\n    SignoutRedirectCallbackComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ChartsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initConfig,\r\n      deps: [EnvironmentService],\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory,\r\n      deps: [EnvironmentService]\r\n    },\r\n    MsalService\r\n  ]\r\n})\r\nexport class AppModule implements DoBootstrap { \r\n  constructor(private injector: Injector) {}\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {\r\n    appRef.bootstrap(AppComponent);\r\n\r\n    if (!environment.production) {\r\n      if (window.Cypress) {\r\n        window.appRef = appRef;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AProposComponent"
                        },
                        {
                            "name": "AjouterAlerteComponent"
                        },
                        {
                            "name": "AjouterDonneeCapteurComponent"
                        },
                        {
                            "name": "AjouterErabliereComponent"
                        },
                        {
                            "name": "AjouterNoteComponent"
                        },
                        {
                            "name": "AlerteComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "BarPannelComponent"
                        },
                        {
                            "name": "BarilsComponent"
                        },
                        {
                            "name": "CapteurPannelsComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "DateTimeSelector"
                        },
                        {
                            "name": "DocumentationComponent"
                        },
                        {
                            "name": "DonneesComponent"
                        },
                        {
                            "name": "EditAccessCompoenent"
                        },
                        {
                            "name": "ErabliereComponent"
                        },
                        {
                            "name": "ErabliereFormComponent"
                        },
                        {
                            "name": "GraphPannelComponent"
                        },
                        {
                            "name": "GraphiqueComponent"
                        },
                        {
                            "name": "ModifierAccesUtilisateursComponent"
                        },
                        {
                            "name": "ModifierAlerteComponent"
                        },
                        {
                            "name": "ModifierErabliereComponent"
                        },
                        {
                            "name": "NoteComponent"
                        },
                        {
                            "name": "NotesComponent"
                        },
                        {
                            "name": "SelectCustomerComponent"
                        },
                        {
                            "name": "SigninRedirectCallbackComponent"
                        },
                        {
                            "name": "SignoutRedirectCallbackComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d4a6bcb7d27119f7e968f2afecc4220468d348bf09b5fbc21a07c377a5207d2f852f72204177068d1e23644d5583bf09816710d709e66bcdc1a81d04c84bcea8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AlerteComponent } from 'src/alerte/alerte.component';\r\nimport { AProposComponent } from 'src/apropos/apropos.component';\r\nimport { SigninRedirectCallbackComponent } from 'src/authorisation/signin-redirect/signin-redirect-callback.component';\r\nimport { SignoutRedirectCallbackComponent } from 'src/authorisation/signout-redirect/signout-redirect-callback.component';\r\nimport { DashboardComponent } from 'src/dashboard/dashboard.component';\r\nimport { DocumentationComponent } from 'src/documentation/documentation.component';\r\nimport { GraphiqueComponent } from 'src/graphique/graphique.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: DashboardComponent },\r\n    { path: 'dashboard', component: DashboardComponent },\r\n    { path: 'alertes', component: DashboardComponent },\r\n    { path: 'documentations', component: DashboardComponent },\r\n    { path: 'notes', component: DashboardComponent },\r\n    { path: 'apropos', component: DashboardComponent },\r\n    { path: 'signin-callback', component: SigninRedirectCallbackComponent },\r\n    { path: 'signout-callback', component: SignoutRedirectCallbackComponent }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "customerAccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditAccess.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new CustomerAccess()"
            },
            {
                "name": "Display",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditAccess.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Edit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditAccess.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  enableAuth: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,  \r\n  enableAuth: true\r\n}"
            },
            {
                "name": "isIE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/EditAccess.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [
            {
                "name": "initConfig",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appConfig",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "appConfig",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "MSALInstanceFactory",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "appConfig",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "IPublicClientApplication",
                "jsdoctags": [
                    {
                        "name": "appConfig",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/EditAccess.stories.ts": [
                {
                    "name": "customerAccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditAccess.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new CustomerAccess()"
                },
                {
                    "name": "Display",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditAccess.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Edit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditAccess.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/EditAccess.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  enableAuth: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,  \r\n  enableAuth: true\r\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "isIE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "window.navigator.userAgent.indexOf('MSIE ') > -1 || window.navigator.userAgent.indexOf('Trident/') > -1"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/app.module.ts": [
                {
                    "name": "initConfig",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appConfig",
                            "type": "EnvironmentService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "appConfig",
                            "type": "EnvironmentService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "MSALInstanceFactory",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "appConfig",
                            "type": "EnvironmentService",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "IPublicClientApplication",
                    "jsdoctags": [
                        {
                            "name": "appConfig",
                            "type": "EnvironmentService",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "dashboard",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "alertes",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "documentations",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "notes",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "apropos",
                        "component": "DashboardComponent"
                    },
                    {
                        "path": "signin-callback",
                        "component": "SigninRedirectCallbackComponent"
                    },
                    {
                        "path": "signout-callback",
                        "component": "SignoutRedirectCallbackComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "cypress/pages/alertes.page.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AlertesPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "cypress/pages/apropos.page.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AProposPage",
                "coveragePercent": 50,
                "coverageCount": "1/2",
                "status": "medium"
            },
            {
                "filePath": "cypress/pages/component/graphpannel.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GraphPannelCompoenent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "cypress/pages/home.page.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "cypress/pages/notes.page.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NotesPage",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "cypress/support/commands.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Chainable",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "cypress/util/formUtil.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormUtil",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/access/edit-access.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditAccessCompoenent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/alerte/ajouter-alerte.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AjouterAlerteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/alerte/alerte.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AlerteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/alerte/modifier-alerte.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModifierAlerteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "initConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "MSALInstanceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isIE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/apropos/apropos.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AProposComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/authorisation-bypass-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthorisationBypassService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/authorisation-factory-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthorisationFactoryService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/authorisation-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthorisationService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/azuread-autorisation-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AzureADAuthorisationService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/azuread-cypress-autorisation-service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AzureADCypressAuthorisationService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/iauthorisation-service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAuthorisationSerivce",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/signin-redirect/signin-redirect-callback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigninRedirectCallbackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/authorisation/signout-redirect/signout-redirect-callback.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignoutRedirectCallbackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/barils/barils.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarilsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/core/erabliereapi.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ErabliereApi",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "src/customer/select-customer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectCustomerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/documentation/documentation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/donneeCapteurs/ajouter-donnee-capteur.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AjouterDonneeCapteurComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/donnees/donnees.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonneesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "src/donnees/sub-panel/barpannel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BarPannelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/donnees/sub-panel/capteurpannels.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CapteurPannelsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/donnees/sub-panel/graphpanel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphPannelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/40",
                "status": "low"
            },
            {
                "filePath": "src/donnees/sub-panel/userinput/datetimeselector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateTimeSelector",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EnvironmentService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/erablieres/ajouter-erabliere.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AjouterErabliereComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/erablieres/erabliere-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErabliereFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/erablieres/erabliere.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErabliereComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/erablieres/modifier-acces-utilisateurs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModifierAccesUtilisateursComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/erablieres/modifier-erabliere.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModifierErabliereComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/graphique/graphique.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GraphiqueComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/model/alerte.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Alerte",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/model/alerteCapteur.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AlerteCapteur",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/model/appuser.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/model/authresponse.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthResponse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/model/baril.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Baril",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/model/capteur.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Capteur",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/model/customer.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/model/customerAccess.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomerAccess",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/model/documentation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Documentation",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/model/dompeux.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Dompeux",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/model/donnee.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Donnee",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/model/donneeCapteur.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DonneeCapteur",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/model/donneeCapteur.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PostDonneeCapteur",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/model/erabliere.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Erabliere",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/model/note.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Note",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/model/oauthConfig.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OAuthConfig",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/model/putCustomerAccess.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CustomerErabliere",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/model/putCustomerAccess.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PutCustomerAccess",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/model/urlModel.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UrlModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/notes/ajouter-note.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AjouterNoteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/notes/note.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NoteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/notes/notes.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditAccess.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customerAccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditAccess.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditAccess.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Edit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/EditAccess.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}