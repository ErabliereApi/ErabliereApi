# this is a github action that reboot an azure webapp
# and then run the test script locally targeting the webapp
name: ErabliereAPI-Test-Demo

on: 
  workflow_run:
      workflows: ["ErabliereAPI-Image"]
      branches: [master]
      types: 
        - completed
  workflow_dispatch:

env:
  EXAMPLE: exemple

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v2
        with: # Set Azure credentials secret as an input
          creds: ${{ secrets.AZURE_DEMO_CREDENTIALS }}
          enable-AzPSSession: true

      - uses: actions/checkout@v4
      - name: Reboot the webapp
        run: |
          az webapp restart --name erabliereapi-demo --resource-group erabliereapi-demo
          sleep 60

      - uses: actions/checkout@master
      - uses: matt-ball/newman-action@master
        with:
          collection: Postman/ErabliereAPI.postman_collection.json
          environment: Postman/ErabliereAPI-Demo.postman_environment.json
          reporters: '["cli","junit"]'

      - name: Install node
        uses: actions/setup-node@v4
        with:
            node-version: '20'

      - name: Install dependencies
        run: |
          cd ErabliereIU
          npm install

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: ErabliereIU
          config: video=false,baseUrl=https://erabliereapi-demo.azurewebsites.net

      - name: Upload screenshots
        uses: actions/upload-artifact@v4.2.0
        if: failure()
        with:
          name: screenshots
          path: /home/runner/work/ErabliereApi/ErabliereApi/ErabliereIU/cypress/screenshots

  promote_docker_image:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - uses: actions/checkout@v4

      # Login into dockerhub
      # skip this test if the run is trigger form a pull request from a fork
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.registryUsername }}
          password: ${{ secrets.registryPassword }}

      - name: Tag the v3-dev as v3 and latest
        if: github.event_name != 'pull_request'
        run: |
          docker tag erabliereapi:v3-dev erabliereapi:v3
          docker tag erabliereapi:v3-dev erabliereapi:latest

      - name: Push the image
        if: github.event_name != 'pull_request'
        run: |
          docker push erabliereapi:v3
          docker push erabliereapi:latest