version: "3.2"
services:
  erabliere-api:
    image: "erabliereapi/erabliereapi:v3-dev"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "https://+;"
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp-web-api.pfx
      KestrelBinder_ErrorOnUnknowConfiguration: "False"
      USE_CORS: "True"
      CORS_ORIGINS: "*"
      CORS_HEADERS: "*"
      CORS_METHODS: "*"
      USE_SQL: "true"
      SQL_CONNEXION_STRING: "Server=tcp:sql,1433;Initial Catalog=ErabliereAPI;Persist Security Info=False;User ID=SA;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;"
      SQL_USE_STARTUP_MIGRATION: "true"
      DEBUG_HEADERS: "true"
      LOG_SQL: "Console"
      USE_AUTHENTICATION: "true"
      USE_SWAGGER_AUTHORIZATIONCODE_WORKFLOW: "true"
      USE_SWAGGER_PKCE: "true"
      SWAGGER_AUTHORIZATION_URL: "https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/authorize"
      SWAGGER_TOKEN_URL: "https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token"
      OIDC_CLIENT_ID: "${SWAGGER_CLIENT_ID}"
      OIDC_CLIENT_PASSWORD: ""
      OAUTH2_REDIRECT_URL: "https://${IP_ADDRESS}:5001/api/oauth2-redirect.html"
      OIDC_AUDIENCE: "api://${API_CLIENT_ID}"
      OIDC_SCOPES: "${SWAGGER_SCOPES}"
      OIDC_AUTHORITY: "https://login.microsoftonline.com/${TENANT_ID}/"
      EMAIL_CONFIG_PATH: "-"
      AzureAD:ClientId: "${API_CLIENT_ID}"
      AzureAD:TenantId: "${TENANT_ID}"
    ports:
      - "5001:443"
    volumes:
      # - ./config:/app/wwwroot/assets/config
      # - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
      #   source: ./config/oauth-oidc.json
      #   target: /app/wwwroot/assets/config/oauth-oidc.json
      - ./ErabliereApi/certs:/https/
      - type: bind # Using a bind volume as only this single file from `certs` directory should end up in the container.
        source: ./certs/aspnetapp-root-cert.cer
        target: /https-root/aspnetapp-root-cert.cer
    depends_on:
      - sql
    entrypoint: /app/docker-entrypoint.sh
  sql:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    healthcheck:
        test: ["CMD", "/opt/mssql-tools/bin/sqlcmd","-U SA -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'"]
        interval: 10s
        timeout: 10s
        retries: 6
