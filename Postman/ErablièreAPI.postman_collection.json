{
	"info": {
		"_postman_id": "fb00ef55-1b63-4ab8-a5bd-79416d20167f",
		"name": "ErablièreAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6202256",
		"_collection_link": "https://www.postman.com/erabliereapi/erabliereapi/collection/y41sv8i/erablireapi?action=share&source=collection_link&creator=6202256"
	},
	"item": [
		{
			"name": "Init",
			"item": [
				{
					"name": "Erabliere A",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"ErabliereA_ID\", pm.response.json().id);\r",
									"}\r",
									"else {\r",
									"    pm.test(\"Status code is 400\", function () {\r",
									"        pm.response.to.have.status(400);\r",
									"        pm.expect(pm.response.text()).to.contains(\"L'érablière nommé 'Érablière A' existe déjà\");\r",
									"    });\r",
									"\r",
									"    const getRequest = {\r",
									"        url: pm.request.url + \"?$filter=Nom eq 'Érablière A'\",\r",
									"        method: 'GET',\r",
									"        header: {\r",
									"            'accept': 'application/json',\r",
									"            'authorization': pm.request.headers[\"authorization\"]\r",
									"        }\r",
									"    };\r",
									"\r",
									"    pm.sendRequest(getRequest, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(error);\r",
									"            pm.expect(error).to.be.null;\r",
									"        } else {\r",
									"            pm.test(\"Recherche Erabliere A a fonctionné\", () => {\r",
									"                pm.expect(response.code).to.eq(200);\r",
									"            });\r",
									"            pm.collectionVariables.set(\"ErabliereA_ID\", response.json()[0].id);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Érablière A\",\r\n  \"ipRules\": \"-\",\r\n  \"indiceOrdre\": -100,\r\n  \"afficherSectionBaril\": true,\r\n  \"afficherTrioDonnees\": true,\r\n  \"afficherSectionDompeux\": true,\r\n  \"isPublic\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Erabliere A - Taux sucre capteur",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.test(\"Id is as expected\", function () {\r",
									"        var json = pm.response.json();\r",
									"\r",
									"        pm.expect(json.id).to.eq(\"010e708b-a7d0-449e-77e2-08d9d37ca582\");\r",
									"    });\r",
									"}\r",
									"else {\r",
									"    pm.test(\"Status code is 400\", function () {\r",
									"        pm.response.to.have.status(400);\r",
									"        pm.expect(pm.response.text()).to.contains(\"Le capteur avec l'id '010e708b-a7d0-449e-77e2-08d9d37ca582' exite déjà\");\r",
									"    });\r",
									"\r",
									"    const getRequest = {\r",
									"        url: pm.request.url + \"/010e708b-a7d0-449e-77e2-08d9d37ca582\",\r",
									"        method: 'GET',\r",
									"        header: {\r",
									"            'accept': 'application/json',\r",
									"            'authorization': pm.request.headers[\"authorization\"]\r",
									"        }\r",
									"    };\r",
									"\r",
									"    pm.sendRequest(getRequest, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(error);\r",
									"            pm.expect(error).to.be.null;\r",
									"        } else {\r",
									"            pm.test(\"Recherche du capteur taux de sucre à fonctionné\", () => {\r",
									"                pm.expect(response.code).to.eq(200);\r",
									"                var capteurInfo = response.json();\r",
									"                pm.expect(capteurInfo.nom).to.eq(\"Taux de sucre\");\r",
									"                pm.expect(capteurInfo.afficherCapteurDashboard).to.be.true;\r",
									"                pm.expect(capteurInfo.ajouterDonneeDepuisInterface).to.be.true;\r",
									"            });\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"010e708b-a7d0-449e-77e2-08d9d37ca582\",\r\n  \"nom\": \"Taux de sucre\",\r\n  \"symbole\": \"\",\r\n  \"dc\": \"2022-05-01T13:10:53.052Z\",\r\n  \"afficherCapteurDashboard\": true,\r\n  \"ajouterDonneeDepuisInterface\": true,\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/capteurs",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{ErabliereA_ID}}",
								"capteurs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Erabliere B",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"ErabliereB_ID\", pm.response.json().id);\r",
									"}\r",
									"else {\r",
									"    pm.test(\"Status code is 400\", function () {\r",
									"        pm.response.to.have.status(400);\r",
									"        pm.expect(pm.response.text()).to.contains(\"L'érablière nommé 'Érablière B' existe déjà\");\r",
									"    });\r",
									"\r",
									"    const getRequest = {\r",
									"        url: pm.request.url + \"?$filter=Nom eq 'Érablière B'\",\r",
									"        method: 'GET',\r",
									"        header: {\r",
									"            'accept': 'application/json',\r",
									"            'authorization': pm.request.headers[\"authorization\"]\r",
									"        }\r",
									"    };\r",
									"\r",
									"    pm.sendRequest(getRequest, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(error);\r",
									"            pm.expect(error).to.be.null;\r",
									"        } else {\r",
									"            pm.test(\"Recherche Erabliere B a fonctionné\", () => {\r",
									"                pm.expect(response.code).to.eq(200);\r",
									"            })\r",
									"            pm.collectionVariables.set(\"ErabliereB_ID\", response.json()[0].id);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Érablière B\",\r\n  \"ipRules\": \"192.160.45.45\",\r\n  \"indiceOrdre\": 0,\r\n  \"afficherSectionBaril\": true,\r\n  \"afficherTrioDonnees\": true,\r\n  \"afficherSectionDompeux\": true,\r\n  \"isPublic\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Erabliere Saint-Alfred",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.test(\"Status code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"\r",
									"    pm.collectionVariables.set(\"ErabliereSaintAlfred_ID\", pm.response.json().id);\r",
									"}\r",
									"else {\r",
									"    pm.test(\"Status code is 400\", function () {\r",
									"        pm.response.to.have.status(400);\r",
									"        pm.expect(pm.response.text()).to.contains(\"L'érablière nommé 'Érablière Saint-Alfred' existe déjà\");\r",
									"    });\r",
									"\r",
									"    const getRequest = {\r",
									"        url: pm.request.url + \"?$filter=Nom eq 'Érablière Saint-Alfred'\",\r",
									"        method: 'GET',\r",
									"        header: {\r",
									"            'accept': 'application/json',\r",
									"            'authorization': pm.request.headers[\"authorization\"]\r",
									"        }\r",
									"    };\r",
									"\r",
									"    pm.sendRequest(getRequest, (error, response) => {\r",
									"        if (error) {\r",
									"            console.log(error);\r",
									"            pm.expect(error).to.be.null;\r",
									"        } else {\r",
									"            pm.test(\"Recherche Erabliere Saint-Alfred a fonctionné\", () => {\r",
									"                pm.expect(response.code).to.eq(200);\r",
									"            })\r",
									"            pm.collectionVariables.set(\"ErabliereSaintAlfred_ID\", response.json()[0].id);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Érablière Saint-Alfred\",\r\n  \"ipRules\": \"-\",\r\n  \"indiceOrdre\": 0,\r\n  \"afficherSectionBaril\": true,\r\n  \"afficherTrioDonnees\": true,\r\n  \"afficherSectionDompeux\": true,\r\n  \"isPublic\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Flow 1",
			"item": [
				{
					"name": "Obtenir la liste des érablières",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.be.lessThan(22);\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", parseInt(pm.response.headers.get(\"x-odatacount\")));\r",
									"\r",
									"    console.log(\"/erablieres return \" + listeErabliere.length + \" erablières. With a total of \" + \r",
									"        pm.response.headers.get(\"x-odatacount\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$count=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$count",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"\r",
									"    var responseObj = pm.response.json();\r",
									"\r",
									"    pm.collectionVariables.set(\"idErabliere\", responseObj.id);\r",
									"\r",
									"    console.log(\"idErabliere \" + pm.collectionVariables.get(\"idErabliere\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"nomErabliere\", pm.variables.replaceIn(\"{{$randomWords}}\").substr(0, 50));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"{{nomErabliere}}\",\r\n  \"isPublic\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trouver l'érablière dans la liste",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 400) {\r",
									"    console.log(pm.response.text())\r",
									"}\r",
									"\r",
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(1);\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", listeErabliere.length);\r",
									"\r",
									"    const erabliere = listeErabliere.find(e => e.nom == pm.collectionVariables.get(\"nomErabliere\"));\r",
									"\r",
									"    pm.collectionVariables.set(\"idErabliere\", erabliere.id);\r",
									"\r",
									"    console.log(\"Id de l'érablière : \" + pm.collectionVariables.get(\"idErabliere\"));\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq '{{nomErabliere}}'&$count=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq '{{nomErabliere}}'"
								},
								{
									"key": "$count",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données - Aucune donnée, nouvelle érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle donnée",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateDonnee\", new Date(new Date() - 1000 * 60 * 60 * 24 * 7).toISOString()); // Aujourd'hui - une semaine"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": -15,\r\n  \"nb\": 0,\r\n  \"v\": 0,\r\n  \"idErabliere\": \"{{idErabliere}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données - Une donnée",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(1);\r",
									"\r",
									"    const donnee = listeErabliere[0];\r",
									"\r",
									"    pm.expect(new Date(donnee.d).toISOString()).to.eq(new Date(pm.collectionVariables.get(\"dateDonnee\")).toISOString());\r",
									"    pm.expect(donnee.t).to.eq(-15);\r",
									"    pm.expect(donnee.v).to.eq(0);\r",
									"    pm.expect(donnee.nb).to.eq(0);\r",
									"    pm.expect(donnee.nboc).to.eq(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle donnée Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateDonnee\", new Date(new Date() - (1000 * 60 * 60 * 24 * 7) + (1000 * 60)).toISOString()); // Aujourd'hui - une semaine + une minute"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": -16,\r\n  \"nb\": 0,\r\n  \"v\": 0,\r\n  \"idErabliere\": \"{{idErabliere}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données -Deux données",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(2);\r",
									"\r",
									"    const donnee = listeErabliere[1];\r",
									"\r",
									"    pm.expect(new Date(donnee.d).toISOString()).to.eq(new Date(pm.collectionVariables.get(\"dateDonnee\")).toISOString());\r",
									"    pm.expect(donnee.t).to.eq(-16);\r",
									"    pm.expect(donnee.v).to.eq(0);\r",
									"    pm.expect(donnee.nb).to.eq(0);\r",
									"    pm.expect(donnee.nboc).to.eq(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Supprimer l'érablière du flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{idErabliere}}\",\r\n    \"nom\": \"{{nomErabliere}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valider la suppression de l'érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code == 400) {\r",
									"    console.log(pm.response.text())\r",
									"}\r",
									"\r",
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", listeErabliere.length);\r",
									"\r",
									"    const erabliere = listeErabliere.find(e => e.id == pm.collectionVariables.get(\"idErabliere\"));\r",
									"\r",
									"    pm.expect(erabliere).to.eq(undefined);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq '{{nomErabliere}}'",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq '{{nomErabliere}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Preset alimentation",
			"item": [
				{
					"name": "Erabliere A",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée Janvier",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date(pm.variables.get('thisYear'), 00, 01).toISOString());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereA_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouvelle donnée Février",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date(pm.variables.get('thisYear'), 01, 01).toISOString());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereA_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereA_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereA_ID}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Erabliere 2",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(400); // Validation de l'ip\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereB_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereB_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereB_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(400); // Validation de l'ip\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": \"{{ErabliereB_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereB_ID}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereB_ID}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Erabliere 3",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereSaintAlfred_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereSaintAlfred_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereSaintAlfred_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouvelle donnée il y a 11h",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var twelveHours = 1000 * 60 * 60 * 11;\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", new Date(Date.now() - twelveHours).toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereSaintAlfred_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereSaintAlfred_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereSaintAlfred_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouvelle donnée il y a 11h Copy",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var twentyTwoHours = 1000 * 60 * 60 * 22;\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", new Date(Date.now() - twentyTwoHours).toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": \"{{ErabliereSaintAlfred_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereSaintAlfred_ID}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereSaintAlfred_ID}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": \"{{ErabliereSaintAlfred_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{ErabliereSaintAlfred_ID}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{ErabliereSaintAlfred_ID}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"function temperature() {",
							"  var date = new Date();",
							"  var m = date.getMonth();",
							"  var doy = date.getDay();",
							"  var hod = date.getHours();",
							"  return Math.floor((12 * Math.sin((doy-105)*Math.PI/182.5)) + (5*Math.sin(doy*4)) + (5 * Math.sin((hod - 7) * 3.14159 / 12)) * 10);",
							"}",
							"",
							"function vaccium(t) {",
							"  var vaccium = 0",
							"  if (t >= -1 - pm.collectionVariables.get('idErabliere')) {",
							"    vaccium = 243",
							"  }",
							"  if (t > 3) {",
							"      vaccium += 5;",
							"  }",
							"  return vaccium;",
							"}",
							"",
							"function niveauBassin() {",
							"  niveauBassin = 0",
							"  return niveauBassin",
							"}",
							"",
							"pm.collectionVariables.set('temperature', temperature());",
							"pm.collectionVariables.set('vaccium', vaccium(pm.collectionVariables.get('temperature')));",
							"pm.collectionVariables.set('niveauBassin', niveauBassin());"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "DonneesCapteur",
			"item": [
				{
					"name": "PreRequis",
					"item": [
						{
							"name": "Ajouter une nouvelle érablière",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"\r",
											"    pm.collectionVariables.set('idErabliere', pm.response.json().id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"nomErabliere\", pm.variables.replaceIn(\"{{$randomWords}}\").substr(0, 50));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"nom\": \"{{nomErabliere}}\",\r\n  \"isPublic\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter un capteur",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nom\": \"{{$randomWord}}\",\r\n    \"idErabliere\": \"{{idErabliere}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/capteurs",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"capteurs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Obtenir les capteurs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var capteurs = pm.response.json();\r",
											"\r",
											"pm.collectionVariables.set(\"idCapteur\", capteurs[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/capteurs",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"capteurs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "FeedSensor",
					"item": [
						{
							"name": "Envoyer Donnée Capteur",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {},
										"requests": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"V\": {{$randomInt}},\r\n    \"idCapteur\": \"{{idCapteur}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/Capteurs/{{idCapteur}}/DonneesCapteurV2",
									"host": [
										"{{url}}"
									],
									"path": [
										"Capteurs",
										"{{idCapteur}}",
										"DonneesCapteurV2"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Rapports",
			"item": [
				{
					"name": "Créer un rapport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\",\r\n  \"utiliserTemperatureTrioDonnee\": true,\r\n  \"dateDebut\": \"{{thisYear}}-01-01\",\r\n  \"dateFin\": \"{{thisYear}}-12-31\",\r\n  \"seuilTemperature\": 0,\r\n  \"afficherDansDashboard\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/Rapports/RapportDegreeJour?sauvegarder=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{ErabliereA_ID}}",
								"Rapports",
								"RapportDegreeJour"
							],
							"query": [
								{
									"key": "sauvegarder",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lister les rapports",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"idErabliere\": \"{{ErabliereA_ID}}\",\r\n  \"utiliserTemperatureTrioDonnee\": true,\r\n  \"dateDebut\": \"{{thisYear}}-01-01\",\r\n  \"dateFin\": \"{{thisYear}}-12-31\",\r\n  \"seuilTemperature\": 0,\r\n  \"afficherDansDashboard\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/Rapports",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{ErabliereA_ID}}",
								"Rapports"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OData",
			"item": [
				{
					"name": "Dashboard OData request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$expand=capteurs($filter=afficherCapteurDashboard eq true)",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$expand",
									"value": "capteurs($filter=afficherCapteurDashboard eq true)"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Swagger",
			"item": [
				{
					"name": "Valider obtention du json",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/swagger.json",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"swagger.json"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import Erablieres Région Administrative",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"nom\": \"Bas-Saint-Laurent\",\r\n    \"indiceOrdre\": 10000,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 48.36384517524865,\r\n    \"longitude\": -68.49591878281669\r\n  },\r\n  {\r\n    \"nom\": \"Capitale-Nationale\",\r\n    \"indiceOrdre\": 10003,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 47.38496339934989,\r\n    \"longitude\": -71.20556190781137\r\n  },\r\n  {\r\n    \"nom\": \"Mauricie\",\r\n    \"indiceOrdre\": 10004,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 47.656906464339954,\r\n    \"longitude\": -73.42317856046826\r\n  },\r\n  {\r\n    \"nom\": \"Estrie\",\r\n    \"indiceOrdre\": 10005,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 45.465261544340066,\r\n    \"longitude\": -71.73525922794931\r\n  },\r\n  {\r\n    \"nom\": \"Outaouais\",\r\n    \"indiceOrdre\": 10007,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 46.39509195843295,\r\n    \"longitude\": -76.58804870447105\r\n  },\r\n  {\r\n    \"nom\": \"Gaspésie Îles-de-la-Madeleine\",\r\n    \"indiceOrdre\": 10011,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 48.688585475401105,\r\n    \"longitude\": -65.54566637637208\r\n  },\r\n  {\r\n    \"nom\": \"Chaudière-Appalaches\",\r\n    \"indiceOrdre\": 10012,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 46.35581133702958,\r\n    \"longitude\": -70.76374995636235\r\n  },\r\n  {\r\n    \"nom\": \"Lanaudière\",\r\n    \"indiceOrdre\": 10014,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 46.46027211444612,\r\n    \"longitude\": -74.00210845020332\r\n  },\r\n  {\r\n    \"nom\": \"Laurentides\",\r\n    \"indiceOrdre\": 10015,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 46.60991985872497,\r\n    \"longitude\": -75.01340031700434\r\n  },\r\n  {\r\n    \"nom\": \"Montérégie\",\r\n    \"indiceOrdre\": 10016,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 45.36942683363112,\r\n    \"longitude\": -73.20176262217262\r\n  },\r\n  {\r\n    \"nom\": \"Centre du Québec\",\r\n    \"indiceOrdre\": 10017,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 46.0352188124743,\r\n    \"longitude\": -72.06344256021812\r\n  },\r\n  {\r\n    \"nom\": \"Autres région productrice\",\r\n    \"indiceOrdre\": 10018,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 0,\r\n    \"longitude\": 0\r\n  },\r\n  {\r\n    \"nom\": \"ErabliereAPI\",\r\n    \"indiceOrdre\": null,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"isPublic\": true,\r\n    \"latitude\": 0,\r\n    \"longitude\": 0\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"import"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projet station ski",
			"item": [
				{
					"name": "Import Station ski",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"nom\": \"Mont Tremblant\",\r\n    \"codePostal\": \"J8E 1T1\",\r\n    \"description\": \"Une station populaire avec 102 pistes, un village animé et une vue spectaculaire.\",\r\n    \"addresse\": \"1000 Chemin des Voyageurs, Mont-Tremblant, QC\",\r\n    \"regionAdministrative\": \"Laurentides\",\r\n    \"latitude\": 46.209129869485636,\r\n    \"longitude\": -74.58567254048866,\r\n    \"base\": 230,\r\n    \"sommet\": 875,\r\n    \"isPublic\": true,\r\n    \"indiceOrdre\": 50,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"afficherSectionHoraire\": true\r\n  },\r\n  {\r\n    \"nom\": \"Le Massif de Charlevoix\",\r\n    \"codePostal\": \"G0A 2L0\",\r\n    \"description\": \"Réputée pour ses vues spectaculaires sur le fleuve Saint-Laurent et son grand dénivelé.\",\r\n    \"addresse\": \"1350 Rue Principale, Petite-Rivière-Saint-François, QC\",\r\n    \"regionAdministrative\": \"Capitale-Nationale\",\r\n    \"latitude\": 47.27739412875612,\r\n    \"longitude\": -70.57492727420376,\r\n    \"base\": 36,\r\n    \"sommet\": 806,\r\n    \"isPublic\": true,\r\n    \"indiceOrdre\": 51,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"afficherSectionHoraire\": true\r\n  },\r\n  {\r\n    \"nom\": \"Stoneham\",\r\n    \"codePostal\": \"G3C 1T3\",\r\n    \"description\": \"Offre des pistes éclairées pour le ski de soirée et une variété pour tous les niveaux.\",\r\n    \"addresse\": \"600 Chemin du Hibou, Stoneham-et-Tewkesbury, QC\",\r\n    \"regionAdministrative\": \"Capitale-Nationale\",\r\n    \"latitude\": 47.02703295011956,\r\n    \"longitude\": -71.38289084536765,\r\n    \"base\": 240,\r\n    \"sommet\": 593,\r\n    \"isPublic\": true,\r\n    \"indiceOrdre\": 52,\r\n    \"afficherSectionBaril\": false,\r\n    \"afficherTrioDonnees\": false,\r\n    \"afficherSectionDompeux\": false,\r\n    \"afficherSectionHoraire\": true\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/import",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"import"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mont Tremblant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idErabliere', json[0].id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq 'Mont Tremblant'",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq 'Mont Tremblant'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Capteur nombre de piste 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idCapteur', json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Nombre de pistes\",\r\n  \"afficherCapteurDashboard\": true,\r\n  \"ajouterDonneeDepuisInterface\": true,\r\n  \"idErabliere\": \"{{idErabliere}}\",\r\n  \"displayType\": \"Tableau\",\r\n  \"taille\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/capteurs",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"capteurs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post piste Mont Tremblant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"v\": 102,\r\n  \"idCapteur\": \"{{idCapteur}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/capteurs/{{idCapteur}}/DonneesCapteurV2",
							"host": [
								"{{url}}"
							],
							"path": [
								"capteurs",
								"{{idCapteur}}",
								"DonneesCapteurV2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Horaire Mont Tremblant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idErabliere\": \"{{idErabliere}}\",\r\n    \"lundi\": \"08:30-16:00\",\r\n    \"mardi\": \"08:30-16:00\",\r\n    \"mercredi\": \"08:30-16:00\",\r\n    \"jeudi\": \"08:30-16:00\",\r\n    \"vendredi\": \"08:30-16:00\",\r\n    \"samedi\": \"08:30-16:00\",\r\n    \"dimanche\": \"08:30-16:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/Horaire",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"Horaire"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mont Tremblant Horaire",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idErabliere', json[0].id);\r",
									"\r",
									"pm.test(\"Horaire is initialize\", () => {\r",
									"    pm.expect(json[0].horaires.length).to.eq(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq 'Mont Tremblant'&$expand=horaires",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq 'Mont Tremblant'"
								},
								{
									"key": "$expand",
									"value": "horaires"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Le Massif de Charlevoix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idErabliere', json[0].id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq 'Le Massif de Charlevoix'",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq 'Le Massif de Charlevoix'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Capteur nombre de piste 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idCapteur', json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Nombre de pistes\",\r\n  \"afficherCapteurDashboard\": true,\r\n  \"ajouterDonneeDepuisInterface\": true,\r\n  \"idErabliere\": \"{{idErabliere}}\",\r\n  \"displayType\": \"Tableau\",\r\n  \"taille\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/capteurs",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"capteurs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post piste Le Massif de Charlevoix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"v\": 53,\r\n  \"idCapteur\": \"{{idCapteur}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/capteurs/{{idCapteur}}/DonneesCapteurV2",
							"host": [
								"{{url}}"
							],
							"path": [
								"capteurs",
								"{{idCapteur}}",
								"DonneesCapteurV2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Horaire Le Massif de Charlevoix",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idErabliere\": \"{{idErabliere}}\",\r\n    \"lundi\": \"08:30-15:30\",\r\n    \"mardi\": \"08:30-15:30\",\r\n    \"mercredi\": \"08:30-15:30\",\r\n    \"jeudi\": \"08:30-15:30\",\r\n    \"vendredi\": \"08:30-15:30\",\r\n    \"samedi\": \"08:30-15:30\",\r\n    \"dimanche\": \"08:30-15:30\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/horaire",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"horaire"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stoneham",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idErabliere', json[0].id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres?$filter=nom eq 'Stoneham'&$expand=horaires",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							],
							"query": [
								{
									"key": "$filter",
									"value": "nom eq 'Stoneham'"
								},
								{
									"key": "$expand",
									"value": "horaires"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Capteur nombre de piste 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let json = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set('idCapteur', json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"Nombre de pistes\",\r\n  \"afficherCapteurDashboard\": true,\r\n  \"ajouterDonneeDepuisInterface\": true,\r\n  \"idErabliere\": \"{{idErabliere}}\",\r\n  \"displayType\": \"Tableau\",\r\n  \"taille\": 12\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/capteurs",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"capteurs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post piste Stoneham",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"v\": 42,\r\n  \"idCapteur\": \"{{idCapteur}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/capteurs/{{idCapteur}}/DonneesCapteurV2",
							"host": [
								"{{url}}"
							],
							"path": [
								"capteurs",
								"{{idCapteur}}",
								"DonneesCapteurV2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Horaire Stoneham",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"idErabliere\": \"{{idErabliere}}\",\r\n    \"lundi\": \"08:30-21:00\",\r\n    \"mardi\": \"08:30-21:00\",\r\n    \"mercredi\": \"08:30-21:00\",\r\n    \"jeudi\": \"08:30-21:00\",\r\n    \"vendredi\": \"08:30-21:00\",\r\n    \"samedi\": \"08:30-21:00\",\r\n    \"dimanche\": \"08:30-21:00\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/Horaire",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"Horaire"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appareils",
			"item": [
				{
					"name": "Validation",
					"item": [
						{
							"name": "Put on non existing erabliere",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE nmaprun>\r\n<?xml-stylesheet href=\"file:///C:/Program Files (x86)/Nmap/nmap.xsl\" type=\"text/xsl\"?>\r\n<!-- Nmap 7.92 scan initiated Sat Sep  6 12:24:23 2025 as: &quot;C:\\\\Program Files\r\n(x86)\\\\Nmap\\\\nmap.exe&quot; -sV -oX result.xml 192.168.2.0/24 -->\r\n<nmaprun scanner=\"nmap\"\r\n    args=\"&quot;C:\\\\Program Files (x86)\\\\Nmap\\\\nmap.exe&quot; -sV -oX result.xml 192.168.2.0/24\"\r\n    start=\"1757175863\" startstr=\"Sat Sep  6 12:24:23 2025\" version=\"7.92\" xmloutputversion=\"1.05\">\r\n    <scaninfo type=\"syn\" protocol=\"tcp\" numservices=\"1000\"\r\n        services=\"1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n    <verbose level=\"0\" />\r\n    <debugging level=\"0\" />\r\n    <hosthint>\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.1\" addrtype=\"ipv4\" />\r\n        <address addr=\"44:65:7F:5A:35:6A\" addrtype=\"mac\" vendor=\"Calix\" />\r\n        <hostnames>\r\n        </hostnames>\r\n    </hosthint>\r\n    <hosthint>\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.16\" addrtype=\"ipv4\" />\r\n        <address addr=\"EC:8A:C4:7B:67:AE\" addrtype=\"mac\" vendor=\"Amazon Technologies\" />\r\n        <hostnames>\r\n        </hostnames>\r\n    </hosthint>\r\n    <host starttime=\"1757175873\" endtime=\"1757175912\">\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.1\" addrtype=\"ipv4\" />\r\n        <address addr=\"44:65:7F:5A:35:69\" addrtype=\"mac\" vendor=\"Calix\" />\r\n        <hostnames>\r\n            <hostname name=\"DHCP.Home\" type=\"PTR\" />\r\n        </hostnames>\r\n        <ports>\r\n            <extraports state=\"closed\" count=\"995\">\r\n                <extrareasons reason=\"reset\" count=\"995\" proto=\"tcp\"\r\n                    ports=\"1,3-4,6-7,9,13,17,19-20,22,24-26,30,32-33,37,42-43,49,53,70,79,81-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,444-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n            </extraports>\r\n            <port protocol=\"tcp\" portid=\"21\">\r\n                <state state=\"filtered\" reason=\"no-response\" reason_ttl=\"0\" />\r\n                <service name=\"ftp\" method=\"table\" conf=\"3\" />\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"23\">\r\n                <state state=\"filtered\" reason=\"no-response\" reason_ttl=\"0\" />\r\n                <service name=\"telnet\" method=\"table\" conf=\"3\" />\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"80\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"http\" product=\"micro_httpd\" method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/a:acme:micro_httpd</cpe>\r\n                </service>\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"443\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"http\" product=\"micro_httpd\" tunnel=\"ssl\" method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/a:acme:micro_httpd</cpe>\r\n                    <cpe>cpe:/o:acme:micro_httpd</cpe>\r\n                </service>\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"5431\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"upnp\" product=\"Belkin/Linksys wireless router UPnP\"\r\n                    extrainfo=\"UPnP 1.0; BRCM400 1.0\" ostype=\"Linux 2.4\" devicetype=\"router\"\r\n                    method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/o:linux:linux_kernel:2.4</cpe>\r\n                </service>\r\n            </port>\r\n        </ports>\r\n        <times srtt=\"3970\" rttvar=\"2472\" to=\"100000\" />\r\n    </host>\r\n    <host starttime=\"1757175873\" endtime=\"1757175912\">\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.16\" addrtype=\"ipv4\" />\r\n        <address addr=\"EC:8A:C4:7B:67:AF\" addrtype=\"mac\" vendor=\"Amazon Technologies\" />\r\n        <hostnames>\r\n            <hostname name=\"amazon-4e31913f7\" type=\"PTR\" />\r\n        </hostnames>\r\n        <ports>\r\n            <extraports state=\"closed\" count=\"999\">\r\n                <extrareasons reason=\"reset\" count=\"999\" proto=\"tcp\"\r\n                    ports=\"1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8008,8010-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n            </extraports>\r\n            <port protocol=\"tcp\" portid=\"8009\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"tcpwrapped\" method=\"probed\" conf=\"8\" />\r\n            </port>\r\n        </ports>\r\n        <times srtt=\"16730\" rttvar=\"3900\" to=\"100000\" />\r\n    </host>\r\n    <runstats>\r\n        <finished time=\"1757176069\" timestr=\"Sat Sep  6 12:27:49 2025\"\r\n            summary=\"Nmap done at Sat Sep  6 12:27:49 2025; 256 IP addresses (6 hosts up) scanned in 206.46 seconds\"\r\n            elapsed=\"206.46\" exit=\"success\" />\r\n        <hosts up=\"2\" down=\"254\" total=\"256\" />\r\n    </runstats>\r\n</nmaprun>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{$guid}}/Appareil/nmapscan",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{$guid}}",
										"Appareil",
										"nmapscan"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get appareils",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/Appareil?$expand=statut,adresses,ports,nomsHost",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{ErabliereA_ID}}",
								"Appareil"
							],
							"query": [
								{
									"key": "$expand",
									"value": "statut,adresses,ports,nomsHost"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Put namp scan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE nmaprun>\r\n<?xml-stylesheet href=\"file:///C:/Program Files (x86)/Nmap/nmap.xsl\" type=\"text/xsl\"?>\r\n<!-- Nmap 7.92 scan initiated Sat Sep  6 12:24:23 2025 as: &quot;C:\\\\Program Files\r\n(x86)\\\\Nmap\\\\nmap.exe&quot; -sV -oX result.xml 192.168.2.0/24 -->\r\n<nmaprun scanner=\"nmap\"\r\n    args=\"&quot;C:\\\\Program Files (x86)\\\\Nmap\\\\nmap.exe&quot; -sV -oX result.xml 192.168.2.0/24\"\r\n    start=\"1757175863\" startstr=\"Sat Sep  6 12:24:23 2025\" version=\"7.92\" xmloutputversion=\"1.05\">\r\n    <scaninfo type=\"syn\" protocol=\"tcp\" numservices=\"1000\"\r\n        services=\"1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n    <verbose level=\"0\" />\r\n    <debugging level=\"0\" />\r\n    <hosthint>\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.1\" addrtype=\"ipv4\" />\r\n        <address addr=\"44:65:7F:5A:35:6A\" addrtype=\"mac\" vendor=\"Calix\" />\r\n        <hostnames>\r\n        </hostnames>\r\n    </hosthint>\r\n    <hosthint>\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.16\" addrtype=\"ipv4\" />\r\n        <address addr=\"EC:8A:C4:7B:67:AE\" addrtype=\"mac\" vendor=\"Amazon Technologies\" />\r\n        <hostnames>\r\n        </hostnames>\r\n    </hosthint>\r\n    <host starttime=\"1757175873\" endtime=\"1757175912\">\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.1\" addrtype=\"ipv4\" />\r\n        <address addr=\"44:65:7F:5A:35:69\" addrtype=\"mac\" vendor=\"Calix\" />\r\n        <hostnames>\r\n            <hostname name=\"DHCP.Home\" type=\"PTR\" />\r\n        </hostnames>\r\n        <ports>\r\n            <extraports state=\"closed\" count=\"995\">\r\n                <extrareasons reason=\"reset\" count=\"995\" proto=\"tcp\"\r\n                    ports=\"1,3-4,6-7,9,13,17,19-20,22,24-26,30,32-33,37,42-43,49,53,70,79,81-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,444-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n            </extraports>\r\n            <port protocol=\"tcp\" portid=\"21\">\r\n                <state state=\"filtered\" reason=\"no-response\" reason_ttl=\"0\" />\r\n                <service name=\"ftp\" method=\"table\" conf=\"3\" />\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"23\">\r\n                <state state=\"filtered\" reason=\"no-response\" reason_ttl=\"0\" />\r\n                <service name=\"telnet\" method=\"table\" conf=\"3\" />\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"80\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"http\" product=\"micro_httpd\" method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/a:acme:micro_httpd</cpe>\r\n                </service>\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"443\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"http\" product=\"micro_httpd\" tunnel=\"ssl\" method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/a:acme:micro_httpd</cpe>\r\n                    <cpe>cpe:/o:acme:micro_httpd</cpe>\r\n                </service>\r\n            </port>\r\n            <port protocol=\"tcp\" portid=\"5431\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"upnp\" product=\"Belkin/Linksys wireless router UPnP\"\r\n                    extrainfo=\"UPnP 1.0; BRCM400 1.0\" ostype=\"Linux 2.4\" devicetype=\"router\"\r\n                    method=\"probed\" conf=\"10\">\r\n                    <cpe>cpe:/o:linux:linux_kernel:2.4</cpe>\r\n                </service>\r\n            </port>\r\n        </ports>\r\n        <times srtt=\"3970\" rttvar=\"2472\" to=\"100000\" />\r\n    </host>\r\n    <host starttime=\"1757175873\" endtime=\"1757175912\">\r\n        <status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\" />\r\n        <address addr=\"192.168.2.16\" addrtype=\"ipv4\" />\r\n        <address addr=\"EC:8A:C4:7B:67:AF\" addrtype=\"mac\" vendor=\"Amazon Technologies\" />\r\n        <hostnames>\r\n            <hostname name=\"amazon-4e31913f7\" type=\"PTR\" />\r\n        </hostnames>\r\n        <ports>\r\n            <extraports state=\"closed\" count=\"999\">\r\n                <extrareasons reason=\"reset\" count=\"999\" proto=\"tcp\"\r\n                    ports=\"1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8008,8010-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389\" />\r\n            </extraports>\r\n            <port protocol=\"tcp\" portid=\"8009\">\r\n                <state state=\"open\" reason=\"syn-ack\" reason_ttl=\"64\" />\r\n                <service name=\"tcpwrapped\" method=\"probed\" conf=\"8\" />\r\n            </port>\r\n        </ports>\r\n        <times srtt=\"16730\" rttvar=\"3900\" to=\"100000\" />\r\n    </host>\r\n    <runstats>\r\n        <finished time=\"1757176069\" timestr=\"Sat Sep  6 12:27:49 2025\"\r\n            summary=\"Nmap done at Sat Sep  6 12:27:49 2025; 256 IP addresses (6 hosts up) scanned in 206.46 seconds\"\r\n            elapsed=\"206.46\" exit=\"success\" />\r\n        <hosts up=\"2\" down=\"254\" total=\"256\" />\r\n    </runstats>\r\n</nmaprun>",
							"options": {
								"raw": {
									"language": "xml"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{ErabliereA_ID}}/Appareil/nmapscan",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{ErabliereA_ID}}",
								"Appareil",
								"nmapscan"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "tokenType",
				"value": "",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "{{currentAccessToken}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"if (pm.environment.get(\"Authentification.Activee\") == \"true\") {",
					"    const echoPostRequest = {",
					"        url: pm.environment.get(\"Authentification.Url\"),",
					"        method: 'POST',",
					"        header: 'Content-Type:application/x-www-form-urlencoded\\nAuthorization:Basic ' + ",
					"            pm.environment.get(\"Basic.Auth\"),",
					"        body: {",
					"            mode: 'application/x-www-form-urlencoded',",
					"            raw: \"grant_type=client_credentials&scope=erabliereapi\"",
					"        }",
					"    };",
					"",
					"    var getToken = true;",
					"",
					"    if (!pm.environment.get('accessTokenExpiry') || ",
					"        !pm.environment.get('currentAccessToken')) {",
					"        console.log('Token or expiry date are missing')",
					"    } else if (pm.environment.get('accessTokenExpiry') <= (new Date()).getTime()) {",
					"        console.log('Token is expired')",
					"    } else {",
					"        getToken = false;",
					"        //console.log('Token and expiry date are all good');",
					"    }",
					"",
					"    if (getToken === true) {",
					"        pm.sendRequest(echoPostRequest, function (err, res) {",
					"        console.log(err ? err : res.json());",
					"            if (err === null) {",
					"                //console.log('Saving the token and expiry date')",
					"                var responseJson = res.json();",
					"                pm.environment.set('currentAccessToken', responseJson.access_token)",
					"        ",
					"                var expiryDate = new Date();",
					"                expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"                pm.environment.set('accessTokenExpiry', expiryDate.getTime());",
					"            }",
					"        });",
					"    }",
					"}",
					"",
					"pm.collectionVariables.set(\"thisYear\", new Date().getFullYear())"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "nombreErabliere",
			"value": 3
		},
		{
			"key": "nomErabliere",
			"value": "Nebraska aggregate card Future"
		},
		{
			"key": "idErabliere",
			"value": 2
		},
		{
			"key": "dateDonnee",
			"value": "2021-03-27T16:37:25.965Z"
		},
		{
			"key": "dd",
			"value": "2021-03-27T16:36:25.966Z"
		},
		{
			"key": "de",
			"value": "2021-03-27T16:37:25.965Z"
		},
		{
			"key": "temperature",
			"value": ""
		},
		{
			"key": "vaccium",
			"value": ""
		},
		{
			"key": "niveauBassin",
			"value": ""
		},
		{
			"key": "idCapteur",
			"value": ""
		},
		{
			"key": "ErabliereA_ID",
			"value": ""
		},
		{
			"key": "ErabliereB_ID",
			"value": ""
		},
		{
			"key": "ErabliereSaintAlfred_ID",
			"value": ""
		},
		{
			"key": "thisYear",
			"value": ""
		}
	]
}