{
	"info": {
		"_postman_id": "ca22f50d-3bab-40f0-b933-1d32fc4b8636",
		"name": "ErablièreAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Flow 1",
			"item": [
				{
					"name": "Obtenir la liste des érablières",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", listeErabliere.length);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"nomErabliere\", pm.variables.replaceIn(\"{{$randomWords}}\").substr(0, 50));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nom\": \"{{nomErabliere}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trouver l'érablière dans la liste",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(pm.collectionVariables.get(\"nombreErabliere\") + 1);\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", listeErabliere.length);\r",
									"\r",
									"    const erabliere = listeErabliere.find(e => e.nom == pm.collectionVariables.get(\"nomErabliere\"));\r",
									"\r",
									"    pm.collectionVariables.set(\"idErabliere\", erabliere.id);\r",
									"\r",
									"    console.log(\"Id de l'érablière : \" + pm.collectionVariables.get(\"idErabliere\"));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données - Aucune donnée, nouvelle érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle donnée",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateDonnee\", new Date(new Date() - 1000 * 60 * 60 * 24 * 7).toISOString()); // Aujourd'hui - une semaine"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": -15,\r\n  \"nb\": 0,\r\n  \"v\": 0,\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données - Une donnée",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(1);\r",
									"\r",
									"    const donnee = listeErabliere[0];\r",
									"\r",
									"    pm.expect(new Date(donnee.d).toISOString()).to.eq(new Date(pm.collectionVariables.get(\"dateDonnee\")).toISOString());\r",
									"    pm.expect(donnee.t).to.eq(-15);\r",
									"    pm.expect(donnee.v).to.eq(0);\r",
									"    pm.expect(donnee.nb).to.eq(0);\r",
									"    pm.expect(donnee.iddp).to.eq(null);\r",
									"    pm.expect(donnee.nboc).to.eq(0);\r",
									"    pm.expect(donnee.pi).to.eq(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Ajouter une nouvelle donnée Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"dateDonnee\", new Date(new Date() - (1000 * 60 * 60 * 24 * 7) + (1000 * 60)).toISOString()); // Aujourd'hui - une semaine + une minute"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": -16,\r\n  \"nb\": 0,\r\n  \"v\": 0,\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Données -Deux données",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(2);\r",
									"\r",
									"    const donnee = listeErabliere[1];\r",
									"\r",
									"    pm.expect(new Date(donnee.d).toISOString()).to.eq(new Date(pm.collectionVariables.get(\"dateDonnee\")).toISOString());\r",
									"    pm.expect(donnee.t).to.eq(-16);\r",
									"    pm.expect(donnee.v).to.eq(0);\r",
									"    pm.expect(donnee.nb).to.eq(0);\r",
									"    pm.expect(donnee.iddp).to.eq(null);\r",
									"    pm.expect(donnee.nboc).to.eq(0);\r",
									"    pm.expect(donnee.pi).to.eq(null);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}",
								"donnees"
							]
						}
					},
					"response": []
				},
				{
					"name": "Supprimer l'érablière du flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{idErabliere}},\r\n    \"nom\": \"{{nomErabliere}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/erablieres/{{idErabliere}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres",
								"{{idErabliere}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valider la suppression de l'érablière",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Vérifier status réponse.\", () => {\r",
									"    pm.expect(pm.response.code).to.eq(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Vérifier format réponse\", () => {\r",
									"    const listeErabliere = pm.response.json();\r",
									"\r",
									"    pm.expect(listeErabliere).to.ownProperty(\"length\");\r",
									"\r",
									"    pm.expect(listeErabliere.length).to.eq(pm.collectionVariables.get(\"nombreErabliere\") - 1);\r",
									"\r",
									"    pm.collectionVariables.set(\"nombreErabliere\", listeErabliere.length);\r",
									"\r",
									"    const erabliere = listeErabliere.find(e => e.id == pm.collectionVariables.get(\"idErabliere\"));\r",
									"\r",
									"    pm.expect(erabliere).to.eq(undefined);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/erablieres",
							"host": [
								"{{url}}"
							],
							"path": [
								"erablieres"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Preset alimentation",
			"item": [
				{
					"name": "Erabliere 1",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.collectionVariables.set('idErabliere', 1);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Erabliere 2",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.collectionVariables.set('idErabliere', 2);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Erabliere 3",
					"item": [
						{
							"name": "Ajouter une nouvelle donnée",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"dateDonnee\", new Date().toISOString());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"d\": \"{{dateDonnee}}\",\r\n  \"t\": {{temperature}},\r\n  \"nb\": {{niveauBassin}},\r\n  \"v\": {{vaccium}},\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/donnees",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"donnees"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ajouter une nouveau dompeux",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const maintenant = new Date().toISOString();\r",
											"\r",
											"pm.collectionVariables.set(\"dateDonnee\", maintenant);\r",
											"\r",
											"pm.collectionVariables.set(\"dd\", new Date(new Date() - 1000 * 60).toISOString());\r",
											"pm.collectionVariables.set(\"de\", maintenant);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Vérifier status réponse.\", () => {\r",
											"    pm.expect(pm.response.code).to.eq(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"t\": \"{{dateDonnee}}\",\r\n  \"dd\": \"{{dd}}\",\r\n  \"df\": \"{{de}}\",\r\n  \"idErabliere\": {{idErabliere}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/erablieres/{{idErabliere}}/dompeux",
									"host": [
										"{{url}}"
									],
									"path": [
										"erablieres",
										"{{idErabliere}}",
										"dompeux"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.collectionVariables.set('idErabliere', 3);"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"function temperature() {",
							"  var date = new Date();",
							"  var m = date.getMonth();",
							"  var doy = date.getDay();",
							"  var hod = date.getHours();",
							"  return Math.floor((12 * Math.sin((doy-105)*Math.PI/182.5)) + (5*Math.sin(doy*4)) + (5 * Math.sin((hod - 7) * 3.14159 / 12)) * 10);",
							"}",
							"",
							"function vaccium(t) {",
							"  var vaccium = 0",
							"  if (t >= -1 - pm.collectionVariables.get('idErabliere')) {",
							"    vaccium = 243",
							"  }",
							"  if (t > 3) {",
							"      vaccium += 5;",
							"  }",
							"  return vaccium;",
							"}",
							"",
							"function niveauBassin() {",
							"  niveauBassin = 0",
							"  return niveauBassin",
							"}",
							"",
							"pm.collectionVariables.set('temperature', temperature());",
							"pm.collectionVariables.set('vaccium', vaccium(pm.collectionVariables.get('temperature')));",
							"pm.collectionVariables.set('niveauBassin', niveauBassin());"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(\"Requete : \");",
					"console.log(pm.request.body);",
					"console.log(\"Reponse : \");",
					"console.log(pm.response.text());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "nombreErabliere",
			"value": 3
		},
		{
			"key": "nomErabliere",
			"value": "Nebraska aggregate card Future"
		},
		{
			"key": "idErabliere",
			"value": 2
		},
		{
			"key": "dateDonnee",
			"value": "2021-03-27T16:37:25.965Z"
		},
		{
			"key": "dd",
			"value": "2021-03-27T16:36:25.966Z"
		},
		{
			"key": "de",
			"value": "2021-03-27T16:37:25.965Z"
		},
		{
			"key": "temperature",
			"value": ""
		},
		{
			"key": "vaccium",
			"value": ""
		},
		{
			"key": "niveauBassin",
			"value": ""
		}
	]
}